/*
 * ################################################################
 *
 * ProActive: The Java(TM) library for Parallel, Distributed,
 *            Concurrent computing with Security and Mobility
 *
 * Copyright (C) 1997-2007 INRIA/University of Nice-Sophia Antipolis
 * Contact: proactive@objectweb.org
 *
 * This library is free software; you can redistribute it and/or
 * modify it under the terms of the GNU Lesser General Public
 * License as published by the Free Software Foundation; either
 * version 2.1 of the License, or any later version.
 *
 * This library is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
 * Lesser General Public License for more details.
 *
 * You should have received a copy of the GNU Lesser General Public
 * License along with this library; if not, write to the Free Software
 * Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA  02111-1307
 * USA
 *
 *  Initial developer(s):               The ProActive Team
 *                        http://www.inria.fr/oasis/ProActive/contacts.html
 *  Contributor(s):
 *
 * ################################################################
 */
package org.objectweb.proactive.ic2d.gui.util;

import org.objectweb.proactive.ic2d.util.MonitorThread;


/**
 *
 * @author  manu
 */
public class HostDialog extends javax.swing.JDialog {
    private HostDialog() {
    } //empty default constructor to avoid compiler to add one 

    /** Creates new form HostDialog */
    private HostDialog(java.awt.Frame parent, boolean modal) {
        super(parent, modal);
        initComponents();
        setJTextFielddepth(defaultMaxDepth);
        setSize(450, 220);
    }

    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    private void initComponents() {
        getContentPane().setLayout(new java.awt.FlowLayout());

        jPanel1 = new javax.swing.JPanel();
        jPanel2 = new javax.swing.JPanel();
        jPanel3 = new javax.swing.JPanel();
        jPanel4 = new javax.swing.JPanel();
        jPanel5 = new javax.swing.JPanel();
        jPanel6 = new javax.swing.JPanel();

        jTextFieldHostIp = new javax.swing.JTextField(30);
        jLabelHostIp = new javax.swing.JLabel();
        jTextFielddepth = new javax.swing.JTextField(2);
        jTextFieldttr = new javax.swing.JTextField(10);
        jLabel2 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jButtonOK = new javax.swing.JButton();
        jButtonCancel = new javax.swing.JButton();
        jLabel3 = new javax.swing.JLabel();

        jButtonOK.setMnemonic(java.awt.event.KeyEvent.VK_ENTER);
        getRootPane().setDefaultButton(jButtonOK);
        setDefaultCloseOperation(javax.swing.WindowConstants.HIDE_ON_CLOSE);
        setTitle("Adding host and depth to monitor");
        setModal(true);
        setResizable(false);

        jLabelHostIp.setText(
            "Please enter the name or the IP of the host to monitor :");
        jPanel1.add(jLabelHostIp);
        getContentPane().add(jPanel1);

        jTextFieldHostIp.setText("sdfsdfdsfsdfsd");
        jTextFieldHostIp.setSize(400, 18);
        jPanel2.add(jTextFieldHostIp);
        getContentPane().add(jPanel2);

        jLabel2.setText("Hosts will be recursively searched up to a depth of :");
        jPanel3.add(jLabel2);
        jTextFielddepth.setText(defaultMaxDepth);
        jPanel3.add(jTextFielddepth);
        getContentPane().add(jPanel3);

        jLabel4.setText("Time to refresh :");
        jPanel6.add(jLabel4);
        jTextFieldttr.setText(defaultTtr);
        jPanel6.add(jTextFieldttr);
        //getContentPane().add(jPanel6);
        jLabel3.setText(
            "You can change it there or from \"Menu Control, Set Depth Control\" ");
        jPanel4.add(jLabel3);
        getContentPane().add(jPanel4);

        jButtonOK.setText("OK");
        jButtonOK.addActionListener(new java.awt.event.ActionListener() {
                public void actionPerformed(java.awt.event.ActionEvent evt) {
                    jButton1ActionPerformed(evt);
                }
            });

        jPanel5.add(jButtonOK);

        jButtonCancel.setText("Cancel");
        jButtonCancel.addActionListener(new java.awt.event.ActionListener() {
                public void actionPerformed(java.awt.event.ActionEvent evt) {
                    jButton2ActionPerformed(evt);
                }
            });

        jPanel5.add(jButtonCancel);
        getContentPane().add(jPanel5);

        pack();
    }

    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {
        setButtonOK(false);
        setVisible(false);
    }

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {
        setButtonOK(true);
        setVisible(false);
    }

    /**
     * @param args the command line arguments
     */
    public static void main(String[] args) {
        new HostDialog(new javax.swing.JFrame(), true).setVisible(true);
    }

    // Variables declaration - do not modify
    private static javax.swing.JPanel jPanel1;
    private static javax.swing.JPanel jPanel2;
    private static javax.swing.JPanel jPanel3;
    private static javax.swing.JPanel jPanel4;
    private static javax.swing.JPanel jPanel5;
    private static javax.swing.JPanel jPanel6;
    private javax.swing.JButton jButtonOK;
    private javax.swing.JButton jButtonCancel;
    private static javax.swing.JLabel jLabelHostIp;
    private static javax.swing.JLabel jLabel2;
    private static javax.swing.JLabel jLabel3;
    private static javax.swing.JLabel jLabel4;
    private static javax.swing.JTextField jTextFieldHostIp;
    private static javax.swing.JTextField jTextFielddepth;
    private static javax.swing.JTextField jTextFieldttr;
    private boolean buttonOK = false;
    private static HostDialog _singleton = null;
    static private String defaultMaxDepth = "3";
    static private String defaultTtr = "60";

    // End of variables declaration
    public String getJTextFielddepth() {
        return jTextFielddepth.getText();
    }

    public String getJTextFieldttr() {
        return jTextFieldttr.getText();
    }

    public void setJTextFielddepth(String textFielddepth) {
        jTextFielddepth.setText(textFielddepth);
    }

    public String getJTextFieldHostIp() {
        return jTextFieldHostIp.getText();
    }

    public void setJTextFieldHostIp(String textFieldHostIp) {
        jTextFieldHostIp.setText(textFieldHostIp);
    }

    public boolean isButtonOK() {
        return buttonOK;
    }

    public void setButtonOK(boolean buttonOK) {
        this.buttonOK = buttonOK;
    }

    // satic method for singleton pattern
    static public HostDialog showHostDialog(
        javax.swing.JFrame parentComponent, String initialhostvalue) {
        if (null == _singleton) {
            _singleton = new HostDialog(parentComponent, true);
        }
        jTextFieldHostIp.setText(initialhostvalue);
        _singleton.setLocationRelativeTo(parentComponent);
        _singleton.setVisible(true);
        return _singleton;
    }

    public static void openSetDepthControlDialog(
        javax.swing.JFrame parentComponent) {
        if (null == _singleton) {
            _singleton = new HostDialog(parentComponent, true);
        }

        Object result = javax.swing.JOptionPane.showInputDialog(parentComponent, // Component parentComponent,
                "Please enter the max depth control:", // Object message,
                "Set Depth Control", // String title,
                javax.swing.JOptionPane.PLAIN_MESSAGE, // int messageType,
                null, // Icon icon,
                null, // Object[] selectionValues,
                jTextFielddepth.getText() // Object initialSelectionValue)
            );

        if ((result == null) || (!(result instanceof String))) {
            return;
        }
        jTextFielddepth.setText((String) result);
        MonitorThread.setDepth((String) result);
    }

    public static void openSetTtrControlDialog(
        javax.swing.JFrame parentComponent) {
        if (null == _singleton) {
            _singleton = new HostDialog(parentComponent, true);
        }

        Object result = javax.swing.JOptionPane.showInputDialog(parentComponent, // Component parentComponent,
                "Please enter the time to refresh control:", // Object message,
                "Set Time to refresh Control", // String title,
                javax.swing.JOptionPane.PLAIN_MESSAGE, // int messageType,
                null, // Icon icon,
                null, // Object[] selectionValues,
                jTextFieldttr.getText() // Object initialSelectionValue)
            );

        if ((result == null) || (!(result instanceof String))) {
            return;
        }
        jTextFieldttr.setText((String) result);
        MonitorThread.setTtr(Long.parseLong((String) result));
    }
}
