<?xml version="1.0" encoding="UTF-8"?>
<chapter id="descriptor"><title>Configuration File</title>
<!--  File: /home/irosenbe/PA_new_doc/docbook-tuto/test_documentation/descriptor.html  -->
  
    <sect1 remap="h2">
      <title>How many configuration files you need?</title>
      <itemizedlist>
        <listitem>
          <para> You can have just no file.</para>
        </listitem>
        <listitem>
          <para> One file to configure the Manager.</para>
        </listitem>
        <listitem>
          <para><emphasis role="bold">One file for the Manager and all its Tests (recommended).</emphasis></para>
        </listitem>
        <listitem>
          <para> One file for the Manager and one file for each Tests.</para>
        </listitem>
        <listitem>
          <para> No file for the Manager and one file for each Tests.</para>
        </listitem>
</itemizedlist>
    </sect1>
    <sect1 remap="h2">
      <title>A simple Java Properties file</title>
      <para>With this file you can configure Manager's properties and Tests properties. You can have
 just one file for the Manager and all Tests or just one for the Manager and one file for each
 Tests.</para>
      <para>By default the name of this file is the class name of the Manager or the Test which it is
 associated with <emphasis>.prop</emphasis> as file extention. For example:</para>
      <para><emphasis>ManagerToto.class &lt;-&gt; ManagerToto.prop</emphasis></para>
      <sect2 remap="h3">
        <title>How to use it?</title>
        <para>It is very simple to use it. Just do like this example:</para>
        <para>You have a private variable in your Manager or Test:</para>
<screen> private int packetSize = 1024;</screen>
        <para>First add a setter of which it take a <emphasis role="bold">String</emphasis> in input:</para>
<screen>
<literal>
        public void setPacketSize(String value){
          this.packetSize = Integer.parseInt(value);
        }
    </literal>
</screen>
        <para>Next, int the prop file:</para>
<screen> PacketSize=2048 </screen>
        <para><emphasis role="bold">Warning:</emphasis> the key in the prop file must be the same of the setter name without the
 prefix set.</para>
        <para>Now, to load the prop file:</para>
<screen>
<literal>
        // Level: Manager
        // At the execution load properties
        manager.execute(yes);
        // To load properties from differents  types of sources
        manager.loadAttributes();
        manager.loadAttributes(java.io.File propFile);
        manager.loadAttributes(java.util.Properties javaProp);
        // Level: Test
        
        // To load properties from differents  types of sources
        test.loadAttributes();
        test.loadAttributes(java.io.File propFile);
        test.loadAttributes(java.util.Properties javaProp);
      </literal>
</screen>
      </sect2>
    </sect1>
    <sect1 remap="h2">
      <title>A XML properties file</title>
      <para>To configure all from just one file.</para>
      <para>Like a simple prop file this one must be have the same name of the Manager class:</para>
<screen> YourManager &lt;-&gt; YourManager.xml </screen>
      <sect2 remap="h3">
        <title>The structure of the XML document</title>
<screen>
<literal>
            &lt;Manager&gt;
           &lt;name&gt;A Manager &lt;/name&gt;
           &lt;description&gt;Try XML descriptor file. &lt;/description&gt;
           &lt;!-- by default nbRuns is 1, but for benchmarks you can
          change it --&gt;
           &lt;nbRuns&gt;100 &lt;/nbRuns&gt;
            &lt;/Manager&gt;
      </literal>
</screen>
      </sect2>
      <sect2 remap="h3">
        <title>Add a simple group of tests</title>
<screen>
<literal>
         &lt;simpleGroup name='A simple Group' description='just for test.'&gt;
             &lt;unitTest class='test.objectcreation.TestNewActive'/&gt;
             &lt;unitTest class='test.groupmigration.TestGroupCreation'/&gt;
             &lt;unitTest class='test.groupmigration.TestGroupCreation'/&gt;
             &lt;unitTest class='test.objectcreation.TestNewActive'/&gt;
             &lt;/simpleGroup&gt;
    </literal>
</screen>
        <para>You have created a group with 4 tests.</para>
      </sect2>
      <sect2 remap="h3">
        <title>Add a group from a Java package</title>
<screen>
<literal>
  &lt;packageGroup name='A Package Group' description='Construct Group from  package.' 
                dir='/net/home/adicosta/workspace/ProActive/classes' 
                packageName='nonregressiontest' &gt;
 &lt;/packageGroup&gt;
      </literal>
</screen>
        <para>You have created a group with all Tests was found in the package <emphasis>nonregressiontest</emphasis></para>
        <para>With this method you don't have any order on Tests, but you can specify some order:</para>
<screen>
<literal>
 &lt;packageGroup name='A Package Group' description='Construct Group from  package.' 
                dir='/net/home/adicosta/workspace/ProActive/classes' 
                packageName='nonregressiontest' &gt;
 &lt;unitTest class='nonregressiontest.runtime.defaultruntime.Test' /&gt;
                         &lt;unitTest class='nonregressiontest.node.nodefactory.Test' /&gt;
                         &lt;unitTest class='nonregressiontest.stub.stubgeneration.Test' /&gt;
                         &lt;unitTest class='nonregressiontest.stub.stubinterface.Test' /&gt;
                         &lt;unitTest class='nonregressiontest.activeobject.creation.local.newactive.Test' /&gt;
                         &lt;unitTest class='nonregressiontest.activeobject.creation.local.turnactive.Test' /&gt;
                         &lt;unitTest class='nonregressiontest.activeobject.creation.remote.newactive.Test' /&gt;
                         &lt;unitTest class='nonregressiontest.activeobject.creation.remote.turnactive.Test' /&gt;
 &lt;/packageGroup&gt;
      </literal>
</screen>
        <para>All classes in package nonregressiontest are added, only the specified tests are sorted.</para>
      </sect2>
      <sect2 remap="h3">
        <title>Add a group of InterLinked Tests</title>
<screen>
<literal>
 &lt;interLinkedGroup name='Group with interlinked tests' description='Construct a Group with interlinked tests'&gt;
         &lt;!-- Declare the tests in the execution order --&gt;
 &lt;idTest class='test.groupmigration.TestGroupCreation' id='1'/&gt;
 &lt;idTest class='test.groupmigration.TestGroupMigration' id='2'/&gt;
 &lt;idTest class='test.groupmigration.TestGroupMessage' id='3'/&gt;
         &lt;interLinks&gt;
                 &lt;link id='3'&gt;
                   &lt;parent id='1'/&gt;
                   &lt;parent id='2'/&gt;
                 &lt;/link&gt;
           &lt;/interLinks&gt;
 &lt;/interLinkedGroup&gt;
          </literal>
</screen>
        <para>TestGroupMessage depends from TestGroupCreation and TestGroupMigration.</para>
      </sect2>
      <sect2 remap="h3">
        <title>How to configure log4j</title>
<screen>
<literal>
 &lt;log4j&gt;
/net/home/adicosta/log4j/config/file/path/log4j-file-config
 &lt;/log4j&gt;
          </literal>
</screen>
      </sect2>
      <sect2 remap="h3">
        <title>How to configure results output?</title>
        <para>Results in a text file:</para>
<screen> &lt;result type='text' file='/net/home/adicosta/tmp/results.txt' /&gt; </screen>
        <para>Results in a HTML file:</para>
<screen> &lt;result type='html' file='/net/home/adicosta/tmp/results.html' /&gt; </screen>
        <para>Results in the console:</para>
<screen> &lt;result type='console' /&gt; </screen>
        <para>Results in a XML file:</para>
<screen> &lt;result type='xml' file='/net/home/adicosta/tmp/results.xml'/&gt; </screen>
        <para>To execute all with the XML file configuration:</para>
<screen> 
Manager manager = new Manager(java.io.File xmlConfigFile);
manager.execute();
</screen>
      </sect2>
      <sect2 remap="h3">
        <title>Configure properties</title>
        <para>Like in simple prop file:</para>
<screen>
<literal>
         &lt;properties&gt;
           &lt;prop key='RemoteHostname' value='nahuel'/&gt;
        &lt;/properties&gt;
          </literal>
</screen>
      </sect2>
    </sect1>
  
</chapter>
