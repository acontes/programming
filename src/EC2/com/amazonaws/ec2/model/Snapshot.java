
package com.amazonaws.ec2.model;

import javax.xml.bind.annotation.XmlAccessType;
import javax.xml.bind.annotation.XmlAccessorType;
import javax.xml.bind.annotation.XmlElement;
import javax.xml.bind.annotation.XmlType;


/**
 * <p>Java class for Snapshot complex type.
 * 
 * <p>The following schema fragment specifies the expected content contained within this class.
 * 
 * <pre>
 * &lt;complexType name="Snapshot">
 *   &lt;complexContent>
 *     &lt;restriction base="{http://www.w3.org/2001/XMLSchema}anyType">
 *       &lt;sequence>
 *         &lt;element name="SnapshotId" type="{http://www.w3.org/2001/XMLSchema}string"/>
 *         &lt;element name="VolumeId" type="{http://www.w3.org/2001/XMLSchema}string"/>
 *         &lt;element name="Status" type="{http://www.w3.org/2001/XMLSchema}string"/>
 *         &lt;element name="StartTime" type="{http://www.w3.org/2001/XMLSchema}string"/>
 *         &lt;element name="Progress" type="{http://www.w3.org/2001/XMLSchema}string"/>
 *       &lt;/sequence>
 *     &lt;/restriction>
 *   &lt;/complexContent>
 * &lt;/complexType>
 * </pre>
 * Generated by AWS Code Generator
 * <p/>
 * Thu Aug 28 20:50:29 PDT 2008
 * 
 */
@XmlAccessorType(XmlAccessType.FIELD)
@XmlType(name = "Snapshot", propOrder = {
    "snapshotId",
    "volumeId",
    "status",
    "startTime",
    "progress"
})
public class Snapshot {

    @XmlElement(name = "SnapshotId", required = true)
    protected String snapshotId;
    @XmlElement(name = "VolumeId", required = true)
    protected String volumeId;
    @XmlElement(name = "Status", required = true)
    protected String status;
    @XmlElement(name = "StartTime", required = true)
    protected String startTime;
    @XmlElement(name = "Progress", required = true)
    protected String progress;

    /**
     * Default constructor
     * 
     */
    public Snapshot() {
        super();
    }

    /**
     * Value constructor
     * 
     */
    public Snapshot(final String snapshotId, final String volumeId, final String status, final String startTime, final String progress) {
        this.snapshotId = snapshotId;
        this.volumeId = volumeId;
        this.status = status;
        this.startTime = startTime;
        this.progress = progress;
    }

    /**
     * Gets the value of the snapshotId property.
     * 
     * @return
     *     possible object is
     *     {@link String }
     *     
     */
    public String getSnapshotId() {
        return snapshotId;
    }

    /**
     * Sets the value of the snapshotId property.
     * 
     * @param value
     *     allowed object is
     *     {@link String }
     *     
     */
    public void setSnapshotId(String value) {
        this.snapshotId = value;
    }

    public boolean isSetSnapshotId() {
        return (this.snapshotId!= null);
    }

    /**
     * Gets the value of the volumeId property.
     * 
     * @return
     *     possible object is
     *     {@link String }
     *     
     */
    public String getVolumeId() {
        return volumeId;
    }

    /**
     * Sets the value of the volumeId property.
     * 
     * @param value
     *     allowed object is
     *     {@link String }
     *     
     */
    public void setVolumeId(String value) {
        this.volumeId = value;
    }

    public boolean isSetVolumeId() {
        return (this.volumeId!= null);
    }

    /**
     * Gets the value of the status property.
     * 
     * @return
     *     possible object is
     *     {@link String }
     *     
     */
    public String getStatus() {
        return status;
    }

    /**
     * Sets the value of the status property.
     * 
     * @param value
     *     allowed object is
     *     {@link String }
     *     
     */
    public void setStatus(String value) {
        this.status = value;
    }

    public boolean isSetStatus() {
        return (this.status!= null);
    }

    /**
     * Gets the value of the startTime property.
     * 
     * @return
     *     possible object is
     *     {@link String }
     *     
     */
    public String getStartTime() {
        return startTime;
    }

    /**
     * Sets the value of the startTime property.
     * 
     * @param value
     *     allowed object is
     *     {@link String }
     *     
     */
    public void setStartTime(String value) {
        this.startTime = value;
    }

    public boolean isSetStartTime() {
        return (this.startTime!= null);
    }

    /**
     * Gets the value of the progress property.
     * 
     * @return
     *     possible object is
     *     {@link String }
     *     
     */
    public String getProgress() {
        return progress;
    }

    /**
     * Sets the value of the progress property.
     * 
     * @param value
     *     allowed object is
     *     {@link String }
     *     
     */
    public void setProgress(String value) {
        this.progress = value;
    }

    public boolean isSetProgress() {
        return (this.progress!= null);
    }

    /**
     * Sets the value of the SnapshotId property.
     * 
     * @param value
     * @return
     *     this instance
     */
    public Snapshot withSnapshotId(String value) {
        setSnapshotId(value);
        return this;
    }

    /**
     * Sets the value of the VolumeId property.
     * 
     * @param value
     * @return
     *     this instance
     */
    public Snapshot withVolumeId(String value) {
        setVolumeId(value);
        return this;
    }

    /**
     * Sets the value of the Status property.
     * 
     * @param value
     * @return
     *     this instance
     */
    public Snapshot withStatus(String value) {
        setStatus(value);
        return this;
    }

    /**
     * Sets the value of the StartTime property.
     * 
     * @param value
     * @return
     *     this instance
     */
    public Snapshot withStartTime(String value) {
        setStartTime(value);
        return this;
    }

    /**
     * Sets the value of the Progress property.
     * 
     * @param value
     * @return
     *     this instance
     */
    public Snapshot withProgress(String value) {
        setProgress(value);
        return this;
    }
    

    /**
     * 
     * XML fragment representation of this object
     * 
     * @return XML fragment for this object. Name for outer
     * tag expected to be set by calling method. This fragment
     * returns inner properties representation only
     */
    protected String toXMLFragment() {
        StringBuffer xml = new StringBuffer();
        if (isSetSnapshotId()) {
            xml.append("<SnapshotId>");
            xml.append(escapeXML(getSnapshotId()));
            xml.append("</SnapshotId>");
        }
        if (isSetVolumeId()) {
            xml.append("<VolumeId>");
            xml.append(escapeXML(getVolumeId()));
            xml.append("</VolumeId>");
        }
        if (isSetStatus()) {
            xml.append("<Status>");
            xml.append(escapeXML(getStatus()));
            xml.append("</Status>");
        }
        if (isSetStartTime()) {
            xml.append("<StartTime>");
            xml.append(escapeXML(getStartTime()));
            xml.append("</StartTime>");
        }
        if (isSetProgress()) {
            xml.append("<Progress>");
            xml.append(escapeXML(getProgress()));
            xml.append("</Progress>");
        }
        return xml.toString();
    }

    /**
     * 
     * Escape XML special characters
     */
    private String escapeXML(String string) {
        StringBuffer sb = new StringBuffer();
        int length = string.length();
        for (int i = 0; i < length; ++i) {
            char c = string.charAt(i);
            switch (c) {
            case '&':
                sb.append("&amp;");
                break;
            case '<':
                sb.append("&lt;");
                break;
            case '>':
                sb.append("&gt;");
                break;
            case '\'':
                sb.append("&#039;");
                break;
            case '"':
                sb.append("&quot;");
                break;
            default:
                sb.append(c);
            }
        }
        return sb.toString();
    }



    /**
     *
     * JSON fragment representation of this object
     *
     * @return JSON fragment for this object. Name for outer
     * object expected to be set by calling method. This fragment
     * returns inner properties representation only
     *
     */
    protected String toJSONFragment() {
        StringBuffer json = new StringBuffer();
        boolean first = true;
        if (isSetSnapshotId()) {
            if (!first) json.append(", ");
            json.append(quoteJSON("SnapshotId"));
            json.append(" : ");
            json.append(quoteJSON(getSnapshotId()));
            first = false;
        }
        if (isSetVolumeId()) {
            if (!first) json.append(", ");
            json.append(quoteJSON("VolumeId"));
            json.append(" : ");
            json.append(quoteJSON(getVolumeId()));
            first = false;
        }
        if (isSetStatus()) {
            if (!first) json.append(", ");
            json.append(quoteJSON("Status"));
            json.append(" : ");
            json.append(quoteJSON(getStatus()));
            first = false;
        }
        if (isSetStartTime()) {
            if (!first) json.append(", ");
            json.append(quoteJSON("StartTime"));
            json.append(" : ");
            json.append(quoteJSON(getStartTime()));
            first = false;
        }
        if (isSetProgress()) {
            if (!first) json.append(", ");
            json.append(quoteJSON("Progress"));
            json.append(" : ");
            json.append(quoteJSON(getProgress()));
            first = false;
        }
        return json.toString();
    }

    /**
     *
     * Quote JSON string
     */
    private String quoteJSON(String string) {
        StringBuffer sb = new StringBuffer();
        sb.append("\"");
        int length = string.length();
        for (int i = 0; i < length; ++i) {
            char c = string.charAt(i);
            switch (c) {
            case '"':
                sb.append("\\\"");
                break;
            case '\\':
                sb.append("\\\\");
                break;
            case '/':
                sb.append("\\/");
                break;
            case '\b':
                sb.append("\\b");
                break;
            case '\f':
                sb.append("\\f");
                break;
            case '\n':
                sb.append("\\n");
                break;
            case '\r':
                sb.append("\\r");
                break;
            case '\t':
                sb.append("\\t");
                break;
            default:
                if (c <  ' ') {
                    sb.append("\\u" + String.format("%03x", Integer.valueOf(c)));
                } else {
                sb.append(c);
            }
        }
        }
        sb.append("\"");
        return sb.toString();
    }


}
