
package com.amazonaws.ec2.model;

import javax.xml.bind.annotation.XmlAccessType;
import javax.xml.bind.annotation.XmlAccessorType;
import javax.xml.bind.annotation.XmlElement;
import javax.xml.bind.annotation.XmlRootElement;
import javax.xml.bind.annotation.XmlType;


/**
 * <p>Java class for anonymous complex type.
 * 
 * <p>The following schema fragment specifies the expected content contained within this class.
 * 
 * <pre>
 * &lt;complexType>
 *   &lt;complexContent>
 *     &lt;restriction base="{http://www.w3.org/2001/XMLSchema}anyType">
 *       &lt;sequence>
 *         &lt;element name="Size" type="{http://www.w3.org/2001/XMLSchema}string"/>
 *         &lt;element name="SnapshotId" type="{http://www.w3.org/2001/XMLSchema}string"/>
 *         &lt;element name="Zone" type="{http://www.w3.org/2001/XMLSchema}string"/>
 *       &lt;/sequence>
 *     &lt;/restriction>
 *   &lt;/complexContent>
 * &lt;/complexType>
 * </pre>
 * Generated by AWS Code Generator
 * <p/>
 * Thu Aug 28 20:50:29 PDT 2008
 * 
 */
@XmlAccessorType(XmlAccessType.FIELD)
@XmlType(name = "", propOrder = {
    "size",
    "snapshotId",
    "zone"
})
@XmlRootElement(name = "CreateVolumeRequest")
public class CreateVolumeRequest {

    @XmlElement(name = "Size", required = true)
    protected String size;
    @XmlElement(name = "SnapshotId", required = true)
    protected String snapshotId;
    @XmlElement(name = "Zone", required = true)
    protected String zone;

    /**
     * Default constructor
     * 
     */
    public CreateVolumeRequest() {
        super();
    }

    /**
     * Value constructor
     * 
     */
    public CreateVolumeRequest(final String size, final String snapshotId, final String zone) {
        this.size = size;
        this.snapshotId = snapshotId;
        this.zone = zone;
    }

    /**
     * Gets the value of the size property.
     * 
     * @return
     *     possible object is
     *     {@link String }
     *     
     */
    public String getSize() {
        return size;
    }

    /**
     * Sets the value of the size property.
     * 
     * @param value
     *     allowed object is
     *     {@link String }
     *     
     */
    public void setSize(String value) {
        this.size = value;
    }

    public boolean isSetSize() {
        return (this.size!= null);
    }

    /**
     * Gets the value of the snapshotId property.
     * 
     * @return
     *     possible object is
     *     {@link String }
     *     
     */
    public String getSnapshotId() {
        return snapshotId;
    }

    /**
     * Sets the value of the snapshotId property.
     * 
     * @param value
     *     allowed object is
     *     {@link String }
     *     
     */
    public void setSnapshotId(String value) {
        this.snapshotId = value;
    }

    public boolean isSetSnapshotId() {
        return (this.snapshotId!= null);
    }

    /**
     * Gets the value of the zone property.
     * 
     * @return
     *     possible object is
     *     {@link String }
     *     
     */
    public String getZone() {
        return zone;
    }

    /**
     * Sets the value of the zone property.
     * 
     * @param value
     *     allowed object is
     *     {@link String }
     *     
     */
    public void setZone(String value) {
        this.zone = value;
    }

    public boolean isSetZone() {
        return (this.zone!= null);
    }

    /**
     * Sets the value of the Size property.
     * 
     * @param value
     * @return
     *     this instance
     */
    public CreateVolumeRequest withSize(String value) {
        setSize(value);
        return this;
    }

    /**
     * Sets the value of the SnapshotId property.
     * 
     * @param value
     * @return
     *     this instance
     */
    public CreateVolumeRequest withSnapshotId(String value) {
        setSnapshotId(value);
        return this;
    }

    /**
     * Sets the value of the Zone property.
     * 
     * @param value
     * @return
     *     this instance
     */
    public CreateVolumeRequest withZone(String value) {
        setZone(value);
        return this;
    }
    


    /**
     *
     * JSON fragment representation of this object
     *
     * @return JSON fragment for this object. Name for outer
     * object expected to be set by calling method. This fragment
     * returns inner properties representation only
     *
     */
    protected String toJSONFragment() {
        StringBuffer json = new StringBuffer();
        boolean first = true;
        if (isSetSize()) {
            if (!first) json.append(", ");
            json.append(quoteJSON("Size"));
            json.append(" : ");
            json.append(quoteJSON(getSize()));
            first = false;
        }
        if (isSetSnapshotId()) {
            if (!first) json.append(", ");
            json.append(quoteJSON("SnapshotId"));
            json.append(" : ");
            json.append(quoteJSON(getSnapshotId()));
            first = false;
        }
        if (isSetZone()) {
            if (!first) json.append(", ");
            json.append(quoteJSON("Zone"));
            json.append(" : ");
            json.append(quoteJSON(getZone()));
            first = false;
        }
        return json.toString();
    }

    /**
     *
     * Quote JSON string
     */
    private String quoteJSON(String string) {
        StringBuffer sb = new StringBuffer();
        sb.append("\"");
        int length = string.length();
        for (int i = 0; i < length; ++i) {
            char c = string.charAt(i);
            switch (c) {
            case '"':
                sb.append("\\\"");
                break;
            case '\\':
                sb.append("\\\\");
                break;
            case '/':
                sb.append("\\/");
                break;
            case '\b':
                sb.append("\\b");
                break;
            case '\f':
                sb.append("\\f");
                break;
            case '\n':
                sb.append("\\n");
                break;
            case '\r':
                sb.append("\\r");
                break;
            case '\t':
                sb.append("\\t");
                break;
            default:
                if (c <  ' ') {
                    sb.append("\\u" + String.format("%03x", Integer.valueOf(c)));
                } else {
                sb.append(c);
            }
        }
        }
        sb.append("\"");
        return sb.toString();
    }


}
