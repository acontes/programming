package com.amazonaws.ec2.model;

import java.util.ArrayList;
import java.util.List;
import javax.xml.bind.annotation.XmlAccessType;
import javax.xml.bind.annotation.XmlAccessorType;
import javax.xml.bind.annotation.XmlElement;
import javax.xml.bind.annotation.XmlType;


/**
 * <p>Java class for IpPermission complex type.
 * 
 * <p>The following schema fragment specifies the expected content contained within this class.
 * 
 * <pre>
 * &lt;complexType name="IpPermission">
 *   &lt;complexContent>
 *     &lt;restriction base="{http://www.w3.org/2001/XMLSchema}anyType">
 *       &lt;sequence>
 *         &lt;element name="IpProtocol" type="{http://www.w3.org/2001/XMLSchema}string"/>
 *         &lt;element name="FromPort" type="{http://www.w3.org/2001/XMLSchema}int"/>
 *         &lt;element name="ToPort" type="{http://www.w3.org/2001/XMLSchema}int"/>
 *         &lt;element name="UserIdGroupPair" type="{http://ec2.amazonaws.com/doc/2008-05-05/}UserIdGroupPair" maxOccurs="unbounded"/>
 *         &lt;element name="IpRange" type="{http://www.w3.org/2001/XMLSchema}string" maxOccurs="unbounded"/>
 *       &lt;/sequence>
 *     &lt;/restriction>
 *   &lt;/complexContent>
 * &lt;/complexType>
 * </pre>
 * Generated by AWS Code Generator
 * <p/>
 * Thu Aug 28 20:50:29 PDT 2008
 * 
 */
@XmlAccessorType(XmlAccessType.FIELD)
@XmlType(name = "IpPermission", propOrder = { "ipProtocol", "fromPort", "toPort", "userIdGroupPair",
        "ipRange" })
public class IpPermission {

    @XmlElement(name = "IpProtocol", required = true)
    protected String ipProtocol;
    @XmlElement(name = "FromPort")
    protected int fromPort;
    @XmlElement(name = "ToPort")
    protected int toPort;
    @XmlElement(name = "UserIdGroupPair", required = true)
    protected List<UserIdGroupPair> userIdGroupPair;
    @XmlElement(name = "IpRange", required = true)
    protected List<String> ipRange;

    /**
     * Default constructor
     * 
     */
    public IpPermission() {
        super();
    }

    /**
     * Value constructor
     * 
     */
    public IpPermission(final String ipProtocol, final int fromPort, final int toPort,
            final List<UserIdGroupPair> userIdGroupPair, final List<String> ipRange) {
        this.ipProtocol = ipProtocol;
        this.fromPort = fromPort;
        this.toPort = toPort;
        this.userIdGroupPair = userIdGroupPair;
        this.ipRange = ipRange;
    }

    /**
     * Gets the value of the ipProtocol property.
     * 
     * @return
     *     possible object is
     *     {@link String }
     *     
     */
    public String getIpProtocol() {
        return ipProtocol;
    }

    /**
     * Sets the value of the ipProtocol property.
     * 
     * @param value
     *     allowed object is
     *     {@link String }
     *     
     */
    public void setIpProtocol(String value) {
        this.ipProtocol = value;
    }

    public boolean isSetIpProtocol() {
        return (this.ipProtocol != null);
    }

    /**
     * Gets the value of the fromPort property.
     * 
     */
    public int getFromPort() {
        return fromPort;
    }

    /**
     * Sets the value of the fromPort property.
     * 
     */
    public void setFromPort(int value) {
        this.fromPort = value;
    }

    public boolean isSetFromPort() {
        return true;
    }

    /**
     * Gets the value of the toPort property.
     * 
     */
    public int getToPort() {
        return toPort;
    }

    /**
     * Sets the value of the toPort property.
     * 
     */
    public void setToPort(int value) {
        this.toPort = value;
    }

    public boolean isSetToPort() {
        return true;
    }

    /**
     * Gets the value of the userIdGroupPair property.
     * 
     * <p>
     * This accessor method returns a reference to the live list,
     * not a snapshot. Therefore any modification you make to the
     * returned list will be present inside the JAXB object.
     * This is why there is not a <CODE>set</CODE> method for the userIdGroupPair property.
     * 
     * <p>
     * For example, to add a new item, do as follows:
     * <pre>
     *    getUserIdGroupPair().add(newItem);
     * </pre>
     * 
     * 
     * <p>
     * Objects of the following type(s) are allowed in the list
     * {@link UserIdGroupPair }
     * 
     * 
     */
    public List<UserIdGroupPair> getUserIdGroupPair() {
        if (userIdGroupPair == null) {
            userIdGroupPair = new ArrayList<UserIdGroupPair>();
        }
        return this.userIdGroupPair;
    }

    public boolean isSetUserIdGroupPair() {
        return ((this.userIdGroupPair != null) && (!this.userIdGroupPair.isEmpty()));
    }

    public void unsetUserIdGroupPair() {
        this.userIdGroupPair = null;
    }

    /**
     * Gets the value of the ipRange property.
     * 
     * <p>
     * This accessor method returns a reference to the live list,
     * not a snapshot. Therefore any modification you make to the
     * returned list will be present inside the JAXB object.
     * This is why there is not a <CODE>set</CODE> method for the ipRange property.
     * 
     * <p>
     * For example, to add a new item, do as follows:
     * <pre>
     *    getIpRange().add(newItem);
     * </pre>
     * 
     * 
     * <p>
     * Objects of the following type(s) are allowed in the list
     * {@link String }
     * 
     * 
     */
    public List<String> getIpRange() {
        if (ipRange == null) {
            ipRange = new ArrayList<String>();
        }
        return this.ipRange;
    }

    public boolean isSetIpRange() {
        return ((this.ipRange != null) && (!this.ipRange.isEmpty()));
    }

    public void unsetIpRange() {
        this.ipRange = null;
    }

    /**
     * Sets the value of the IpProtocol property.
     * 
     * @param value
     * @return
     *     this instance
     */
    public IpPermission withIpProtocol(String value) {
        setIpProtocol(value);
        return this;
    }

    /**
     * Sets the value of the FromPort property.
     * 
     * @param value
     * @return
     *     this instance
     */
    public IpPermission withFromPort(int value) {
        setFromPort(value);
        return this;
    }

    /**
     * Sets the value of the ToPort property.
     * 
     * @param value
     * @return
     *     this instance
     */
    public IpPermission withToPort(int value) {
        setToPort(value);
        return this;
    }

    /**
     * Sets the value of the UserIdGroupPair property.
     * 
     * @param values
     * @return
     *     this instance
     */
    public IpPermission withUserIdGroupPair(UserIdGroupPair... values) {
        for (UserIdGroupPair value : values) {
            getUserIdGroupPair().add(value);
        }
        return this;
    }

    /**
     * Sets the value of the IpRange property.
     * 
     * @param values
     * @return
     *     this instance
     */
    public IpPermission withIpRange(String... values) {
        for (String value : values) {
            getIpRange().add(value);
        }
        return this;
    }

    /**
     * Sets the value of the userIdGroupPair property.
     * 
     * @param userIdGroupPair
     *     allowed object is
     *     {@link UserIdGroupPair }
     *     
     */
    public void setUserIdGroupPair(List<UserIdGroupPair> userIdGroupPair) {
        this.userIdGroupPair = userIdGroupPair;
    }

    /**
     * Sets the value of the ipRange property.
     * 
     * @param ipRange
     *     allowed object is
     *     {@link String }
     *     
     */
    public void setIpRange(List<String> ipRange) {
        this.ipRange = ipRange;
    }

    /**
     * 
     * XML fragment representation of this object
     * 
     * @return XML fragment for this object. Name for outer
     * tag expected to be set by calling method. This fragment
     * returns inner properties representation only
     */
    protected String toXMLFragment() {
        StringBuffer xml = new StringBuffer();
        if (isSetIpProtocol()) {
            xml.append("<IpProtocol>");
            xml.append(escapeXML(getIpProtocol()));
            xml.append("</IpProtocol>");
        }
        if (isSetFromPort()) {
            xml.append("<FromPort>");
            xml.append(getFromPort() + "");
            xml.append("</FromPort>");
        }
        if (isSetToPort()) {
            xml.append("<ToPort>");
            xml.append(getToPort() + "");
            xml.append("</ToPort>");
        }
        java.util.List<UserIdGroupPair> userIdGroupPairList = getUserIdGroupPair();
        for (UserIdGroupPair userIdGroupPair : userIdGroupPairList) {
            xml.append("<UserIdGroupPair>");
            xml.append(userIdGroupPair.toXMLFragment());
            xml.append("</UserIdGroupPair>");
        }
        java.util.List<String> ipRangeList = getIpRange();
        for (String ipRange : ipRangeList) {
            xml.append("<IpRange>");
            xml.append(escapeXML(ipRange));
            xml.append("</IpRange>");
        }
        return xml.toString();
    }

    /**
     * 
     * Escape XML special characters
     */
    private String escapeXML(String string) {
        StringBuffer sb = new StringBuffer();
        int length = string.length();
        for (int i = 0; i < length; ++i) {
            char c = string.charAt(i);
            switch (c) {
                case '&':
                    sb.append("&amp;");
                    break;
                case '<':
                    sb.append("&lt;");
                    break;
                case '>':
                    sb.append("&gt;");
                    break;
                case '\'':
                    sb.append("&#039;");
                    break;
                case '"':
                    sb.append("&quot;");
                    break;
                default:
                    sb.append(c);
            }
        }
        return sb.toString();
    }

    /**
     *
     * JSON fragment representation of this object
     *
     * @return JSON fragment for this object. Name for outer
     * object expected to be set by calling method. This fragment
     * returns inner properties representation only
     *
     */
    protected String toJSONFragment() {
        StringBuffer json = new StringBuffer();
        boolean first = true;
        if (isSetIpProtocol()) {
            if (!first)
                json.append(", ");
            json.append(quoteJSON("IpProtocol"));
            json.append(" : ");
            json.append(quoteJSON(getIpProtocol()));
            first = false;
        }
        if (isSetFromPort()) {
            if (!first)
                json.append(", ");
            json.append(quoteJSON("FromPort"));
            json.append(" : ");
            json.append(quoteJSON(getFromPort() + ""));
            first = false;
        }
        if (isSetToPort()) {
            if (!first)
                json.append(", ");
            json.append(quoteJSON("ToPort"));
            json.append(" : ");
            json.append(quoteJSON(getToPort() + ""));
            first = false;
        }
        if (isSetUserIdGroupPair()) {
            if (!first)
                json.append(", ");
            json.append("\"UserIdGroupPair\" : [");
            java.util.List<UserIdGroupPair> userIdGroupPairList = getUserIdGroupPair();
            for (UserIdGroupPair userIdGroupPair : userIdGroupPairList) {
                if (userIdGroupPairList.indexOf(userIdGroupPair) > 0)
                    json.append(", ");
                json.append("{");
                json.append("");
                json.append(userIdGroupPair.toJSONFragment());
                json.append("}");
                first = false;
            }
            json.append("]");
        }
        if (isSetIpRange()) {
            if (!first)
                json.append(", ");
            json.append("\"IpRange\" : [");
            java.util.List<String> ipRangeList = getIpRange();
            for (String ipRange : ipRangeList) {
                if (ipRangeList.indexOf(ipRange) > 0)
                    json.append(", ");
                json.append(quoteJSON(ipRange));
            }
            json.append("]");
            first = false;
        }
        return json.toString();
    }

    /**
     *
     * Quote JSON string
     */
    private String quoteJSON(String string) {
        StringBuffer sb = new StringBuffer();
        sb.append("\"");
        int length = string.length();
        for (int i = 0; i < length; ++i) {
            char c = string.charAt(i);
            switch (c) {
                case '"':
                    sb.append("\\\"");
                    break;
                case '\\':
                    sb.append("\\\\");
                    break;
                case '/':
                    sb.append("\\/");
                    break;
                case '\b':
                    sb.append("\\b");
                    break;
                case '\f':
                    sb.append("\\f");
                    break;
                case '\n':
                    sb.append("\\n");
                    break;
                case '\r':
                    sb.append("\\r");
                    break;
                case '\t':
                    sb.append("\\t");
                    break;
                default:
                    if (c < ' ') {
                        sb.append("\\u" + String.format("%03x", Integer.valueOf(c)));
                    } else {
                        sb.append(c);
                    }
            }
        }
        sb.append("\"");
        return sb.toString();
    }

}
