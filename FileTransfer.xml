<?xml version="1.0" encoding="UTF-8"?>
<chapter><title>ProActive File Transfer Model</title>

<!--  File: /home/irosenbe/PA_new_doc/docbook-tuto/doc-files/FileTransfer.html  -->
  

    
    <para> The following document describes our current proposal model for supporting file transfer in
 ProActive.</para>
    <sect1 remap="h2">
      <title><anchor id="dbdoclet.id.FileTransfer_html_intro" xreflabel="Introduction and Concepts"/>Introduction and Concepts</title>
      <para>We believe it is interesting for us, and the ProActive users, to provide support for
 FileTransfer</para>
      <para>Currently we recognize the following type of files:</para>
      <itemizedlist>
        <listitem>
          <para> 1. ProActive Deployment Required Files (jars, policy, log4, etc)</para>
        </listitem>
        <listitem>
          <para> 2. User Application Data Files (User application input)</para>
        </listitem>
        <listitem>
          <para> 3. User Application Code Files (jar, classes or native code)</para>
        </listitem>
        <listitem>
          <para> 4. JDK files (the jvm runtime and libraries)</para>
        </listitem>
</itemizedlist>
      <para>Also, this files can be transfered:</para>
      <itemizedlist>
        <listitem>
          <para> 1. To a remote location (Deploy)</para>
        </listitem>
        <listitem>
          <para> 2. From a remote location (Retrieve)</para>
        </listitem>
</itemizedlist>
      <para>The FileTransfer could happen:</para>
      <itemizedlist>
        <listitem>
          <para> 1. Before deployment.</para>
        </listitem>
        <listitem>
          <para> 2. After deployment but before the user launches his/her
 application.</para>
        </listitem>
        <listitem>
          <para> 3. During user application.</para>
        </listitem>
        <listitem>
          <para> 4. After the user application has finished.</para>
        </listitem>
</itemizedlist>
    </sect1>
    <sect1 remap="h2">
      <title><anchor id="dbdoclet.id.FileTransfer_html_objectives" xreflabel="Objectives"/>Objectives</title>
      <sect2 remap="h3">
        <title>Main objective</title>
        <itemizedlist>
          <listitem>
            <para> Support File Transfer in ProActive</para>
          </listitem>
</itemizedlist>
      </sect2>
      <sect2 remap="h3">
        <title>Specific Objectives</title>
        <itemizedlist>
          <listitem>
            <para> Specify file transfer in descriptor files.</para>
          </listitem>
          <listitem>
            <para> If the process supports FileTransfer use the protocol support
 (processDefault), or some other protocol.</para>
          </listitem>
          <listitem>
            <para> Else, use FileTransfer as file streaming in ProActive Runtime
 (jvm2jvm)</para>
          </listitem>
</itemizedlist>
      </sect2>
    </sect1>
    <sect1 remap="h2">
      <title><anchor id="dbdoclet.id.FileTransfer_html_protocols" xreflabel="Supported Protocols"/>Supported Protocols</title>
      <itemizedlist>
        <listitem>
          <para> scp</para>
        </listitem>
        <listitem>
          <para> rcp</para>
        </listitem>
        <listitem>
          <para> unicore (Unicore processDefault)</para>
        </listitem>
        <listitem>
          <para> nordugrid (Nordugrid processDefault)</para>
        </listitem>
</itemizedlist>
    </sect1>
    <sect1 remap="h2">
      <title><anchor id="dbdoclet.id.FileTransfer_html_design" xreflabel="FileTransfer Design"/>FileTransfer Design</title>
      <para>FileTransfer definitions are divided in two:</para>
      <sect2 remap="h3">
        <title>Abstract Definition</title>
        <para>This definitions can be referenced from a VirtualNode. They contain the most basic information
 of a FileTransfer:</para>
        <itemizedlist>
          <listitem>
            <para> A unique definition identification name.</para>
          </listitem>
          <listitem>
            <para> Files: source and optionally the destination name.</para>
          </listitem>
          <listitem>
            <para> Directories: source and optionally the destination name. Also the exclude and include
 patterns (not yet available feature).</para>
          </listitem>
</itemizedlist>
        <para>References from the VirtualNode are made using the unique definition name.</para>
      </sect2>
      <sect2 remap="h3">
        <title>Concrete Definition</title>
        <para>These definitions contain more architecture specific information, and are therefore contained
 within the Process:</para>
        <itemizedlist>
          <listitem>
            <para> A reference to an abstract definition, or the &quot;implicit&quot; indicating the reference
 will be inherited from the VirtualNode.</para>
          </listitem>
          <listitem>
            <para> A sequence of Copy Protocols that will be used.</para>
          </listitem>
          <listitem>
            <para> Source and Destination information: prefix, username, hostname, file separator, etc...</para>
          </listitem>
</itemizedlist>
        <para>If some of this information (like username or hostname) can be inferred from the process, it
 is not necessary to declare it in the definition. Optionally, the information contained in the
 protocol can be overridden if specified.</para>
      </sect2>
      <sect2 remap="h3">
        <title>How it works</title>
        <informalfigure>
          <mediaobject>
<!--            <imageobject>
              <imagedata fileref="doc-files/development/imgs/fileTransferDesign.gif" format="GIF"/>            </imageobject>
            <imageobject>
              <imagedata fileref="doc-files/development/imgs/fileTransferDesign.svg" format="SVG"/>            </imageobject>-->
            <imageobject>
              <imagedata fileref="doc-files/development/imgs/fileTransferDesign.png" format="PNG"/>            </imageobject>
          </mediaobject>
        </informalfigure>
        <para>When a FileTransfer starts, both abstract and concrete information are merged using the
 FileTransfer Workshop. The result of this process correspons to a sequence of CopyProtocols, as
 specified in the Concrete Definition.</para>
        <para>Each CopyProtocol will be tried before the deployment takes place, until one succeeds. After
 one succeed are all fail, the process deployment will take place.</para>
      </sect2>
    </sect1>
    <sect1 remap="h2">
      <title><anchor id="dbdoclet.id.FileTransfer_html_xmlTags" xreflabel="Descriptor FileTransfer XML Tags"/>Descriptor FileTransfer XML Tags</title>
      <para>The abstract concept: &quot;FileTransfer&quot; is introduced. This concept is independent off
 the actual process used, but also flexible and configurable at the process level. To define this
 abstract representation of the FileTransfer:</para>
      <screen>
....
&lt;/deployment&gt;
&lt;
<emphasis role="bold">FileTransferDefinitions</emphasis>&gt;
   &lt;
<emphasis role="bold">FileTransfer</emphasis> id=&quot;
<emphasis role="bold">example</emphasis>&quot;&gt;
      &lt;
<emphasis role="bold">file</emphasis> src=&quot;hello.dat&quot; dest=&quot;world.dat&quot;/&gt;
      &lt;
<emphasis role="bold">file</emphasis> src=&quot;hello.jar&quot; dest=&quot;world.jar&quot;/&gt;
      &lt;
<emphasis role="bold">file</emphasis> src=&quot;hello.class&quot; dest=&quot;world.class&quot;/&gt;
      &lt;
<emphasis role="bold">dir</emphasis> src=&quot;exampledir&quot; dest=&quot;exampledir&quot;/&gt;
  &lt;/
<emphasis role="bold">FileTransfer</emphasis>&gt;
  ...
&lt;/
<emphasis role="bold">FileTransferDefinitions</emphasis>&gt;
&lt;infrastructure&gt;
....   
      </screen>
      <para><emphasis role="bold">Note</emphasis>: exclude and include are not yet supported features</para>
      <para>This tags can be referenced at the the VirtualNode level and the Process level.</para>
      <itemizedlist>
        <listitem>
          <para><emphasis role="bold">VirtualNode</emphasis>            <screen>
&lt;VirtualNode name=&quot;exampleVNode&quot; 
<emphasis role="bold">FileTransferDeploy</emphasis>=&quot;
<emphasis role="bold">example</emphasis>&quot;/&gt;
            </screen>
</para>
        </listitem>
        <listitem>
          <para><emphasis role="bold">Process</emphasis>            <screen>
&lt;processDefinition id=&quot;xyz&quot;&gt;
  &lt;sshProcess&gt;...
    
&lt;!-- Inside the process, the FileTransfer tag becomes an element instead of \
an attribute.
            This happens because FileTransfer information is process specif\
ic.
            Note that the destination hostname and username can be omitted,\
 and implicitly inferred 
            from the process information. --&gt;

    &lt;
<emphasis role="bold">FileTransferDeploy</emphasis>=&quot;
<emphasis role="bold">implicit</emphasis>&quot;&gt; 
&lt;!-- referenceID or keyword &quot;implicit&quot; (inherit)--&gt;

      &lt;
<emphasis role="bold">copyProtocol</emphasis>&gt;processDefault, scp, rcp&lt;/
<emphasis role="bold">copyProtocol</emphasis>&gt;
      &lt;
<emphasis role="bold">sourceInfo</emphasis> prefix=&quot;/home/user&quot;/&gt;
      &lt;
<emphasis role="bold">destinationInfo</emphasis> prefix=&quot;/tmp&quot; hostname=&quot;foo.org&quot; username=&quot;smith&quot; /&gt;
    &lt;/
<emphasis role="bold">FileTransferDeploy</emphasis>&gt;
  &lt;/sshProcess&gt;
&lt;/processDefinition&gt;
            </screen>
</para>
        </listitem>
</itemizedlist>
      <para>The <emphasis role="bold">implicit</emphasis> keyword means the <emphasis role="bold">FileTransferDeploy</emphasis> identifier is inherited from
 the VN definition. If hostname and username are implicitly defined in the process tag, then this
 information will be used. But, if the user desires to override this information he can specify it
 as an attribute in the <emphasis role="bold">destinationInfo</emphasis> tag. When coallocating more than one VN on a JVM,
 and therefore on the same process, all files inherited from the multiple VN definitions will be
 transfered.</para>
      <para><emphasis role="bold">Note</emphasis>: FileTransferRetrieve is not yet supported.</para>
      <para></para>
      <para>
 </para>
    </sect1>
  
</chapter>
