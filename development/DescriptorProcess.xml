<?xml version="1.0" encoding="UTF-8"?>
<chapter id="DescriptorProcess"><title>Adding a Deployment Protocol</title>
<!--  File: /home/irosenbe/PA_new_doc/docbook-tuto/doc-files/development/DescriptorProcess.html  -->
  
    <sect1 remap="h2">
      <title><anchor id="DescriptorProcess_html_objectives" xreflabel="Objectives"/>Objectives</title>
      <para>ProActive support several deployment protocols. This protocols can be configured through an
 XML Descriptor file in the <emphasis role="bold">process</emphasis> section. From time to time, new protocols are added.
 This documentation describes how to add a new deployment protocol (process) to ProActive.</para>
    </sect1>
    <sect1 remap="h2">
      <title><anchor id="DescriptorProcess_html_overview" xreflabel="Overview"/>Overview</title>
      <para>Adding a new process can be divided into two related tasks:</para>
      <itemizedlist>
        <listitem>
          <para><emphasis role="bold">Java Process Class</emphasis></para>
          <para> 
 In this section, a java class that handles the specific protocol must be implemented. This java
 class must have certain properties discussed later on.</para>
        </listitem>
        <listitem>
          <para><emphasis role="bold">XML Descriptor</emphasis></para>
          <para> 
 Since each new protocol requieres different configuration parameteres, the <emphasis role="bold">DescriptorSchema.xsd</emphasis> and related parsing code must be modified to handle the new process
 and it&#39;s specific parameteres.</para>
        </listitem>
</itemizedlist>
      <para>Both of this tasks are closely related because the Java Process Class is used when parsing the
 Descriptor XML.</para>
    </sect1>
    <sect1 remap="h2">
      <title><anchor id="DescriptorProcess_html_javaProcess" xreflabel="Java Process Class"/>Java Process Class</title>
      <para>The Java Process Classes are defined in the <emphasis role="bold">org.objectweb.proactive.core.process</emphasis>
 package.</para>
      <sect2 remap="h3">
        <title>Process Package Arquitecture</title>
        <para>Most implementations extend the class <emphasis role="bold">AbstractExternalProcessDecorator</emphasis>.</para>
        <informalfigure>
          <mediaobject>
            <imageobject>
              <imagedata fileref="doc-files/development/imgs/descriptorProcessClassDiagram.png" format="PNG"/>            </imageobject>
          </mediaobject>
        </informalfigure>
        <para>In this figure, <emphasis role="bold">OARSubProcess</emphasis> and <emphasis role="bold">SSHProcess</emphasis> both extend from <emphasis role="bold">AbstractExternalProcessDecorator</emphasis>. Notice, that in the case of SSH, more than one class
 maybe required to succesfully implement the protocol. This is why, every protocol is implemented
 within it&#39;s on directory in the process package:</para>
        <para><literal>ProActive/src/org/objectweb/proactive/core/process/newprocessdir/</literal></para>
        <para>Sometimes, implementeing a specific process requiers external libraries, possibly from the
 original protocol client. The correct place to put this external <emphasis role="bold">.jar</emphasis> libraries is in:</para>
        <para><literal>ProActive/lib/newprocessdir/*.jar</literal></para>
        <para>Before executing a deployment using this new process, don&#39;t forget to add this libraries
 to the <emphasis role="bold">$CLASSPATH</emphasis> envirorment variable.</para>
      </sect2>
      <sect2 remap="h3">
        <title>The New Process Class</title>
        <para>Usualy the new java process class will have a name such as: <emphasis role="bold">ProtocolNameProcess.java</emphasis>.
 The <emphasis role="bold">ProtocolNameProcess</emphasis> class will extend from <emphasis role="bold">AbstractExternalProcessDecorator</emphasis>.
 Therefore, at least the following inherited methods must be implemented:</para>
        <itemizedlist>
          <listitem>
            <para><emphasis role="bold">public ProtocolNameProcess();</emphasis></para>
          </listitem>
          <listitem>
            <para><emphasis role="bold">public ProtocolNameProcess(ExternalProcess targetProcess);</emphasis></para>
          </listitem>
          <listitem>
            <para><emphasis role="bold">public String getProcessId();</emphasis></para>
          </listitem>
          <listitem>
            <para><emphasis role="bold">public int getNodeNumber();</emphasis></para>
          </listitem>
          <listitem>
            <para><emphasis role="bold">public UniversalProcess getFinalProcess();</emphasis></para>
          </listitem>
          <listitem>
            <para><emphasis role="bold">protected String internalBuildCommand();</emphasis></para>
          </listitem>
          <listitem>
            <para><emphasis role="bold">protected void internalStartProcess(String commandToExecute) throws
 java.io.IOException;</emphasis></para>
          </listitem>
</itemizedlist>
      </sect2>
      <sect2 remap="h3">
        <title>The StartRuntime.sh script</title>
        <para>On certain clusters, a starting script might be required. Sometimes, this script will be
 static and receive parameteres at deployment time (globus, pbs, ...), and in other cases it will
 have to be generated at deployment time (oar, oargrid). In either case, the proper place to put
 these scipts is:</para>
        <para><literal>ProActive/scripts/unix/cluster/</literal></para>
      </sect2>
    </sect1>
    <sect1 remap="h2">
      <title><anchor id="DescriptorProcess_html_xmlProcess" xreflabel="XML Descriptor Process"/>XML Descriptor Process</title>
      <sect2 remap="h3">
        <title>Schema Modifications</title>
        <para>The schema file is located at: <emphasis role="bold">ProActive/descriptors/DescriptorSchema.sxd</emphasis>. This file
 contains the valid tags allowed in an XML descriptor file.</para>
        <itemizedlist>
          <listitem>
            <para><emphasis role="bold">processDefinition Childs</emphasis></para>
            <para> 
 The first thing to do, is add the new process tag in: </para>
            <screen>
&lt;xs:complexType name=&quot;ProcessDefinitionType&quot;&gt;
    &lt;xs:choice&gt;
        &lt;xs:element name=&quot;jvmProcess&quot; type=&quot;JvmProcessType&quot;/&gt;
        &lt;xs:element name=&quot;rshProcess&quot; type=&quot;RshProcessType&quot;/&gt;
        &lt;xs:element name=&quot;maprshProcess&quot; type=&quot;MapRshProcessType&quot;/&gt;
        &lt;xs:element name=&quot;sshProcess&quot; type=&quot;SshProcessType&quot;/&gt;
        &lt;xs:element name=&quot;processList&quot; type=&quot;ProcessListType&quot;/&gt;
        &lt;xs:element name=&quot;processListbyHost&quot; type=&quot;ProcessListbyHostType&quot;/&gt;
        &lt;xs:element name=&quot;rloginProcess&quot; type=&quot;RloginProcessType&quot;/&gt;
        &lt;xs:element name=&quot;bsubProcess&quot; type=&quot;BsubProcessType&quot;/&gt;
        &lt;xs:element name=&quot;pbsProcess&quot; type=&quot;PbsProcessType&quot;/&gt;
        &lt;xs:element name=&quot;oarProcess&quot; type=&quot;oarProcessType&quot;/&gt;
        &lt;xs:element name=&quot;oarGridProcess&quot; type=&quot;oarGridProcessType&quot;/&gt;
        &lt;xs:element name=&quot;globusProcess&quot; type=&quot;GlobusProcessType&quot;/&gt;
        &lt;xs:element name=&quot;prunProcess&quot; type=&quot;prunProcessType&quot;/&gt;
        &lt;xs:element name=&quot;gridEngineProcess&quot; type=&quot;sgeProcessType&quot;/&gt;
    &lt;/xs:choice&gt;
    &lt;xs:attribute name=&quot;id&quot; type=&quot;xs:string&quot; use=&quot;required&quot;/&gt;
&lt;/xs:complexType&gt;  
            </screen>
          </listitem>
          <listitem>
            <para><emphasis role="bold">Specific Process Tag</emphasis></para>
            <para> 
 Afterwards, all the tag attributes and subtags need to be defined. In this example, we show
 the OARGRID tag: </para>
            <screen>
&lt;!--oarGridProcess--&gt;
&lt;xs:complexType name=&quot;oarGridProcessType&quot;&gt;
    &lt;xs:sequence&gt;
        &lt;xs:element ref=&quot;processReference&quot;/&gt;
        &lt;xs:element ref=&quot;commandPath&quot; minOccurs=&quot;0&quot;/&gt;
        &lt;xs:element name=&quot;oarGridOption&quot; type=&quot;OarGridOptionType&quot;/&gt;
    &lt;/xs:sequence&gt;
    &lt;xs:attribute name=&quot;class&quot; type=&quot;xs:string&quot; use=&quot;required&quot; 
        fixed=&quot;org.objectweb.proactive.core.process.oar.OARGRIDSubProcess&quot;/&gt;
    &lt;xs:attribute name=&quot;queue&quot; type=&quot;xs:string&quot; use=&quot;optional&quot;/&gt;
    &lt;xs:attribute name=&quot;bookedNodesAccess&quot; use=&quot;optional&quot;&gt;
        &lt;xs:simpleType&gt;
            &lt;xs:restriction base=&quot;xs:string&quot;&gt;
                &lt;xs:enumeration value=&quot;rsh&quot;/&gt;
                &lt;xs:enumeration value=&quot;ssh&quot;/&gt;
            &lt;/xs:restriction&gt;
        &lt;/xs:simpleType&gt;
    &lt;/xs:attribute&gt;
    &lt;xs:attribute name=&quot;closeStream&quot; type=&quot;CloseStreamType&quot; use=&quot;optional&quot;/&gt;
&lt;/xs:complexType&gt;
&lt;!--oarGridOption--&gt;
&lt;xs:complexType name=&quot;OarGridOptionType&quot;&gt;
    &lt;xs:sequence&gt;
        &lt;xs:element name=&quot;resources&quot; type=&quot;xs:string&quot;/&gt;
        &lt;xs:element name=&quot;walltime&quot; type=&quot;xs:string&quot; minOccurs=&quot;0&quot;/&gt;
        &lt;xs:element name=&quot;scriptPath&quot; type=&quot;FilePathType&quot; minOccurs=&quot;0&quot;/&gt;
    &lt;/xs:sequence&gt;
&lt;/xs:complexType&gt;
            </screen>
          </listitem>
</itemizedlist>
      </sect2>
      <sect2 remap="h3">
        <title>XML Parsing Handler</title>
        <sect3 remap="h4">
          <title>ProActiveDescriptorConstants.java:</title>
          <para>This file is located in <emphasis role="bold">org.objectweb.proactive.core.descriptor.xml</emphasis> package. It
 contains the tag names used within XML descriptor files. When adding a new process, new tags
 should be registered in this file.</para>
</sect3>
        <sect3 remap="h4">
          <title>ProcessDefinitinonHandler.java:</title>
          <para>Located in: <emphasis role="bold">org.objectweb.proactive.core.descriptor.xml</emphasis>, this file is the XML handler
 for the <emphasis role="bold">process</emphasis> descriptor section.</para>
          <itemizedlist>
            <listitem>
              <para><emphasis role="bold">New XML handler innerclass</emphasis></para>
              <para> 
 This class will parse all the process specific tags and attributes. It is an innerclass in
 the <emphasis role="bold">ProcessDefinitinonHandler.java</emphasis> file. Sometimes, this class will have a subclass in
 charge of parsing a subsection of the process tag. </para>
              <screen>
protected class OARGRIDProcessHandler extends ProcessHandler {
  public OARGRIDProcessHandler(ProActiveDescriptor proActiveDescriptor) {
    super(proActiveDescriptor);
    this.addHandler(OARGRID_OPTIONS_TAG, new OARGRIDOptionHandler());
  }
  public void startContextElement(String name, Attributes attributes)
    throws org.xml.sax.SAXException {
    super.startContextElement(name, attributes);
 
    String queueName = (attributes.getValue(&quot;queue&quot;));
    if (checkNonEmpty(queueName)) {
      ((OARGRIDSubProcess) targetProcess).setQueueName(queueName);
    }
    String accessProtocol = (attributes.getValue(&quot;bookedNodesAccess&quot;));
    if (checkNonEmpty(accessProtocol)) {
      ((OARGRIDSubProcess) targetProcess).setAccessProtocol(accessProtocol)\
;
    }
  }
  protected class OARGRIDOptionHandler extends PassiveCompositeUnmarshaller\
 {
    public OARGRIDOptionHandler() {
      UnmarshallerHandler pathHandler = new PathHandler();
      this.addHandler(OAR_RESOURCE_TAG, new SingleValueUnmarshaller());
      this.addHandler(OARGRID_WALLTIME_TAG, new SingleValueUnmarshaller());
      BasicUnmarshallerDecorator bch = new BasicUnmarshallerDecorator();
      bch.addHandler(ABS_PATH_TAG, pathHandler);
      bch.addHandler(REL_PATH_TAG, pathHandler);
      this.addHandler(SCRIPT_PATH_TAG, bch);
    }
    public void startContextElement(String name, Attributes attributes)
      throws org.xml.sax.SAXException {
    }
    protected void notifyEndActiveHandler(String name, UnmarshallerHandler \
activeHandler)
      throws org.xml.sax.SAXException {
      OARGRIDSubProcess oarGridSubProcess = (OARGRIDSubProcess) targetProce\
ss;
      if (name.equals(OAR_RESOURCE_TAG)) {
        oarGridSubProcess.setResources((String) activeHandler.getResultObje\
ct());
      }
      else if(name.equals(OARGRID_WALLTIME_TAG)){
        oarGridSubProcess.setWallTime((String) activeHandler.getResultObjec\
t());
      }
      else if (name.equals(SCRIPT_PATH_TAG)) {
        oarGridSubProcess.setScriptLocation((String) activeHandler.getResul\
tObject());
      }
      else {
        super.notifyEndActiveHandler(name, activeHandler);
      }
    }
  }
}
              </screen>
            </listitem>
            <listitem>
              <para><emphasis role="bold">Registering the new XML handler innerclass</emphasis></para>
              <para> 
 The new XML handler innerclass must be registered to handle the parsing of the newprocess tag.
 This is donde in the constructor:</para>
              <para></para>
              <para><literal>public ProcessDefinitionHandler(ProActiveDescriptor
 proActiveDescriptor){...}</literal></para>
            </listitem>
</itemizedlist>
</sect3>
      </sect2>
    </sect1>
  
</chapter>
