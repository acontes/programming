// Stub class generated by rmic, do not edit.
// Contents subject to change without notice.

package org.objectweb.proactive.core.runtime.jini;

public final class JiniRuntimeImpl_Stub
    extends java.rmi.server.RemoteStub
    implements org.objectweb.proactive.core.runtime.rmi.RmiProActiveRuntime, java.rmi.Remote
{
    private static final long serialVersionUID = 2;
    
    private static java.lang.reflect.Method $method_addAcquaintance_0;
    private static java.lang.reflect.Method $method_createBody_1;
    private static java.lang.reflect.Method $method_createLocalNode_2;
    private static java.lang.reflect.Method $method_createVM_3;
    private static java.lang.reflect.Method $method_getAcquaintances_4;
    private static java.lang.reflect.Method $method_getActiveObjects_5;
    private static java.lang.reflect.Method $method_getActiveObjects_6;
    private static java.lang.reflect.Method $method_getCertificate_7;
    private static java.lang.reflect.Method $method_getCertificateEncoded_8;
    private static java.lang.reflect.Method $method_getClassDataFromParentRuntime_9;
    private static java.lang.reflect.Method $method_getClassDataFromThisRuntime_10;
    private static java.lang.reflect.Method $method_getDescriptor_11;
    private static java.lang.reflect.Method $method_getEntities_12;
    private static java.lang.reflect.Method $method_getJobID_13;
    private static java.lang.reflect.Method $method_getLocalNodeNames_14;
    private static java.lang.reflect.Method $method_getLocalNodeProperty_15;
    private static java.lang.reflect.Method $method_getPolicy_16;
    private static java.lang.reflect.Method $method_getProActiveRuntime_17;
    private static java.lang.reflect.Method $method_getProActiveRuntimes_18;
    private static java.lang.reflect.Method $method_getProcessToDeploy_19;
    private static java.lang.reflect.Method $method_getPublicKey_20;
    private static java.lang.reflect.Method $method_getURL_21;
    private static java.lang.reflect.Method $method_getVMInformation_22;
    private static java.lang.reflect.Method $method_getVNName_23;
    private static java.lang.reflect.Method $method_getVirtualNode_24;
    private static java.lang.reflect.Method $method_killAllNodes_25;
    private static java.lang.reflect.Method $method_killNode_26;
    private static java.lang.reflect.Method $method_killRT_27;
    private static java.lang.reflect.Method $method_launchMain_28;
    private static java.lang.reflect.Method $method_newRemote_29;
    private static java.lang.reflect.Method $method_publicKeyExchange_30;
    private static java.lang.reflect.Method $method_randomValue_31;
    private static java.lang.reflect.Method $method_receiveBody_32;
    private static java.lang.reflect.Method $method_receiveCheckpoint_33;
    private static java.lang.reflect.Method $method_register_34;
    private static java.lang.reflect.Method $method_registerVirtualNode_35;
    private static java.lang.reflect.Method $method_rmAcquaintance_36;
    private static java.lang.reflect.Method $method_secretKeyExchange_37;
    private static java.lang.reflect.Method $method_setLocalNodeProperty_38;
    private static java.lang.reflect.Method $method_startNewSession_39;
    private static java.lang.reflect.Method $method_terminateSession_40;
    private static java.lang.reflect.Method $method_unregister_41;
    private static java.lang.reflect.Method $method_unregisterAllVirtualNodes_42;
    private static java.lang.reflect.Method $method_unregisterVirtualNode_43;
    
    static {
	try {
	    $method_addAcquaintance_0 = org.objectweb.proactive.core.runtime.RemoteProActiveRuntime.class.getMethod("addAcquaintance", new java.lang.Class[] {java.lang.String.class});
	    $method_createBody_1 = org.objectweb.proactive.core.runtime.RemoteProActiveRuntime.class.getMethod("createBody", new java.lang.Class[] {java.lang.String.class, org.objectweb.proactive.core.mop.ConstructorCall.class, boolean.class});
	    $method_createLocalNode_2 = org.objectweb.proactive.core.runtime.RemoteProActiveRuntime.class.getMethod("createLocalNode", new java.lang.Class[] {java.lang.String.class, boolean.class, org.objectweb.proactive.ext.security.ProActiveSecurityManager.class, java.lang.String.class, java.lang.String.class});
	    $method_createVM_3 = org.objectweb.proactive.core.runtime.RemoteProActiveRuntime.class.getMethod("createVM", new java.lang.Class[] {org.objectweb.proactive.core.process.UniversalProcess.class});
	    $method_getAcquaintances_4 = org.objectweb.proactive.core.runtime.RemoteProActiveRuntime.class.getMethod("getAcquaintances", new java.lang.Class[] {});
	    $method_getActiveObjects_5 = org.objectweb.proactive.core.runtime.RemoteProActiveRuntime.class.getMethod("getActiveObjects", new java.lang.Class[] {java.lang.String.class});
	    $method_getActiveObjects_6 = org.objectweb.proactive.core.runtime.RemoteProActiveRuntime.class.getMethod("getActiveObjects", new java.lang.Class[] {java.lang.String.class, java.lang.String.class});
	    $method_getCertificate_7 = org.objectweb.proactive.core.runtime.RemoteProActiveRuntime.class.getMethod("getCertificate", new java.lang.Class[] {});
	    $method_getCertificateEncoded_8 = org.objectweb.proactive.core.runtime.RemoteProActiveRuntime.class.getMethod("getCertificateEncoded", new java.lang.Class[] {});
	    $method_getClassDataFromParentRuntime_9 = org.objectweb.proactive.core.runtime.RemoteProActiveRuntime.class.getMethod("getClassDataFromParentRuntime", new java.lang.Class[] {java.lang.String.class});
	    $method_getClassDataFromThisRuntime_10 = org.objectweb.proactive.core.runtime.RemoteProActiveRuntime.class.getMethod("getClassDataFromThisRuntime", new java.lang.Class[] {java.lang.String.class});
	    $method_getDescriptor_11 = org.objectweb.proactive.core.runtime.RemoteProActiveRuntime.class.getMethod("getDescriptor", new java.lang.Class[] {java.lang.String.class, boolean.class});
	    $method_getEntities_12 = org.objectweb.proactive.core.runtime.RemoteProActiveRuntime.class.getMethod("getEntities", new java.lang.Class[] {});
	    $method_getJobID_13 = org.objectweb.proactive.core.runtime.RemoteProActiveRuntime.class.getMethod("getJobID", new java.lang.Class[] {java.lang.String.class});
	    $method_getLocalNodeNames_14 = org.objectweb.proactive.core.runtime.RemoteProActiveRuntime.class.getMethod("getLocalNodeNames", new java.lang.Class[] {});
	    $method_getLocalNodeProperty_15 = org.objectweb.proactive.core.runtime.RemoteProActiveRuntime.class.getMethod("getLocalNodeProperty", new java.lang.Class[] {java.lang.String.class, java.lang.String.class});
	    $method_getPolicy_16 = org.objectweb.proactive.core.runtime.RemoteProActiveRuntime.class.getMethod("getPolicy", new java.lang.Class[] {org.objectweb.proactive.ext.security.SecurityContext.class});
	    $method_getProActiveRuntime_17 = org.objectweb.proactive.core.runtime.RemoteProActiveRuntime.class.getMethod("getProActiveRuntime", new java.lang.Class[] {java.lang.String.class});
	    $method_getProActiveRuntimes_18 = org.objectweb.proactive.core.runtime.RemoteProActiveRuntime.class.getMethod("getProActiveRuntimes", new java.lang.Class[] {});
	    $method_getProcessToDeploy_19 = org.objectweb.proactive.core.runtime.RemoteProActiveRuntime.class.getMethod("getProcessToDeploy", new java.lang.Class[] {org.objectweb.proactive.core.runtime.ProActiveRuntime.class, java.lang.String.class, java.lang.String.class, java.lang.String.class});
	    $method_getPublicKey_20 = org.objectweb.proactive.core.runtime.RemoteProActiveRuntime.class.getMethod("getPublicKey", new java.lang.Class[] {});
	    $method_getURL_21 = org.objectweb.proactive.core.runtime.RemoteProActiveRuntime.class.getMethod("getURL", new java.lang.Class[] {});
	    $method_getVMInformation_22 = org.objectweb.proactive.core.runtime.RemoteProActiveRuntime.class.getMethod("getVMInformation", new java.lang.Class[] {});
	    $method_getVNName_23 = org.objectweb.proactive.core.runtime.RemoteProActiveRuntime.class.getMethod("getVNName", new java.lang.Class[] {java.lang.String.class});
	    $method_getVirtualNode_24 = org.objectweb.proactive.core.runtime.RemoteProActiveRuntime.class.getMethod("getVirtualNode", new java.lang.Class[] {java.lang.String.class});
	    $method_killAllNodes_25 = org.objectweb.proactive.core.runtime.RemoteProActiveRuntime.class.getMethod("killAllNodes", new java.lang.Class[] {});
	    $method_killNode_26 = org.objectweb.proactive.core.runtime.RemoteProActiveRuntime.class.getMethod("killNode", new java.lang.Class[] {java.lang.String.class});
	    $method_killRT_27 = org.objectweb.proactive.core.runtime.RemoteProActiveRuntime.class.getMethod("killRT", new java.lang.Class[] {boolean.class});
	    $method_launchMain_28 = org.objectweb.proactive.core.runtime.RemoteProActiveRuntime.class.getMethod("launchMain", new java.lang.Class[] {java.lang.String.class, java.lang.String[].class});
	    $method_newRemote_29 = org.objectweb.proactive.core.runtime.RemoteProActiveRuntime.class.getMethod("newRemote", new java.lang.Class[] {java.lang.String.class});
	    $method_publicKeyExchange_30 = org.objectweb.proactive.core.runtime.RemoteProActiveRuntime.class.getMethod("publicKeyExchange", new java.lang.Class[] {long.class, byte[].class, byte[].class, byte[].class});
	    $method_randomValue_31 = org.objectweb.proactive.core.runtime.RemoteProActiveRuntime.class.getMethod("randomValue", new java.lang.Class[] {long.class, byte[].class});
	    $method_receiveBody_32 = org.objectweb.proactive.core.runtime.RemoteProActiveRuntime.class.getMethod("receiveBody", new java.lang.Class[] {java.lang.String.class, org.objectweb.proactive.Body.class});
	    $method_receiveCheckpoint_33 = org.objectweb.proactive.core.runtime.RemoteProActiveRuntime.class.getMethod("receiveCheckpoint", new java.lang.Class[] {java.lang.String.class, org.objectweb.proactive.core.body.ft.checkpointing.Checkpoint.class, int.class});
	    $method_register_34 = org.objectweb.proactive.core.runtime.RemoteProActiveRuntime.class.getMethod("register", new java.lang.Class[] {org.objectweb.proactive.core.runtime.ProActiveRuntime.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class});
	    $method_registerVirtualNode_35 = org.objectweb.proactive.core.runtime.RemoteProActiveRuntime.class.getMethod("registerVirtualNode", new java.lang.Class[] {java.lang.String.class, boolean.class});
	    $method_rmAcquaintance_36 = org.objectweb.proactive.core.runtime.RemoteProActiveRuntime.class.getMethod("rmAcquaintance", new java.lang.Class[] {java.lang.String.class});
	    $method_secretKeyExchange_37 = org.objectweb.proactive.core.runtime.RemoteProActiveRuntime.class.getMethod("secretKeyExchange", new java.lang.Class[] {long.class, byte[].class, byte[].class, byte[].class, byte[].class, byte[].class});
	    $method_setLocalNodeProperty_38 = org.objectweb.proactive.core.runtime.RemoteProActiveRuntime.class.getMethod("setLocalNodeProperty", new java.lang.Class[] {java.lang.String.class, java.lang.String.class, java.lang.String.class});
	    $method_startNewSession_39 = org.objectweb.proactive.core.runtime.RemoteProActiveRuntime.class.getMethod("startNewSession", new java.lang.Class[] {org.objectweb.proactive.ext.security.Communication.class});
	    $method_terminateSession_40 = org.objectweb.proactive.core.runtime.RemoteProActiveRuntime.class.getMethod("terminateSession", new java.lang.Class[] {long.class});
	    $method_unregister_41 = org.objectweb.proactive.core.runtime.RemoteProActiveRuntime.class.getMethod("unregister", new java.lang.Class[] {org.objectweb.proactive.core.runtime.ProActiveRuntime.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class});
	    $method_unregisterAllVirtualNodes_42 = org.objectweb.proactive.core.runtime.RemoteProActiveRuntime.class.getMethod("unregisterAllVirtualNodes", new java.lang.Class[] {});
	    $method_unregisterVirtualNode_43 = org.objectweb.proactive.core.runtime.RemoteProActiveRuntime.class.getMethod("unregisterVirtualNode", new java.lang.Class[] {java.lang.String.class});
	} catch (java.lang.NoSuchMethodException e) {
	    throw new java.lang.NoSuchMethodError(
		"stub class initialization failed");
	}
    }
    
    // constructors
    public JiniRuntimeImpl_Stub(java.rmi.server.RemoteRef ref) {
	super(ref);
    }
    
    // methods from remote interfaces
    
    // implementation of addAcquaintance(String)
    public void addAcquaintance(java.lang.String $param_String_1)
	throws java.io.IOException, org.objectweb.proactive.core.ProActiveException
    {
	try {
	    ref.invoke(this, $method_addAcquaintance_0, new java.lang.Object[] {$param_String_1}, 6392851138438344617L);
	} catch (java.lang.RuntimeException e) {
	    throw e;
	} catch (java.io.IOException e) {
	    throw e;
	} catch (org.objectweb.proactive.core.ProActiveException e) {
	    throw e;
	} catch (java.lang.Exception e) {
	    throw new java.rmi.UnexpectedException("undeclared checked exception", e);
	}
    }
    
    // implementation of createBody(String, ConstructorCall, boolean)
    public org.objectweb.proactive.core.body.UniversalBody createBody(java.lang.String $param_String_1, org.objectweb.proactive.core.mop.ConstructorCall $param_ConstructorCall_2, boolean $param_boolean_3)
	throws java.io.IOException, java.lang.reflect.InvocationTargetException, org.objectweb.proactive.core.ProActiveException, org.objectweb.proactive.core.mop.ConstructorCallExecutionFailedException
    {
	try {
	    Object $result = ref.invoke(this, $method_createBody_1, new java.lang.Object[] {$param_String_1, $param_ConstructorCall_2, new java.lang.Boolean($param_boolean_3)}, 1819348992016836063L);
	    return ((org.objectweb.proactive.core.body.UniversalBody) $result);
	} catch (java.lang.RuntimeException e) {
	    throw e;
	} catch (java.io.IOException e) {
	    throw e;
	} catch (java.lang.reflect.InvocationTargetException e) {
	    throw e;
	} catch (org.objectweb.proactive.core.ProActiveException e) {
	    throw e;
	} catch (org.objectweb.proactive.core.mop.ConstructorCallExecutionFailedException e) {
	    throw e;
	} catch (java.lang.Exception e) {
	    throw new java.rmi.UnexpectedException("undeclared checked exception", e);
	}
    }
    
    // implementation of createLocalNode(String, boolean, ProActiveSecurityManager, String, String)
    public java.lang.String createLocalNode(java.lang.String $param_String_1, boolean $param_boolean_2, org.objectweb.proactive.ext.security.ProActiveSecurityManager $param_ProActiveSecurityManager_3, java.lang.String $param_String_4, java.lang.String $param_String_5)
	throws java.io.IOException, java.rmi.AlreadyBoundException, org.objectweb.proactive.core.node.NodeException
    {
	try {
	    Object $result = ref.invoke(this, $method_createLocalNode_2, new java.lang.Object[] {$param_String_1, new java.lang.Boolean($param_boolean_2), $param_ProActiveSecurityManager_3, $param_String_4, $param_String_5}, -7291227780717019248L);
	    return ((java.lang.String) $result);
	} catch (java.lang.RuntimeException e) {
	    throw e;
	} catch (java.io.IOException e) {
	    throw e;
	} catch (java.rmi.AlreadyBoundException e) {
	    throw e;
	} catch (org.objectweb.proactive.core.node.NodeException e) {
	    throw e;
	} catch (java.lang.Exception e) {
	    throw new java.rmi.UnexpectedException("undeclared checked exception", e);
	}
    }
    
    // implementation of createVM(UniversalProcess)
    public void createVM(org.objectweb.proactive.core.process.UniversalProcess $param_UniversalProcess_1)
	throws java.io.IOException, org.objectweb.proactive.core.ProActiveException
    {
	try {
	    ref.invoke(this, $method_createVM_3, new java.lang.Object[] {$param_UniversalProcess_1}, 6922416653851965750L);
	} catch (java.lang.RuntimeException e) {
	    throw e;
	} catch (java.io.IOException e) {
	    throw e;
	} catch (org.objectweb.proactive.core.ProActiveException e) {
	    throw e;
	} catch (java.lang.Exception e) {
	    throw new java.rmi.UnexpectedException("undeclared checked exception", e);
	}
    }
    
    // implementation of getAcquaintances()
    public java.lang.String[] getAcquaintances()
	throws java.io.IOException, org.objectweb.proactive.core.ProActiveException
    {
	try {
	    Object $result = ref.invoke(this, $method_getAcquaintances_4, null, 4221198629910577884L);
	    return ((java.lang.String[]) $result);
	} catch (java.lang.RuntimeException e) {
	    throw e;
	} catch (java.io.IOException e) {
	    throw e;
	} catch (org.objectweb.proactive.core.ProActiveException e) {
	    throw e;
	} catch (java.lang.Exception e) {
	    throw new java.rmi.UnexpectedException("undeclared checked exception", e);
	}
    }
    
    // implementation of getActiveObjects(String)
    public java.util.ArrayList getActiveObjects(java.lang.String $param_String_1)
	throws java.io.IOException, org.objectweb.proactive.core.ProActiveException
    {
	try {
	    Object $result = ref.invoke(this, $method_getActiveObjects_5, new java.lang.Object[] {$param_String_1}, -7107787752513172862L);
	    return ((java.util.ArrayList) $result);
	} catch (java.lang.RuntimeException e) {
	    throw e;
	} catch (java.io.IOException e) {
	    throw e;
	} catch (org.objectweb.proactive.core.ProActiveException e) {
	    throw e;
	} catch (java.lang.Exception e) {
	    throw new java.rmi.UnexpectedException("undeclared checked exception", e);
	}
    }
    
    // implementation of getActiveObjects(String, String)
    public java.util.ArrayList getActiveObjects(java.lang.String $param_String_1, java.lang.String $param_String_2)
	throws java.io.IOException, org.objectweb.proactive.core.ProActiveException
    {
	try {
	    Object $result = ref.invoke(this, $method_getActiveObjects_6, new java.lang.Object[] {$param_String_1, $param_String_2}, 6471244413048580047L);
	    return ((java.util.ArrayList) $result);
	} catch (java.lang.RuntimeException e) {
	    throw e;
	} catch (java.io.IOException e) {
	    throw e;
	} catch (org.objectweb.proactive.core.ProActiveException e) {
	    throw e;
	} catch (java.lang.Exception e) {
	    throw new java.rmi.UnexpectedException("undeclared checked exception", e);
	}
    }
    
    // implementation of getCertificate()
    public java.security.cert.X509Certificate getCertificate()
	throws java.io.IOException, org.objectweb.proactive.ext.security.exceptions.SecurityNotAvailableException
    {
	try {
	    Object $result = ref.invoke(this, $method_getCertificate_7, null, 8675304859736944914L);
	    return ((java.security.cert.X509Certificate) $result);
	} catch (java.lang.RuntimeException e) {
	    throw e;
	} catch (java.io.IOException e) {
	    throw e;
	} catch (org.objectweb.proactive.ext.security.exceptions.SecurityNotAvailableException e) {
	    throw e;
	} catch (java.lang.Exception e) {
	    throw new java.rmi.UnexpectedException("undeclared checked exception", e);
	}
    }
    
    // implementation of getCertificateEncoded()
    public byte[] getCertificateEncoded()
	throws java.io.IOException, org.objectweb.proactive.ext.security.exceptions.SecurityNotAvailableException
    {
	try {
	    Object $result = ref.invoke(this, $method_getCertificateEncoded_8, null, 8235980667087406315L);
	    return ((byte[]) $result);
	} catch (java.lang.RuntimeException e) {
	    throw e;
	} catch (java.io.IOException e) {
	    throw e;
	} catch (org.objectweb.proactive.ext.security.exceptions.SecurityNotAvailableException e) {
	    throw e;
	} catch (java.lang.Exception e) {
	    throw new java.rmi.UnexpectedException("undeclared checked exception", e);
	}
    }
    
    // implementation of getClassDataFromParentRuntime(String)
    public byte[] getClassDataFromParentRuntime(java.lang.String $param_String_1)
	throws java.io.IOException, org.objectweb.proactive.core.ProActiveException
    {
	try {
	    Object $result = ref.invoke(this, $method_getClassDataFromParentRuntime_9, new java.lang.Object[] {$param_String_1}, -2828885887360967563L);
	    return ((byte[]) $result);
	} catch (java.lang.RuntimeException e) {
	    throw e;
	} catch (java.io.IOException e) {
	    throw e;
	} catch (org.objectweb.proactive.core.ProActiveException e) {
	    throw e;
	} catch (java.lang.Exception e) {
	    throw new java.rmi.UnexpectedException("undeclared checked exception", e);
	}
    }
    
    // implementation of getClassDataFromThisRuntime(String)
    public byte[] getClassDataFromThisRuntime(java.lang.String $param_String_1)
	throws java.io.IOException, org.objectweb.proactive.core.ProActiveException
    {
	try {
	    Object $result = ref.invoke(this, $method_getClassDataFromThisRuntime_10, new java.lang.Object[] {$param_String_1}, -8185959707880861955L);
	    return ((byte[]) $result);
	} catch (java.lang.RuntimeException e) {
	    throw e;
	} catch (java.io.IOException e) {
	    throw e;
	} catch (org.objectweb.proactive.core.ProActiveException e) {
	    throw e;
	} catch (java.lang.Exception e) {
	    throw new java.rmi.UnexpectedException("undeclared checked exception", e);
	}
    }
    
    // implementation of getDescriptor(String, boolean)
    public org.objectweb.proactive.core.descriptor.data.ProActiveDescriptor getDescriptor(java.lang.String $param_String_1, boolean $param_boolean_2)
	throws java.io.IOException, org.objectweb.proactive.core.ProActiveException
    {
	try {
	    Object $result = ref.invoke(this, $method_getDescriptor_11, new java.lang.Object[] {$param_String_1, new java.lang.Boolean($param_boolean_2)}, -7674714977391800414L);
	    return ((org.objectweb.proactive.core.descriptor.data.ProActiveDescriptor) $result);
	} catch (java.lang.RuntimeException e) {
	    throw e;
	} catch (java.io.IOException e) {
	    throw e;
	} catch (org.objectweb.proactive.core.ProActiveException e) {
	    throw e;
	} catch (java.lang.Exception e) {
	    throw new java.rmi.UnexpectedException("undeclared checked exception", e);
	}
    }
    
    // implementation of getEntities()
    public java.util.ArrayList getEntities()
	throws java.io.IOException, org.objectweb.proactive.ext.security.exceptions.SecurityNotAvailableException
    {
	try {
	    Object $result = ref.invoke(this, $method_getEntities_12, null, -2337364679294098933L);
	    return ((java.util.ArrayList) $result);
	} catch (java.lang.RuntimeException e) {
	    throw e;
	} catch (java.io.IOException e) {
	    throw e;
	} catch (org.objectweb.proactive.ext.security.exceptions.SecurityNotAvailableException e) {
	    throw e;
	} catch (java.lang.Exception e) {
	    throw new java.rmi.UnexpectedException("undeclared checked exception", e);
	}
    }
    
    // implementation of getJobID(String)
    public java.lang.String getJobID(java.lang.String $param_String_1)
	throws java.io.IOException, org.objectweb.proactive.core.ProActiveException
    {
	try {
	    Object $result = ref.invoke(this, $method_getJobID_13, new java.lang.Object[] {$param_String_1}, 2386922996311603139L);
	    return ((java.lang.String) $result);
	} catch (java.lang.RuntimeException e) {
	    throw e;
	} catch (java.io.IOException e) {
	    throw e;
	} catch (org.objectweb.proactive.core.ProActiveException e) {
	    throw e;
	} catch (java.lang.Exception e) {
	    throw new java.rmi.UnexpectedException("undeclared checked exception", e);
	}
    }
    
    // implementation of getLocalNodeNames()
    public java.lang.String[] getLocalNodeNames()
	throws java.io.IOException, org.objectweb.proactive.core.ProActiveException
    {
	try {
	    Object $result = ref.invoke(this, $method_getLocalNodeNames_14, null, -9081287807683247214L);
	    return ((java.lang.String[]) $result);
	} catch (java.lang.RuntimeException e) {
	    throw e;
	} catch (java.io.IOException e) {
	    throw e;
	} catch (org.objectweb.proactive.core.ProActiveException e) {
	    throw e;
	} catch (java.lang.Exception e) {
	    throw new java.rmi.UnexpectedException("undeclared checked exception", e);
	}
    }
    
    // implementation of getLocalNodeProperty(String, String)
    public java.lang.String getLocalNodeProperty(java.lang.String $param_String_1, java.lang.String $param_String_2)
	throws java.io.IOException, org.objectweb.proactive.core.ProActiveException
    {
	try {
	    Object $result = ref.invoke(this, $method_getLocalNodeProperty_15, new java.lang.Object[] {$param_String_1, $param_String_2}, 7821497540521424290L);
	    return ((java.lang.String) $result);
	} catch (java.lang.RuntimeException e) {
	    throw e;
	} catch (java.io.IOException e) {
	    throw e;
	} catch (org.objectweb.proactive.core.ProActiveException e) {
	    throw e;
	} catch (java.lang.Exception e) {
	    throw new java.rmi.UnexpectedException("undeclared checked exception", e);
	}
    }
    
    // implementation of getPolicy(SecurityContext)
    public org.objectweb.proactive.ext.security.SecurityContext getPolicy(org.objectweb.proactive.ext.security.SecurityContext $param_SecurityContext_1)
	throws java.io.IOException, org.objectweb.proactive.ext.security.exceptions.SecurityNotAvailableException
    {
	try {
	    Object $result = ref.invoke(this, $method_getPolicy_16, new java.lang.Object[] {$param_SecurityContext_1}, 8018755396255564061L);
	    return ((org.objectweb.proactive.ext.security.SecurityContext) $result);
	} catch (java.lang.RuntimeException e) {
	    throw e;
	} catch (java.io.IOException e) {
	    throw e;
	} catch (org.objectweb.proactive.ext.security.exceptions.SecurityNotAvailableException e) {
	    throw e;
	} catch (java.lang.Exception e) {
	    throw new java.rmi.UnexpectedException("undeclared checked exception", e);
	}
    }
    
    // implementation of getProActiveRuntime(String)
    public org.objectweb.proactive.core.runtime.ProActiveRuntime getProActiveRuntime(java.lang.String $param_String_1)
	throws java.io.IOException, org.objectweb.proactive.core.ProActiveException
    {
	try {
	    Object $result = ref.invoke(this, $method_getProActiveRuntime_17, new java.lang.Object[] {$param_String_1}, -3241931605399092996L);
	    return ((org.objectweb.proactive.core.runtime.ProActiveRuntime) $result);
	} catch (java.lang.RuntimeException e) {
	    throw e;
	} catch (java.io.IOException e) {
	    throw e;
	} catch (org.objectweb.proactive.core.ProActiveException e) {
	    throw e;
	} catch (java.lang.Exception e) {
	    throw new java.rmi.UnexpectedException("undeclared checked exception", e);
	}
    }
    
    // implementation of getProActiveRuntimes()
    public org.objectweb.proactive.core.runtime.ProActiveRuntime[] getProActiveRuntimes()
	throws java.io.IOException, org.objectweb.proactive.core.ProActiveException
    {
	try {
	    Object $result = ref.invoke(this, $method_getProActiveRuntimes_18, null, 1099264566065403916L);
	    return ((org.objectweb.proactive.core.runtime.ProActiveRuntime[]) $result);
	} catch (java.lang.RuntimeException e) {
	    throw e;
	} catch (java.io.IOException e) {
	    throw e;
	} catch (org.objectweb.proactive.core.ProActiveException e) {
	    throw e;
	} catch (java.lang.Exception e) {
	    throw new java.rmi.UnexpectedException("undeclared checked exception", e);
	}
    }
    
    // implementation of getProcessToDeploy(ProActiveRuntime, String, String, String)
    public org.objectweb.proactive.core.process.ExternalProcess getProcessToDeploy(org.objectweb.proactive.core.runtime.ProActiveRuntime $param_ProActiveRuntime_1, java.lang.String $param_String_2, java.lang.String $param_String_3, java.lang.String $param_String_4)
	throws java.io.IOException, org.objectweb.proactive.core.ProActiveException
    {
	try {
	    Object $result = ref.invoke(this, $method_getProcessToDeploy_19, new java.lang.Object[] {$param_ProActiveRuntime_1, $param_String_2, $param_String_3, $param_String_4}, -204908509028810956L);
	    return ((org.objectweb.proactive.core.process.ExternalProcess) $result);
	} catch (java.lang.RuntimeException e) {
	    throw e;
	} catch (java.io.IOException e) {
	    throw e;
	} catch (org.objectweb.proactive.core.ProActiveException e) {
	    throw e;
	} catch (java.lang.Exception e) {
	    throw new java.rmi.UnexpectedException("undeclared checked exception", e);
	}
    }
    
    // implementation of getPublicKey()
    public java.security.PublicKey getPublicKey()
	throws java.io.IOException, org.objectweb.proactive.ext.security.exceptions.SecurityNotAvailableException
    {
	try {
	    Object $result = ref.invoke(this, $method_getPublicKey_20, null, 8742538979109225578L);
	    return ((java.security.PublicKey) $result);
	} catch (java.lang.RuntimeException e) {
	    throw e;
	} catch (java.io.IOException e) {
	    throw e;
	} catch (org.objectweb.proactive.ext.security.exceptions.SecurityNotAvailableException e) {
	    throw e;
	} catch (java.lang.Exception e) {
	    throw new java.rmi.UnexpectedException("undeclared checked exception", e);
	}
    }
    
    // implementation of getURL()
    public java.lang.String getURL()
	throws java.io.IOException, org.objectweb.proactive.core.ProActiveException
    {
	try {
	    Object $result = ref.invoke(this, $method_getURL_21, null, -1842225981409839707L);
	    return ((java.lang.String) $result);
	} catch (java.lang.RuntimeException e) {
	    throw e;
	} catch (java.io.IOException e) {
	    throw e;
	} catch (org.objectweb.proactive.core.ProActiveException e) {
	    throw e;
	} catch (java.lang.Exception e) {
	    throw new java.rmi.UnexpectedException("undeclared checked exception", e);
	}
    }
    
    // implementation of getVMInformation()
    public org.objectweb.proactive.core.runtime.VMInformation getVMInformation()
	throws java.io.IOException
    {
	try {
	    Object $result = ref.invoke(this, $method_getVMInformation_22, null, -7805727532643280579L);
	    return ((org.objectweb.proactive.core.runtime.VMInformation) $result);
	} catch (java.lang.RuntimeException e) {
	    throw e;
	} catch (java.io.IOException e) {
	    throw e;
	} catch (java.lang.Exception e) {
	    throw new java.rmi.UnexpectedException("undeclared checked exception", e);
	}
    }
    
    // implementation of getVNName(String)
    public java.lang.String getVNName(java.lang.String $param_String_1)
	throws java.io.IOException, org.objectweb.proactive.core.ProActiveException
    {
	try {
	    Object $result = ref.invoke(this, $method_getVNName_23, new java.lang.Object[] {$param_String_1}, 4073119035192360804L);
	    return ((java.lang.String) $result);
	} catch (java.lang.RuntimeException e) {
	    throw e;
	} catch (java.io.IOException e) {
	    throw e;
	} catch (org.objectweb.proactive.core.ProActiveException e) {
	    throw e;
	} catch (java.lang.Exception e) {
	    throw new java.rmi.UnexpectedException("undeclared checked exception", e);
	}
    }
    
    // implementation of getVirtualNode(String)
    public org.objectweb.proactive.core.descriptor.data.VirtualNode getVirtualNode(java.lang.String $param_String_1)
	throws java.io.IOException, org.objectweb.proactive.core.ProActiveException
    {
	try {
	    Object $result = ref.invoke(this, $method_getVirtualNode_24, new java.lang.Object[] {$param_String_1}, -5496593200789915044L);
	    return ((org.objectweb.proactive.core.descriptor.data.VirtualNode) $result);
	} catch (java.lang.RuntimeException e) {
	    throw e;
	} catch (java.io.IOException e) {
	    throw e;
	} catch (org.objectweb.proactive.core.ProActiveException e) {
	    throw e;
	} catch (java.lang.Exception e) {
	    throw new java.rmi.UnexpectedException("undeclared checked exception", e);
	}
    }
    
    // implementation of killAllNodes()
    public void killAllNodes()
	throws java.io.IOException, org.objectweb.proactive.core.ProActiveException
    {
	try {
	    ref.invoke(this, $method_killAllNodes_25, null, -7422506450685703231L);
	} catch (java.lang.RuntimeException e) {
	    throw e;
	} catch (java.io.IOException e) {
	    throw e;
	} catch (org.objectweb.proactive.core.ProActiveException e) {
	    throw e;
	} catch (java.lang.Exception e) {
	    throw new java.rmi.UnexpectedException("undeclared checked exception", e);
	}
    }
    
    // implementation of killNode(String)
    public void killNode(java.lang.String $param_String_1)
	throws java.io.IOException, org.objectweb.proactive.core.ProActiveException
    {
	try {
	    ref.invoke(this, $method_killNode_26, new java.lang.Object[] {$param_String_1}, -8480484715116985694L);
	} catch (java.lang.RuntimeException e) {
	    throw e;
	} catch (java.io.IOException e) {
	    throw e;
	} catch (org.objectweb.proactive.core.ProActiveException e) {
	    throw e;
	} catch (java.lang.Exception e) {
	    throw new java.rmi.UnexpectedException("undeclared checked exception", e);
	}
    }
    
    // implementation of killRT(boolean)
    public void killRT(boolean $param_boolean_1)
	throws java.lang.Exception
    {
	ref.invoke(this, $method_killRT_27, new java.lang.Object[] {new java.lang.Boolean($param_boolean_1)}, -3800551315464038724L);
    }
    
    // implementation of launchMain(String, String[])
    public void launchMain(java.lang.String $param_String_1, java.lang.String[] $param_arrayOf_String_2)
	throws java.io.IOException, java.lang.ClassNotFoundException, java.lang.NoSuchMethodException, org.objectweb.proactive.core.ProActiveException
    {
	try {
	    ref.invoke(this, $method_launchMain_28, new java.lang.Object[] {$param_String_1, $param_arrayOf_String_2}, -9084104323008730262L);
	} catch (java.lang.RuntimeException e) {
	    throw e;
	} catch (java.io.IOException e) {
	    throw e;
	} catch (java.lang.ClassNotFoundException e) {
	    throw e;
	} catch (java.lang.NoSuchMethodException e) {
	    throw e;
	} catch (org.objectweb.proactive.core.ProActiveException e) {
	    throw e;
	} catch (java.lang.Exception e) {
	    throw new java.rmi.UnexpectedException("undeclared checked exception", e);
	}
    }
    
    // implementation of newRemote(String)
    public void newRemote(java.lang.String $param_String_1)
	throws java.io.IOException, java.lang.ClassNotFoundException, org.objectweb.proactive.core.ProActiveException
    {
	try {
	    ref.invoke(this, $method_newRemote_29, new java.lang.Object[] {$param_String_1}, 6879275528465919500L);
	} catch (java.lang.RuntimeException e) {
	    throw e;
	} catch (java.io.IOException e) {
	    throw e;
	} catch (java.lang.ClassNotFoundException e) {
	    throw e;
	} catch (org.objectweb.proactive.core.ProActiveException e) {
	    throw e;
	} catch (java.lang.Exception e) {
	    throw new java.rmi.UnexpectedException("undeclared checked exception", e);
	}
    }
    
    // implementation of publicKeyExchange(long, byte[], byte[], byte[])
    public byte[][] publicKeyExchange(long $param_long_1, byte[] $param_arrayOf_byte_2, byte[] $param_arrayOf_byte_3, byte[] $param_arrayOf_byte_4)
	throws java.io.IOException, org.objectweb.proactive.ext.security.crypto.KeyExchangeException, org.objectweb.proactive.ext.security.exceptions.RenegotiateSessionException, org.objectweb.proactive.ext.security.exceptions.SecurityNotAvailableException
    {
	try {
	    Object $result = ref.invoke(this, $method_publicKeyExchange_30, new java.lang.Object[] {new java.lang.Long($param_long_1), $param_arrayOf_byte_2, $param_arrayOf_byte_3, $param_arrayOf_byte_4}, -4191292111067564348L);
	    return ((byte[][]) $result);
	} catch (java.lang.RuntimeException e) {
	    throw e;
	} catch (java.io.IOException e) {
	    throw e;
	} catch (org.objectweb.proactive.ext.security.crypto.KeyExchangeException e) {
	    throw e;
	} catch (org.objectweb.proactive.ext.security.exceptions.RenegotiateSessionException e) {
	    throw e;
	} catch (org.objectweb.proactive.ext.security.exceptions.SecurityNotAvailableException e) {
	    throw e;
	} catch (java.lang.Exception e) {
	    throw new java.rmi.UnexpectedException("undeclared checked exception", e);
	}
    }
    
    // implementation of randomValue(long, byte[])
    public byte[] randomValue(long $param_long_1, byte[] $param_arrayOf_byte_2)
	throws java.io.IOException, org.objectweb.proactive.ext.security.exceptions.RenegotiateSessionException, org.objectweb.proactive.ext.security.exceptions.SecurityNotAvailableException
    {
	try {
	    Object $result = ref.invoke(this, $method_randomValue_31, new java.lang.Object[] {new java.lang.Long($param_long_1), $param_arrayOf_byte_2}, 1611181899341057267L);
	    return ((byte[]) $result);
	} catch (java.lang.RuntimeException e) {
	    throw e;
	} catch (java.io.IOException e) {
	    throw e;
	} catch (org.objectweb.proactive.ext.security.exceptions.RenegotiateSessionException e) {
	    throw e;
	} catch (org.objectweb.proactive.ext.security.exceptions.SecurityNotAvailableException e) {
	    throw e;
	} catch (java.lang.Exception e) {
	    throw new java.rmi.UnexpectedException("undeclared checked exception", e);
	}
    }
    
    // implementation of receiveBody(String, Body)
    public org.objectweb.proactive.core.body.UniversalBody receiveBody(java.lang.String $param_String_1, org.objectweb.proactive.Body $param_Body_2)
	throws java.io.IOException, org.objectweb.proactive.core.ProActiveException
    {
	try {
	    Object $result = ref.invoke(this, $method_receiveBody_32, new java.lang.Object[] {$param_String_1, $param_Body_2}, 3644081094998349270L);
	    return ((org.objectweb.proactive.core.body.UniversalBody) $result);
	} catch (java.lang.RuntimeException e) {
	    throw e;
	} catch (java.io.IOException e) {
	    throw e;
	} catch (org.objectweb.proactive.core.ProActiveException e) {
	    throw e;
	} catch (java.lang.Exception e) {
	    throw new java.rmi.UnexpectedException("undeclared checked exception", e);
	}
    }
    
    // implementation of receiveCheckpoint(String, Checkpoint, int)
    public org.objectweb.proactive.core.body.UniversalBody receiveCheckpoint(java.lang.String $param_String_1, org.objectweb.proactive.core.body.ft.checkpointing.Checkpoint $param_Checkpoint_2, int $param_int_3)
	throws java.io.IOException, org.objectweb.proactive.core.ProActiveException
    {
	try {
	    Object $result = ref.invoke(this, $method_receiveCheckpoint_33, new java.lang.Object[] {$param_String_1, $param_Checkpoint_2, new java.lang.Integer($param_int_3)}, 244058173142206000L);
	    return ((org.objectweb.proactive.core.body.UniversalBody) $result);
	} catch (java.lang.RuntimeException e) {
	    throw e;
	} catch (java.io.IOException e) {
	    throw e;
	} catch (org.objectweb.proactive.core.ProActiveException e) {
	    throw e;
	} catch (java.lang.Exception e) {
	    throw new java.rmi.UnexpectedException("undeclared checked exception", e);
	}
    }
    
    // implementation of register(ProActiveRuntime, String, String, String, String)
    public void register(org.objectweb.proactive.core.runtime.ProActiveRuntime $param_ProActiveRuntime_1, java.lang.String $param_String_2, java.lang.String $param_String_3, java.lang.String $param_String_4, java.lang.String $param_String_5)
	throws java.io.IOException, org.objectweb.proactive.core.ProActiveException
    {
	try {
	    ref.invoke(this, $method_register_34, new java.lang.Object[] {$param_ProActiveRuntime_1, $param_String_2, $param_String_3, $param_String_4, $param_String_5}, 8058153062137171928L);
	} catch (java.lang.RuntimeException e) {
	    throw e;
	} catch (java.io.IOException e) {
	    throw e;
	} catch (org.objectweb.proactive.core.ProActiveException e) {
	    throw e;
	} catch (java.lang.Exception e) {
	    throw new java.rmi.UnexpectedException("undeclared checked exception", e);
	}
    }
    
    // implementation of registerVirtualNode(String, boolean)
    public void registerVirtualNode(java.lang.String $param_String_1, boolean $param_boolean_2)
	throws java.io.IOException, java.rmi.AlreadyBoundException, org.objectweb.proactive.core.ProActiveException
    {
	try {
	    ref.invoke(this, $method_registerVirtualNode_35, new java.lang.Object[] {$param_String_1, new java.lang.Boolean($param_boolean_2)}, -6553153287788975235L);
	} catch (java.lang.RuntimeException e) {
	    throw e;
	} catch (java.io.IOException e) {
	    throw e;
	} catch (java.rmi.AlreadyBoundException e) {
	    throw e;
	} catch (org.objectweb.proactive.core.ProActiveException e) {
	    throw e;
	} catch (java.lang.Exception e) {
	    throw new java.rmi.UnexpectedException("undeclared checked exception", e);
	}
    }
    
    // implementation of rmAcquaintance(String)
    public void rmAcquaintance(java.lang.String $param_String_1)
	throws java.io.IOException, org.objectweb.proactive.core.ProActiveException
    {
	try {
	    ref.invoke(this, $method_rmAcquaintance_36, new java.lang.Object[] {$param_String_1}, 4773395266662358970L);
	} catch (java.lang.RuntimeException e) {
	    throw e;
	} catch (java.io.IOException e) {
	    throw e;
	} catch (org.objectweb.proactive.core.ProActiveException e) {
	    throw e;
	} catch (java.lang.Exception e) {
	    throw new java.rmi.UnexpectedException("undeclared checked exception", e);
	}
    }
    
    // implementation of secretKeyExchange(long, byte[], byte[], byte[], byte[], byte[])
    public byte[][] secretKeyExchange(long $param_long_1, byte[] $param_arrayOf_byte_2, byte[] $param_arrayOf_byte_3, byte[] $param_arrayOf_byte_4, byte[] $param_arrayOf_byte_5, byte[] $param_arrayOf_byte_6)
	throws java.io.IOException, org.objectweb.proactive.ext.security.exceptions.RenegotiateSessionException, org.objectweb.proactive.ext.security.exceptions.SecurityNotAvailableException
    {
	try {
	    Object $result = ref.invoke(this, $method_secretKeyExchange_37, new java.lang.Object[] {new java.lang.Long($param_long_1), $param_arrayOf_byte_2, $param_arrayOf_byte_3, $param_arrayOf_byte_4, $param_arrayOf_byte_5, $param_arrayOf_byte_6}, 8096114644944215683L);
	    return ((byte[][]) $result);
	} catch (java.lang.RuntimeException e) {
	    throw e;
	} catch (java.io.IOException e) {
	    throw e;
	} catch (org.objectweb.proactive.ext.security.exceptions.RenegotiateSessionException e) {
	    throw e;
	} catch (org.objectweb.proactive.ext.security.exceptions.SecurityNotAvailableException e) {
	    throw e;
	} catch (java.lang.Exception e) {
	    throw new java.rmi.UnexpectedException("undeclared checked exception", e);
	}
    }
    
    // implementation of setLocalNodeProperty(String, String, String)
    public java.lang.Object setLocalNodeProperty(java.lang.String $param_String_1, java.lang.String $param_String_2, java.lang.String $param_String_3)
	throws java.io.IOException, org.objectweb.proactive.core.ProActiveException
    {
	try {
	    Object $result = ref.invoke(this, $method_setLocalNodeProperty_38, new java.lang.Object[] {$param_String_1, $param_String_2, $param_String_3}, 2564693653368831707L);
	    return ((java.lang.Object) $result);
	} catch (java.lang.RuntimeException e) {
	    throw e;
	} catch (java.io.IOException e) {
	    throw e;
	} catch (org.objectweb.proactive.core.ProActiveException e) {
	    throw e;
	} catch (java.lang.Exception e) {
	    throw new java.rmi.UnexpectedException("undeclared checked exception", e);
	}
    }
    
    // implementation of startNewSession(Communication)
    public long startNewSession(org.objectweb.proactive.ext.security.Communication $param_Communication_1)
	throws java.io.IOException, org.objectweb.proactive.ext.security.exceptions.RenegotiateSessionException, org.objectweb.proactive.ext.security.exceptions.SecurityNotAvailableException
    {
	try {
	    Object $result = ref.invoke(this, $method_startNewSession_39, new java.lang.Object[] {$param_Communication_1}, -8698074113487452212L);
	    return ((java.lang.Long) $result).longValue();
	} catch (java.lang.RuntimeException e) {
	    throw e;
	} catch (java.io.IOException e) {
	    throw e;
	} catch (org.objectweb.proactive.ext.security.exceptions.RenegotiateSessionException e) {
	    throw e;
	} catch (org.objectweb.proactive.ext.security.exceptions.SecurityNotAvailableException e) {
	    throw e;
	} catch (java.lang.Exception e) {
	    throw new java.rmi.UnexpectedException("undeclared checked exception", e);
	}
    }
    
    // implementation of terminateSession(long)
    public void terminateSession(long $param_long_1)
	throws java.io.IOException, org.objectweb.proactive.ext.security.exceptions.SecurityNotAvailableException
    {
	try {
	    ref.invoke(this, $method_terminateSession_40, new java.lang.Object[] {new java.lang.Long($param_long_1)}, -6572756634747465471L);
	} catch (java.lang.RuntimeException e) {
	    throw e;
	} catch (java.io.IOException e) {
	    throw e;
	} catch (org.objectweb.proactive.ext.security.exceptions.SecurityNotAvailableException e) {
	    throw e;
	} catch (java.lang.Exception e) {
	    throw new java.rmi.UnexpectedException("undeclared checked exception", e);
	}
    }
    
    // implementation of unregister(ProActiveRuntime, String, String, String, String)
    public void unregister(org.objectweb.proactive.core.runtime.ProActiveRuntime $param_ProActiveRuntime_1, java.lang.String $param_String_2, java.lang.String $param_String_3, java.lang.String $param_String_4, java.lang.String $param_String_5)
	throws java.io.IOException, org.objectweb.proactive.core.ProActiveException
    {
	try {
	    ref.invoke(this, $method_unregister_41, new java.lang.Object[] {$param_ProActiveRuntime_1, $param_String_2, $param_String_3, $param_String_4, $param_String_5}, -8871676770245453520L);
	} catch (java.lang.RuntimeException e) {
	    throw e;
	} catch (java.io.IOException e) {
	    throw e;
	} catch (org.objectweb.proactive.core.ProActiveException e) {
	    throw e;
	} catch (java.lang.Exception e) {
	    throw new java.rmi.UnexpectedException("undeclared checked exception", e);
	}
    }
    
    // implementation of unregisterAllVirtualNodes()
    public void unregisterAllVirtualNodes()
	throws java.io.IOException, org.objectweb.proactive.core.ProActiveException
    {
	try {
	    ref.invoke(this, $method_unregisterAllVirtualNodes_42, null, -4293865790846268854L);
	} catch (java.lang.RuntimeException e) {
	    throw e;
	} catch (java.io.IOException e) {
	    throw e;
	} catch (org.objectweb.proactive.core.ProActiveException e) {
	    throw e;
	} catch (java.lang.Exception e) {
	    throw new java.rmi.UnexpectedException("undeclared checked exception", e);
	}
    }
    
    // implementation of unregisterVirtualNode(String)
    public void unregisterVirtualNode(java.lang.String $param_String_1)
	throws java.io.IOException, org.objectweb.proactive.core.ProActiveException
    {
	try {
	    ref.invoke(this, $method_unregisterVirtualNode_43, new java.lang.Object[] {$param_String_1}, -9210673779084831916L);
	} catch (java.lang.RuntimeException e) {
	    throw e;
	} catch (java.io.IOException e) {
	    throw e;
	} catch (org.objectweb.proactive.core.ProActiveException e) {
	    throw e;
	} catch (java.lang.Exception e) {
	    throw new java.rmi.UnexpectedException("undeclared checked exception", e);
	}
    }
}
