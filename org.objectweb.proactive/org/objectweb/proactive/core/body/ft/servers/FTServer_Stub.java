// Stub class generated by rmic, do not edit.
// Contents subject to change without notice.

package org.objectweb.proactive.core.body.ft.servers;

public final class FTServer_Stub
    extends java.rmi.server.RemoteStub
    implements org.objectweb.proactive.core.body.ft.servers.faultdetection.FaultDetector, org.objectweb.proactive.core.body.ft.servers.location.LocationServer, org.objectweb.proactive.core.body.ft.servers.recovery.RecoveryProcess, org.objectweb.proactive.core.body.ft.servers.resource.ResourceServer, org.objectweb.proactive.core.body.ft.servers.storage.CheckpointServer, java.rmi.Remote
{
    private static final long serialVersionUID = 2;
    
    private static java.lang.reflect.Method $method_addFreeNode_0;
    private static java.lang.reflect.Method $method_addInfoToCheckpoint_1;
    private static java.lang.reflect.Method $method_commitHistory_2;
    private static java.lang.reflect.Method $method_failureDetected_3;
    private static java.lang.reflect.Method $method_forceDetection_4;
    private static java.lang.reflect.Method $method_getAllLocations_5;
    private static java.lang.reflect.Method $method_getCheckpoint_6;
    private static java.lang.reflect.Method $method_getFreeNode_7;
    private static java.lang.reflect.Method $method_getInfoFromCheckpoint_8;
    private static java.lang.reflect.Method $method_getLastCheckpoint_9;
    private static java.lang.reflect.Method $method_getLocation_10;
    private static java.lang.reflect.Method $method_getServerCodebase_11;
    private static java.lang.reflect.Method $method_getSystemSize_12;
    private static java.lang.reflect.Method $method_initialize_13;
    private static java.lang.reflect.Method $method_isUnreachable_14;
    private static java.lang.reflect.Method $method_outputCommit_15;
    private static java.lang.reflect.Method $method_register_16;
    private static java.lang.reflect.Method $method_searchObject_17;
    private static java.lang.reflect.Method $method_startFailureDetector_18;
    private static java.lang.reflect.Method $method_stopFailureDetector_19;
    private static java.lang.reflect.Method $method_storeCheckpoint_20;
    private static java.lang.reflect.Method $method_storeReply_21;
    private static java.lang.reflect.Method $method_storeRequest_22;
    private static java.lang.reflect.Method $method_submitJob_23;
    private static java.lang.reflect.Method $method_submitJobWithBarrier_24;
    private static java.lang.reflect.Method $method_suspendFailureDetector_25;
    private static java.lang.reflect.Method $method_unregister_26;
    private static java.lang.reflect.Method $method_updateLocation_27;
    private static java.lang.reflect.Method $method_updateState_28;
    
    static {
	try {
	    $method_addFreeNode_0 = org.objectweb.proactive.core.body.ft.servers.resource.ResourceServer.class.getMethod("addFreeNode", new java.lang.Class[] {org.objectweb.proactive.core.node.Node.class});
	    $method_addInfoToCheckpoint_1 = org.objectweb.proactive.core.body.ft.servers.storage.CheckpointServer.class.getMethod("addInfoToCheckpoint", new java.lang.Class[] {org.objectweb.proactive.core.body.ft.checkpointing.CheckpointInfo.class, org.objectweb.proactive.core.UniqueID.class, int.class, int.class});
	    $method_commitHistory_2 = org.objectweb.proactive.core.body.ft.servers.storage.CheckpointServer.class.getMethod("commitHistory", new java.lang.Class[] {org.objectweb.proactive.core.body.ft.message.HistoryUpdater.class});
	    $method_failureDetected_3 = org.objectweb.proactive.core.body.ft.servers.recovery.RecoveryProcess.class.getMethod("failureDetected", new java.lang.Class[] {org.objectweb.proactive.core.UniqueID.class});
	    $method_forceDetection_4 = org.objectweb.proactive.core.body.ft.servers.faultdetection.FaultDetector.class.getMethod("forceDetection", new java.lang.Class[] {});
	    $method_getAllLocations_5 = org.objectweb.proactive.core.body.ft.servers.location.LocationServer.class.getMethod("getAllLocations", new java.lang.Class[] {});
	    $method_getCheckpoint_6 = org.objectweb.proactive.core.body.ft.servers.storage.CheckpointServer.class.getMethod("getCheckpoint", new java.lang.Class[] {org.objectweb.proactive.core.UniqueID.class, int.class});
	    $method_getFreeNode_7 = org.objectweb.proactive.core.body.ft.servers.resource.ResourceServer.class.getMethod("getFreeNode", new java.lang.Class[] {});
	    $method_getInfoFromCheckpoint_8 = org.objectweb.proactive.core.body.ft.servers.storage.CheckpointServer.class.getMethod("getInfoFromCheckpoint", new java.lang.Class[] {org.objectweb.proactive.core.UniqueID.class, int.class});
	    $method_getLastCheckpoint_9 = org.objectweb.proactive.core.body.ft.servers.storage.CheckpointServer.class.getMethod("getLastCheckpoint", new java.lang.Class[] {org.objectweb.proactive.core.UniqueID.class});
	    $method_getLocation_10 = org.objectweb.proactive.core.body.ft.servers.location.LocationServer.class.getMethod("getLocation", new java.lang.Class[] {org.objectweb.proactive.core.UniqueID.class});
	    $method_getServerCodebase_11 = org.objectweb.proactive.core.body.ft.servers.storage.CheckpointServer.class.getMethod("getServerCodebase", new java.lang.Class[] {});
	    $method_getSystemSize_12 = org.objectweb.proactive.core.body.ft.servers.recovery.RecoveryProcess.class.getMethod("getSystemSize", new java.lang.Class[] {});
	    $method_initialize_13 = org.objectweb.proactive.core.body.ft.servers.storage.CheckpointServer.class.getMethod("initialize", new java.lang.Class[] {});
	    $method_isUnreachable_14 = org.objectweb.proactive.core.body.ft.servers.faultdetection.FaultDetector.class.getMethod("isUnreachable", new java.lang.Class[] {org.objectweb.proactive.core.body.UniversalBody.class});
	    $method_outputCommit_15 = org.objectweb.proactive.core.body.ft.servers.storage.CheckpointServer.class.getMethod("outputCommit", new java.lang.Class[] {org.objectweb.proactive.core.body.ft.message.MessageInfo.class});
	    $method_register_16 = org.objectweb.proactive.core.body.ft.servers.recovery.RecoveryProcess.class.getMethod("register", new java.lang.Class[] {org.objectweb.proactive.core.UniqueID.class});
	    $method_searchObject_17 = org.objectweb.proactive.core.body.ft.servers.location.LocationServer.class.getMethod("searchObject", new java.lang.Class[] {org.objectweb.proactive.core.UniqueID.class, org.objectweb.proactive.core.body.UniversalBody.class, org.objectweb.proactive.core.UniqueID.class});
	    $method_startFailureDetector_18 = org.objectweb.proactive.core.body.ft.servers.faultdetection.FaultDetector.class.getMethod("startFailureDetector", new java.lang.Class[] {});
	    $method_stopFailureDetector_19 = org.objectweb.proactive.core.body.ft.servers.faultdetection.FaultDetector.class.getMethod("stopFailureDetector", new java.lang.Class[] {});
	    $method_storeCheckpoint_20 = org.objectweb.proactive.core.body.ft.servers.storage.CheckpointServer.class.getMethod("storeCheckpoint", new java.lang.Class[] {org.objectweb.proactive.core.body.ft.checkpointing.Checkpoint.class, int.class});
	    $method_storeReply_21 = org.objectweb.proactive.core.body.ft.servers.storage.CheckpointServer.class.getMethod("storeReply", new java.lang.Class[] {org.objectweb.proactive.core.UniqueID.class, org.objectweb.proactive.core.body.reply.Reply.class});
	    $method_storeRequest_22 = org.objectweb.proactive.core.body.ft.servers.storage.CheckpointServer.class.getMethod("storeRequest", new java.lang.Class[] {org.objectweb.proactive.core.UniqueID.class, org.objectweb.proactive.core.body.request.Request.class});
	    $method_submitJob_23 = org.objectweb.proactive.core.body.ft.servers.recovery.RecoveryProcess.class.getMethod("submitJob", new java.lang.Class[] {org.objectweb.proactive.core.body.ft.servers.util.ActiveQueueJob.class});
	    $method_submitJobWithBarrier_24 = org.objectweb.proactive.core.body.ft.servers.recovery.RecoveryProcess.class.getMethod("submitJobWithBarrier", new java.lang.Class[] {org.objectweb.proactive.core.body.ft.servers.util.ActiveQueueJob.class});
	    $method_suspendFailureDetector_25 = org.objectweb.proactive.core.body.ft.servers.faultdetection.FaultDetector.class.getMethod("suspendFailureDetector", new java.lang.Class[] {});
	    $method_unregister_26 = org.objectweb.proactive.core.body.ft.servers.recovery.RecoveryProcess.class.getMethod("unregister", new java.lang.Class[] {org.objectweb.proactive.core.UniqueID.class});
	    $method_updateLocation_27 = org.objectweb.proactive.core.body.ft.servers.location.LocationServer.class.getMethod("updateLocation", new java.lang.Class[] {org.objectweb.proactive.core.UniqueID.class, org.objectweb.proactive.core.body.UniversalBody.class});
	    $method_updateState_28 = org.objectweb.proactive.core.body.ft.servers.recovery.RecoveryProcess.class.getMethod("updateState", new java.lang.Class[] {org.objectweb.proactive.core.UniqueID.class, int.class});
	} catch (java.lang.NoSuchMethodException e) {
	    throw new java.lang.NoSuchMethodError(
		"stub class initialization failed");
	}
    }
    
    // constructors
    public FTServer_Stub(java.rmi.server.RemoteRef ref) {
	super(ref);
    }
    
    // methods from remote interfaces
    
    // implementation of addFreeNode(Node)
    public void addFreeNode(org.objectweb.proactive.core.node.Node $param_Node_1)
	throws java.rmi.RemoteException
    {
	try {
	    ref.invoke(this, $method_addFreeNode_0, new java.lang.Object[] {$param_Node_1}, 3194308310426124579L);
	} catch (java.lang.RuntimeException e) {
	    throw e;
	} catch (java.rmi.RemoteException e) {
	    throw e;
	} catch (java.lang.Exception e) {
	    throw new java.rmi.UnexpectedException("undeclared checked exception", e);
	}
    }
    
    // implementation of addInfoToCheckpoint(CheckpointInfo, UniqueID, int, int)
    public void addInfoToCheckpoint(org.objectweb.proactive.core.body.ft.checkpointing.CheckpointInfo $param_CheckpointInfo_1, org.objectweb.proactive.core.UniqueID $param_UniqueID_2, int $param_int_3, int $param_int_4)
	throws java.rmi.RemoteException
    {
	try {
	    ref.invoke(this, $method_addInfoToCheckpoint_1, new java.lang.Object[] {$param_CheckpointInfo_1, $param_UniqueID_2, new java.lang.Integer($param_int_3), new java.lang.Integer($param_int_4)}, 5277104138875252735L);
	} catch (java.lang.RuntimeException e) {
	    throw e;
	} catch (java.rmi.RemoteException e) {
	    throw e;
	} catch (java.lang.Exception e) {
	    throw new java.rmi.UnexpectedException("undeclared checked exception", e);
	}
    }
    
    // implementation of commitHistory(HistoryUpdater)
    public void commitHistory(org.objectweb.proactive.core.body.ft.message.HistoryUpdater $param_HistoryUpdater_1)
	throws java.rmi.RemoteException
    {
	try {
	    ref.invoke(this, $method_commitHistory_2, new java.lang.Object[] {$param_HistoryUpdater_1}, -6684127840472846251L);
	} catch (java.lang.RuntimeException e) {
	    throw e;
	} catch (java.rmi.RemoteException e) {
	    throw e;
	} catch (java.lang.Exception e) {
	    throw new java.rmi.UnexpectedException("undeclared checked exception", e);
	}
    }
    
    // implementation of failureDetected(UniqueID)
    public void failureDetected(org.objectweb.proactive.core.UniqueID $param_UniqueID_1)
	throws java.rmi.RemoteException
    {
	try {
	    ref.invoke(this, $method_failureDetected_3, new java.lang.Object[] {$param_UniqueID_1}, 7941240691384796162L);
	} catch (java.lang.RuntimeException e) {
	    throw e;
	} catch (java.rmi.RemoteException e) {
	    throw e;
	} catch (java.lang.Exception e) {
	    throw new java.rmi.UnexpectedException("undeclared checked exception", e);
	}
    }
    
    // implementation of forceDetection()
    public void forceDetection()
	throws java.rmi.RemoteException
    {
	try {
	    ref.invoke(this, $method_forceDetection_4, null, -1401190717565994885L);
	} catch (java.lang.RuntimeException e) {
	    throw e;
	} catch (java.rmi.RemoteException e) {
	    throw e;
	} catch (java.lang.Exception e) {
	    throw new java.rmi.UnexpectedException("undeclared checked exception", e);
	}
    }
    
    // implementation of getAllLocations()
    public java.util.ArrayList getAllLocations()
	throws java.rmi.RemoteException
    {
	try {
	    Object $result = ref.invoke(this, $method_getAllLocations_5, null, 8416082505185116166L);
	    return ((java.util.ArrayList) $result);
	} catch (java.lang.RuntimeException e) {
	    throw e;
	} catch (java.rmi.RemoteException e) {
	    throw e;
	} catch (java.lang.Exception e) {
	    throw new java.rmi.UnexpectedException("undeclared checked exception", e);
	}
    }
    
    // implementation of getCheckpoint(UniqueID, int)
    public org.objectweb.proactive.core.body.ft.checkpointing.Checkpoint getCheckpoint(org.objectweb.proactive.core.UniqueID $param_UniqueID_1, int $param_int_2)
	throws java.rmi.RemoteException
    {
	try {
	    Object $result = ref.invoke(this, $method_getCheckpoint_6, new java.lang.Object[] {$param_UniqueID_1, new java.lang.Integer($param_int_2)}, 1050500149194023693L);
	    return ((org.objectweb.proactive.core.body.ft.checkpointing.Checkpoint) $result);
	} catch (java.lang.RuntimeException e) {
	    throw e;
	} catch (java.rmi.RemoteException e) {
	    throw e;
	} catch (java.lang.Exception e) {
	    throw new java.rmi.UnexpectedException("undeclared checked exception", e);
	}
    }
    
    // implementation of getFreeNode()
    public org.objectweb.proactive.core.node.Node getFreeNode()
	throws java.rmi.RemoteException
    {
	try {
	    Object $result = ref.invoke(this, $method_getFreeNode_7, null, -2710381562405471483L);
	    return ((org.objectweb.proactive.core.node.Node) $result);
	} catch (java.lang.RuntimeException e) {
	    throw e;
	} catch (java.rmi.RemoteException e) {
	    throw e;
	} catch (java.lang.Exception e) {
	    throw new java.rmi.UnexpectedException("undeclared checked exception", e);
	}
    }
    
    // implementation of getInfoFromCheckpoint(UniqueID, int)
    public org.objectweb.proactive.core.body.ft.checkpointing.CheckpointInfo getInfoFromCheckpoint(org.objectweb.proactive.core.UniqueID $param_UniqueID_1, int $param_int_2)
	throws java.rmi.RemoteException
    {
	try {
	    Object $result = ref.invoke(this, $method_getInfoFromCheckpoint_8, new java.lang.Object[] {$param_UniqueID_1, new java.lang.Integer($param_int_2)}, 1561488675075643407L);
	    return ((org.objectweb.proactive.core.body.ft.checkpointing.CheckpointInfo) $result);
	} catch (java.lang.RuntimeException e) {
	    throw e;
	} catch (java.rmi.RemoteException e) {
	    throw e;
	} catch (java.lang.Exception e) {
	    throw new java.rmi.UnexpectedException("undeclared checked exception", e);
	}
    }
    
    // implementation of getLastCheckpoint(UniqueID)
    public org.objectweb.proactive.core.body.ft.checkpointing.Checkpoint getLastCheckpoint(org.objectweb.proactive.core.UniqueID $param_UniqueID_1)
	throws java.rmi.RemoteException
    {
	try {
	    Object $result = ref.invoke(this, $method_getLastCheckpoint_9, new java.lang.Object[] {$param_UniqueID_1}, 8731694892219295615L);
	    return ((org.objectweb.proactive.core.body.ft.checkpointing.Checkpoint) $result);
	} catch (java.lang.RuntimeException e) {
	    throw e;
	} catch (java.rmi.RemoteException e) {
	    throw e;
	} catch (java.lang.Exception e) {
	    throw new java.rmi.UnexpectedException("undeclared checked exception", e);
	}
    }
    
    // implementation of getLocation(UniqueID)
    public org.objectweb.proactive.core.body.UniversalBody getLocation(org.objectweb.proactive.core.UniqueID $param_UniqueID_1)
	throws java.rmi.RemoteException
    {
	try {
	    Object $result = ref.invoke(this, $method_getLocation_10, new java.lang.Object[] {$param_UniqueID_1}, -358635140125512982L);
	    return ((org.objectweb.proactive.core.body.UniversalBody) $result);
	} catch (java.lang.RuntimeException e) {
	    throw e;
	} catch (java.rmi.RemoteException e) {
	    throw e;
	} catch (java.lang.Exception e) {
	    throw new java.rmi.UnexpectedException("undeclared checked exception", e);
	}
    }
    
    // implementation of getServerCodebase()
    public java.lang.String getServerCodebase()
	throws java.rmi.RemoteException
    {
	try {
	    Object $result = ref.invoke(this, $method_getServerCodebase_11, null, -4829995754929580978L);
	    return ((java.lang.String) $result);
	} catch (java.lang.RuntimeException e) {
	    throw e;
	} catch (java.rmi.RemoteException e) {
	    throw e;
	} catch (java.lang.Exception e) {
	    throw new java.rmi.UnexpectedException("undeclared checked exception", e);
	}
    }
    
    // implementation of getSystemSize()
    public int getSystemSize()
	throws java.rmi.RemoteException
    {
	try {
	    Object $result = ref.invoke(this, $method_getSystemSize_12, null, 3413566741808391844L);
	    return ((java.lang.Integer) $result).intValue();
	} catch (java.lang.RuntimeException e) {
	    throw e;
	} catch (java.rmi.RemoteException e) {
	    throw e;
	} catch (java.lang.Exception e) {
	    throw new java.rmi.UnexpectedException("undeclared checked exception", e);
	}
    }
    
    // implementation of initialize()
    public void initialize()
	throws java.rmi.RemoteException
    {
	try {
	    ref.invoke(this, $method_initialize_13, null, -2436598305033942517L);
	} catch (java.lang.RuntimeException e) {
	    throw e;
	} catch (java.rmi.RemoteException e) {
	    throw e;
	} catch (java.lang.Exception e) {
	    throw new java.rmi.UnexpectedException("undeclared checked exception", e);
	}
    }
    
    // implementation of isUnreachable(UniversalBody)
    public boolean isUnreachable(org.objectweb.proactive.core.body.UniversalBody $param_UniversalBody_1)
	throws java.rmi.RemoteException
    {
	try {
	    Object $result = ref.invoke(this, $method_isUnreachable_14, new java.lang.Object[] {$param_UniversalBody_1}, 5241402704158422559L);
	    return ((java.lang.Boolean) $result).booleanValue();
	} catch (java.lang.RuntimeException e) {
	    throw e;
	} catch (java.rmi.RemoteException e) {
	    throw e;
	} catch (java.lang.Exception e) {
	    throw new java.rmi.UnexpectedException("undeclared checked exception", e);
	}
    }
    
    // implementation of outputCommit(MessageInfo)
    public void outputCommit(org.objectweb.proactive.core.body.ft.message.MessageInfo $param_MessageInfo_1)
	throws java.rmi.RemoteException
    {
	try {
	    ref.invoke(this, $method_outputCommit_15, new java.lang.Object[] {$param_MessageInfo_1}, -3325625759766691395L);
	} catch (java.lang.RuntimeException e) {
	    throw e;
	} catch (java.rmi.RemoteException e) {
	    throw e;
	} catch (java.lang.Exception e) {
	    throw new java.rmi.UnexpectedException("undeclared checked exception", e);
	}
    }
    
    // implementation of register(UniqueID)
    public void register(org.objectweb.proactive.core.UniqueID $param_UniqueID_1)
	throws java.rmi.RemoteException
    {
	try {
	    ref.invoke(this, $method_register_16, new java.lang.Object[] {$param_UniqueID_1}, 7031682110774585795L);
	} catch (java.lang.RuntimeException e) {
	    throw e;
	} catch (java.rmi.RemoteException e) {
	    throw e;
	} catch (java.lang.Exception e) {
	    throw new java.rmi.UnexpectedException("undeclared checked exception", e);
	}
    }
    
    // implementation of searchObject(UniqueID, UniversalBody, UniqueID)
    public org.objectweb.proactive.core.body.UniversalBody searchObject(org.objectweb.proactive.core.UniqueID $param_UniqueID_1, org.objectweb.proactive.core.body.UniversalBody $param_UniversalBody_2, org.objectweb.proactive.core.UniqueID $param_UniqueID_3)
	throws java.rmi.RemoteException
    {
	try {
	    Object $result = ref.invoke(this, $method_searchObject_17, new java.lang.Object[] {$param_UniqueID_1, $param_UniversalBody_2, $param_UniqueID_3}, -1890720595597036657L);
	    return ((org.objectweb.proactive.core.body.UniversalBody) $result);
	} catch (java.lang.RuntimeException e) {
	    throw e;
	} catch (java.rmi.RemoteException e) {
	    throw e;
	} catch (java.lang.Exception e) {
	    throw new java.rmi.UnexpectedException("undeclared checked exception", e);
	}
    }
    
    // implementation of startFailureDetector()
    public void startFailureDetector()
	throws java.rmi.RemoteException
    {
	try {
	    ref.invoke(this, $method_startFailureDetector_18, null, -8986110034476110823L);
	} catch (java.lang.RuntimeException e) {
	    throw e;
	} catch (java.rmi.RemoteException e) {
	    throw e;
	} catch (java.lang.Exception e) {
	    throw new java.rmi.UnexpectedException("undeclared checked exception", e);
	}
    }
    
    // implementation of stopFailureDetector()
    public void stopFailureDetector()
	throws java.rmi.RemoteException
    {
	try {
	    ref.invoke(this, $method_stopFailureDetector_19, null, 4519266052348765295L);
	} catch (java.lang.RuntimeException e) {
	    throw e;
	} catch (java.rmi.RemoteException e) {
	    throw e;
	} catch (java.lang.Exception e) {
	    throw new java.rmi.UnexpectedException("undeclared checked exception", e);
	}
    }
    
    // implementation of storeCheckpoint(Checkpoint, int)
    public int storeCheckpoint(org.objectweb.proactive.core.body.ft.checkpointing.Checkpoint $param_Checkpoint_1, int $param_int_2)
	throws java.rmi.RemoteException
    {
	try {
	    Object $result = ref.invoke(this, $method_storeCheckpoint_20, new java.lang.Object[] {$param_Checkpoint_1, new java.lang.Integer($param_int_2)}, -605646189861183776L);
	    return ((java.lang.Integer) $result).intValue();
	} catch (java.lang.RuntimeException e) {
	    throw e;
	} catch (java.rmi.RemoteException e) {
	    throw e;
	} catch (java.lang.Exception e) {
	    throw new java.rmi.UnexpectedException("undeclared checked exception", e);
	}
    }
    
    // implementation of storeReply(UniqueID, Reply)
    public void storeReply(org.objectweb.proactive.core.UniqueID $param_UniqueID_1, org.objectweb.proactive.core.body.reply.Reply $param_Reply_2)
	throws java.rmi.RemoteException
    {
	try {
	    ref.invoke(this, $method_storeReply_21, new java.lang.Object[] {$param_UniqueID_1, $param_Reply_2}, -7532271705926643053L);
	} catch (java.lang.RuntimeException e) {
	    throw e;
	} catch (java.rmi.RemoteException e) {
	    throw e;
	} catch (java.lang.Exception e) {
	    throw new java.rmi.UnexpectedException("undeclared checked exception", e);
	}
    }
    
    // implementation of storeRequest(UniqueID, Request)
    public void storeRequest(org.objectweb.proactive.core.UniqueID $param_UniqueID_1, org.objectweb.proactive.core.body.request.Request $param_Request_2)
	throws java.rmi.RemoteException
    {
	try {
	    ref.invoke(this, $method_storeRequest_22, new java.lang.Object[] {$param_UniqueID_1, $param_Request_2}, 1317879777519358566L);
	} catch (java.lang.RuntimeException e) {
	    throw e;
	} catch (java.rmi.RemoteException e) {
	    throw e;
	} catch (java.lang.Exception e) {
	    throw new java.rmi.UnexpectedException("undeclared checked exception", e);
	}
    }
    
    // implementation of submitJob(ActiveQueueJob)
    public void submitJob(org.objectweb.proactive.core.body.ft.servers.util.ActiveQueueJob $param_ActiveQueueJob_1)
	throws java.rmi.RemoteException
    {
	try {
	    ref.invoke(this, $method_submitJob_23, new java.lang.Object[] {$param_ActiveQueueJob_1}, -3546578581787747200L);
	} catch (java.lang.RuntimeException e) {
	    throw e;
	} catch (java.rmi.RemoteException e) {
	    throw e;
	} catch (java.lang.Exception e) {
	    throw new java.rmi.UnexpectedException("undeclared checked exception", e);
	}
    }
    
    // implementation of submitJobWithBarrier(ActiveQueueJob)
    public org.objectweb.proactive.core.body.ft.servers.util.JobBarrier submitJobWithBarrier(org.objectweb.proactive.core.body.ft.servers.util.ActiveQueueJob $param_ActiveQueueJob_1)
	throws java.rmi.RemoteException
    {
	try {
	    Object $result = ref.invoke(this, $method_submitJobWithBarrier_24, new java.lang.Object[] {$param_ActiveQueueJob_1}, 6413155218580790711L);
	    return ((org.objectweb.proactive.core.body.ft.servers.util.JobBarrier) $result);
	} catch (java.lang.RuntimeException e) {
	    throw e;
	} catch (java.rmi.RemoteException e) {
	    throw e;
	} catch (java.lang.Exception e) {
	    throw new java.rmi.UnexpectedException("undeclared checked exception", e);
	}
    }
    
    // implementation of suspendFailureDetector()
    public void suspendFailureDetector()
	throws java.rmi.RemoteException
    {
	try {
	    ref.invoke(this, $method_suspendFailureDetector_25, null, -5645731790530075097L);
	} catch (java.lang.RuntimeException e) {
	    throw e;
	} catch (java.rmi.RemoteException e) {
	    throw e;
	} catch (java.lang.Exception e) {
	    throw new java.rmi.UnexpectedException("undeclared checked exception", e);
	}
    }
    
    // implementation of unregister(UniqueID)
    public void unregister(org.objectweb.proactive.core.UniqueID $param_UniqueID_1)
	throws java.rmi.RemoteException
    {
	try {
	    ref.invoke(this, $method_unregister_26, new java.lang.Object[] {$param_UniqueID_1}, 701244816195987609L);
	} catch (java.lang.RuntimeException e) {
	    throw e;
	} catch (java.rmi.RemoteException e) {
	    throw e;
	} catch (java.lang.Exception e) {
	    throw new java.rmi.UnexpectedException("undeclared checked exception", e);
	}
    }
    
    // implementation of updateLocation(UniqueID, UniversalBody)
    public void updateLocation(org.objectweb.proactive.core.UniqueID $param_UniqueID_1, org.objectweb.proactive.core.body.UniversalBody $param_UniversalBody_2)
	throws java.rmi.RemoteException
    {
	try {
	    ref.invoke(this, $method_updateLocation_27, new java.lang.Object[] {$param_UniqueID_1, $param_UniversalBody_2}, -262658786594814972L);
	} catch (java.lang.RuntimeException e) {
	    throw e;
	} catch (java.rmi.RemoteException e) {
	    throw e;
	} catch (java.lang.Exception e) {
	    throw new java.rmi.UnexpectedException("undeclared checked exception", e);
	}
    }
    
    // implementation of updateState(UniqueID, int)
    public void updateState(org.objectweb.proactive.core.UniqueID $param_UniqueID_1, int $param_int_2)
	throws java.rmi.RemoteException
    {
	try {
	    ref.invoke(this, $method_updateState_28, new java.lang.Object[] {$param_UniqueID_1, new java.lang.Integer($param_int_2)}, -8594145435737736036L);
	} catch (java.lang.RuntimeException e) {
	    throw e;
	} catch (java.rmi.RemoteException e) {
	    throw e;
	} catch (java.lang.Exception e) {
	    throw new java.rmi.UnexpectedException("undeclared checked exception", e);
	}
    }
}
