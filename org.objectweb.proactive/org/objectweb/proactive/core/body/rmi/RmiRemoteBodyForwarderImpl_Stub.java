// Stub class generated by rmic, do not edit.
// Contents subject to change without notice.

package org.objectweb.proactive.core.body.rmi;

public final class RmiRemoteBodyForwarderImpl_Stub
    extends java.rmi.server.RemoteStub
    implements org.objectweb.proactive.core.body.rmi.RmiRemoteBodyForwarder, java.rmi.Remote
{
    private static final long serialVersionUID = 2;
    
    private static java.lang.reflect.Method $method_addNFEListener_0;
    private static java.lang.reflect.Method $method_changeProxiedBody_1;
    private static java.lang.reflect.Method $method_disableAC_2;
    private static java.lang.reflect.Method $method_enableAC_3;
    private static java.lang.reflect.Method $method_fireNFE_4;
    private static java.lang.reflect.Method $method_getCertificate_5;
    private static java.lang.reflect.Method $method_getCertificateEncoded_6;
    private static java.lang.reflect.Method $method_getEntities_7;
    private static java.lang.reflect.Method $method_getID_8;
    private static java.lang.reflect.Method $method_getJobID_9;
    private static java.lang.reflect.Method $method_getNodeURL_10;
    private static java.lang.reflect.Method $method_getPolicy_11;
    private static java.lang.reflect.Method $method_getPublicKey_12;
    private static java.lang.reflect.Method $method_getRemoteAdapter_13;
    private static java.lang.reflect.Method $method_lookup_14;
    private static java.lang.reflect.Method $method_publicKeyExchange_15;
    private static java.lang.reflect.Method $method_randomValue_16;
    private static java.lang.reflect.Method $method_receiveFTMessage_17;
    private static java.lang.reflect.Method $method_receiveReply_18;
    private static java.lang.reflect.Method $method_receiveRequest_19;
    private static java.lang.reflect.Method $method_register_20;
    private static java.lang.reflect.Method $method_removeImmediateService_21;
    private static java.lang.reflect.Method $method_removeNFEListener_22;
    private static java.lang.reflect.Method $method_secretKeyExchange_23;
    private static java.lang.reflect.Method $method_setImmediateService_24;
    private static java.lang.reflect.Method $method_setImmediateService_25;
    private static java.lang.reflect.Method $method_startNewSession_26;
    private static java.lang.reflect.Method $method_terminate_27;
    private static java.lang.reflect.Method $method_terminateSession_28;
    private static java.lang.reflect.Method $method_unregister_29;
    private static java.lang.reflect.Method $method_updateLocation_30;
    
    static {
	try {
	    $method_addNFEListener_0 = org.objectweb.proactive.core.body.RemoteBodyForwarder.class.getMethod("addNFEListener", new java.lang.Class[] {org.objectweb.proactive.core.UniqueID.class, org.objectweb.proactive.core.exceptions.manager.NFEListener.class});
	    $method_changeProxiedBody_1 = org.objectweb.proactive.core.body.RemoteBodyForwarder.class.getMethod("changeProxiedBody", new java.lang.Class[] {org.objectweb.proactive.core.UniqueID.class, org.objectweb.proactive.Body.class});
	    $method_disableAC_2 = org.objectweb.proactive.core.body.RemoteBodyForwarder.class.getMethod("disableAC", new java.lang.Class[] {org.objectweb.proactive.core.UniqueID.class});
	    $method_enableAC_3 = org.objectweb.proactive.core.body.RemoteBodyForwarder.class.getMethod("enableAC", new java.lang.Class[] {org.objectweb.proactive.core.UniqueID.class});
	    $method_fireNFE_4 = org.objectweb.proactive.core.body.RemoteBodyForwarder.class.getMethod("fireNFE", new java.lang.Class[] {org.objectweb.proactive.core.UniqueID.class, org.objectweb.proactive.core.exceptions.NonFunctionalException.class});
	    $method_getCertificate_5 = org.objectweb.proactive.core.body.RemoteBodyForwarder.class.getMethod("getCertificate", new java.lang.Class[] {org.objectweb.proactive.core.UniqueID.class});
	    $method_getCertificateEncoded_6 = org.objectweb.proactive.core.body.RemoteBodyForwarder.class.getMethod("getCertificateEncoded", new java.lang.Class[] {org.objectweb.proactive.core.UniqueID.class});
	    $method_getEntities_7 = org.objectweb.proactive.core.body.RemoteBodyForwarder.class.getMethod("getEntities", new java.lang.Class[] {org.objectweb.proactive.core.UniqueID.class});
	    $method_getID_8 = org.objectweb.proactive.core.body.RemoteBodyForwarder.class.getMethod("getID", new java.lang.Class[] {org.objectweb.proactive.core.UniqueID.class});
	    $method_getJobID_9 = org.objectweb.proactive.core.body.RemoteBodyForwarder.class.getMethod("getJobID", new java.lang.Class[] {org.objectweb.proactive.core.UniqueID.class});
	    $method_getNodeURL_10 = org.objectweb.proactive.core.body.RemoteBodyForwarder.class.getMethod("getNodeURL", new java.lang.Class[] {org.objectweb.proactive.core.UniqueID.class});
	    $method_getPolicy_11 = org.objectweb.proactive.core.body.RemoteBodyForwarder.class.getMethod("getPolicy", new java.lang.Class[] {org.objectweb.proactive.core.UniqueID.class, org.objectweb.proactive.ext.security.SecurityContext.class});
	    $method_getPublicKey_12 = org.objectweb.proactive.core.body.RemoteBodyForwarder.class.getMethod("getPublicKey", new java.lang.Class[] {org.objectweb.proactive.core.UniqueID.class});
	    $method_getRemoteAdapter_13 = org.objectweb.proactive.core.body.RemoteBodyForwarder.class.getMethod("getRemoteAdapter", new java.lang.Class[] {org.objectweb.proactive.core.UniqueID.class});
	    $method_lookup_14 = org.objectweb.proactive.core.body.RemoteBodyForwarder.class.getMethod("lookup", new java.lang.Class[] {org.objectweb.proactive.core.UniqueID.class, java.lang.String.class});
	    $method_publicKeyExchange_15 = org.objectweb.proactive.core.body.RemoteBodyForwarder.class.getMethod("publicKeyExchange", new java.lang.Class[] {org.objectweb.proactive.core.UniqueID.class, long.class, byte[].class, byte[].class, byte[].class});
	    $method_randomValue_16 = org.objectweb.proactive.core.body.RemoteBodyForwarder.class.getMethod("randomValue", new java.lang.Class[] {org.objectweb.proactive.core.UniqueID.class, long.class, byte[].class});
	    $method_receiveFTMessage_17 = org.objectweb.proactive.core.body.RemoteBodyForwarder.class.getMethod("receiveFTMessage", new java.lang.Class[] {org.objectweb.proactive.core.UniqueID.class, org.objectweb.proactive.core.body.ft.internalmsg.FTMessage.class});
	    $method_receiveReply_18 = org.objectweb.proactive.core.body.RemoteBodyForwarder.class.getMethod("receiveReply", new java.lang.Class[] {org.objectweb.proactive.core.UniqueID.class, org.objectweb.proactive.core.body.reply.Reply.class});
	    $method_receiveRequest_19 = org.objectweb.proactive.core.body.RemoteBodyForwarder.class.getMethod("receiveRequest", new java.lang.Class[] {org.objectweb.proactive.core.UniqueID.class, org.objectweb.proactive.core.body.request.Request.class});
	    $method_register_20 = org.objectweb.proactive.core.body.RemoteBodyForwarder.class.getMethod("register", new java.lang.Class[] {org.objectweb.proactive.core.UniqueID.class, java.lang.String.class});
	    $method_removeImmediateService_21 = org.objectweb.proactive.core.body.RemoteBodyForwarder.class.getMethod("removeImmediateService", new java.lang.Class[] {org.objectweb.proactive.core.UniqueID.class, java.lang.String.class, java.lang.Class[].class});
	    $method_removeNFEListener_22 = org.objectweb.proactive.core.body.RemoteBodyForwarder.class.getMethod("removeNFEListener", new java.lang.Class[] {org.objectweb.proactive.core.UniqueID.class, org.objectweb.proactive.core.exceptions.manager.NFEListener.class});
	    $method_secretKeyExchange_23 = org.objectweb.proactive.core.body.RemoteBodyForwarder.class.getMethod("secretKeyExchange", new java.lang.Class[] {org.objectweb.proactive.core.UniqueID.class, long.class, byte[].class, byte[].class, byte[].class, byte[].class, byte[].class});
	    $method_setImmediateService_24 = org.objectweb.proactive.core.body.RemoteBodyForwarder.class.getMethod("setImmediateService", new java.lang.Class[] {org.objectweb.proactive.core.UniqueID.class, java.lang.String.class});
	    $method_setImmediateService_25 = org.objectweb.proactive.core.body.RemoteBodyForwarder.class.getMethod("setImmediateService", new java.lang.Class[] {org.objectweb.proactive.core.UniqueID.class, java.lang.String.class, java.lang.Class[].class});
	    $method_startNewSession_26 = org.objectweb.proactive.core.body.RemoteBodyForwarder.class.getMethod("startNewSession", new java.lang.Class[] {org.objectweb.proactive.core.UniqueID.class, org.objectweb.proactive.ext.security.Communication.class});
	    $method_terminate_27 = org.objectweb.proactive.core.body.RemoteBodyForwarder.class.getMethod("terminate", new java.lang.Class[] {org.objectweb.proactive.core.UniqueID.class});
	    $method_terminateSession_28 = org.objectweb.proactive.core.body.RemoteBodyForwarder.class.getMethod("terminateSession", new java.lang.Class[] {org.objectweb.proactive.core.UniqueID.class, long.class});
	    $method_unregister_29 = org.objectweb.proactive.core.body.RemoteBodyForwarder.class.getMethod("unregister", new java.lang.Class[] {org.objectweb.proactive.core.UniqueID.class, java.lang.String.class});
	    $method_updateLocation_30 = org.objectweb.proactive.core.body.RemoteBodyForwarder.class.getMethod("updateLocation", new java.lang.Class[] {org.objectweb.proactive.core.UniqueID.class, org.objectweb.proactive.core.UniqueID.class, org.objectweb.proactive.core.body.UniversalBody.class});
	} catch (java.lang.NoSuchMethodException e) {
	    throw new java.lang.NoSuchMethodError(
		"stub class initialization failed");
	}
    }
    
    // constructors
    public RmiRemoteBodyForwarderImpl_Stub(java.rmi.server.RemoteRef ref) {
	super(ref);
    }
    
    // methods from remote interfaces
    
    // implementation of addNFEListener(UniqueID, NFEListener)
    public void addNFEListener(org.objectweb.proactive.core.UniqueID $param_UniqueID_1, org.objectweb.proactive.core.exceptions.manager.NFEListener $param_NFEListener_2)
	throws java.io.IOException
    {
	try {
	    ref.invoke(this, $method_addNFEListener_0, new java.lang.Object[] {$param_UniqueID_1, $param_NFEListener_2}, -4322585241357276965L);
	} catch (java.lang.RuntimeException e) {
	    throw e;
	} catch (java.io.IOException e) {
	    throw e;
	} catch (java.lang.Exception e) {
	    throw new java.rmi.UnexpectedException("undeclared checked exception", e);
	}
    }
    
    // implementation of changeProxiedBody(UniqueID, Body)
    public void changeProxiedBody(org.objectweb.proactive.core.UniqueID $param_UniqueID_1, org.objectweb.proactive.Body $param_Body_2)
	throws java.io.IOException
    {
	try {
	    ref.invoke(this, $method_changeProxiedBody_1, new java.lang.Object[] {$param_UniqueID_1, $param_Body_2}, -3853086249818443600L);
	} catch (java.lang.RuntimeException e) {
	    throw e;
	} catch (java.io.IOException e) {
	    throw e;
	} catch (java.lang.Exception e) {
	    throw new java.rmi.UnexpectedException("undeclared checked exception", e);
	}
    }
    
    // implementation of disableAC(UniqueID)
    public void disableAC(org.objectweb.proactive.core.UniqueID $param_UniqueID_1)
	throws java.io.IOException
    {
	try {
	    ref.invoke(this, $method_disableAC_2, new java.lang.Object[] {$param_UniqueID_1}, 819513375992175399L);
	} catch (java.lang.RuntimeException e) {
	    throw e;
	} catch (java.io.IOException e) {
	    throw e;
	} catch (java.lang.Exception e) {
	    throw new java.rmi.UnexpectedException("undeclared checked exception", e);
	}
    }
    
    // implementation of enableAC(UniqueID)
    public void enableAC(org.objectweb.proactive.core.UniqueID $param_UniqueID_1)
	throws java.io.IOException
    {
	try {
	    ref.invoke(this, $method_enableAC_3, new java.lang.Object[] {$param_UniqueID_1}, 904031113373641316L);
	} catch (java.lang.RuntimeException e) {
	    throw e;
	} catch (java.io.IOException e) {
	    throw e;
	} catch (java.lang.Exception e) {
	    throw new java.rmi.UnexpectedException("undeclared checked exception", e);
	}
    }
    
    // implementation of fireNFE(UniqueID, NonFunctionalException)
    public int fireNFE(org.objectweb.proactive.core.UniqueID $param_UniqueID_1, org.objectweb.proactive.core.exceptions.NonFunctionalException $param_NonFunctionalException_2)
	throws java.io.IOException
    {
	try {
	    Object $result = ref.invoke(this, $method_fireNFE_4, new java.lang.Object[] {$param_UniqueID_1, $param_NonFunctionalException_2}, -7818342837478344317L);
	    return ((java.lang.Integer) $result).intValue();
	} catch (java.lang.RuntimeException e) {
	    throw e;
	} catch (java.io.IOException e) {
	    throw e;
	} catch (java.lang.Exception e) {
	    throw new java.rmi.UnexpectedException("undeclared checked exception", e);
	}
    }
    
    // implementation of getCertificate(UniqueID)
    public java.security.cert.X509Certificate getCertificate(org.objectweb.proactive.core.UniqueID $param_UniqueID_1)
	throws java.io.IOException, org.objectweb.proactive.ext.security.exceptions.SecurityNotAvailableException
    {
	try {
	    Object $result = ref.invoke(this, $method_getCertificate_5, new java.lang.Object[] {$param_UniqueID_1}, -747733523675343900L);
	    return ((java.security.cert.X509Certificate) $result);
	} catch (java.lang.RuntimeException e) {
	    throw e;
	} catch (java.io.IOException e) {
	    throw e;
	} catch (org.objectweb.proactive.ext.security.exceptions.SecurityNotAvailableException e) {
	    throw e;
	} catch (java.lang.Exception e) {
	    throw new java.rmi.UnexpectedException("undeclared checked exception", e);
	}
    }
    
    // implementation of getCertificateEncoded(UniqueID)
    public byte[] getCertificateEncoded(org.objectweb.proactive.core.UniqueID $param_UniqueID_1)
	throws java.io.IOException, org.objectweb.proactive.ext.security.exceptions.SecurityNotAvailableException
    {
	try {
	    Object $result = ref.invoke(this, $method_getCertificateEncoded_6, new java.lang.Object[] {$param_UniqueID_1}, 5620684542358071938L);
	    return ((byte[]) $result);
	} catch (java.lang.RuntimeException e) {
	    throw e;
	} catch (java.io.IOException e) {
	    throw e;
	} catch (org.objectweb.proactive.ext.security.exceptions.SecurityNotAvailableException e) {
	    throw e;
	} catch (java.lang.Exception e) {
	    throw new java.rmi.UnexpectedException("undeclared checked exception", e);
	}
    }
    
    // implementation of getEntities(UniqueID)
    public java.util.ArrayList getEntities(org.objectweb.proactive.core.UniqueID $param_UniqueID_1)
	throws java.io.IOException, org.objectweb.proactive.ext.security.exceptions.SecurityNotAvailableException
    {
	try {
	    Object $result = ref.invoke(this, $method_getEntities_7, new java.lang.Object[] {$param_UniqueID_1}, 7337723922171556367L);
	    return ((java.util.ArrayList) $result);
	} catch (java.lang.RuntimeException e) {
	    throw e;
	} catch (java.io.IOException e) {
	    throw e;
	} catch (org.objectweb.proactive.ext.security.exceptions.SecurityNotAvailableException e) {
	    throw e;
	} catch (java.lang.Exception e) {
	    throw new java.rmi.UnexpectedException("undeclared checked exception", e);
	}
    }
    
    // implementation of getID(UniqueID)
    public org.objectweb.proactive.core.UniqueID getID(org.objectweb.proactive.core.UniqueID $param_UniqueID_1)
	throws java.io.IOException
    {
	try {
	    Object $result = ref.invoke(this, $method_getID_8, new java.lang.Object[] {$param_UniqueID_1}, 1882186327040695470L);
	    return ((org.objectweb.proactive.core.UniqueID) $result);
	} catch (java.lang.RuntimeException e) {
	    throw e;
	} catch (java.io.IOException e) {
	    throw e;
	} catch (java.lang.Exception e) {
	    throw new java.rmi.UnexpectedException("undeclared checked exception", e);
	}
    }
    
    // implementation of getJobID(UniqueID)
    public java.lang.String getJobID(org.objectweb.proactive.core.UniqueID $param_UniqueID_1)
	throws java.io.IOException
    {
	try {
	    Object $result = ref.invoke(this, $method_getJobID_9, new java.lang.Object[] {$param_UniqueID_1}, -2895072389587416056L);
	    return ((java.lang.String) $result);
	} catch (java.lang.RuntimeException e) {
	    throw e;
	} catch (java.io.IOException e) {
	    throw e;
	} catch (java.lang.Exception e) {
	    throw new java.rmi.UnexpectedException("undeclared checked exception", e);
	}
    }
    
    // implementation of getNodeURL(UniqueID)
    public java.lang.String getNodeURL(org.objectweb.proactive.core.UniqueID $param_UniqueID_1)
	throws java.io.IOException
    {
	try {
	    Object $result = ref.invoke(this, $method_getNodeURL_10, new java.lang.Object[] {$param_UniqueID_1}, -6007036659424836720L);
	    return ((java.lang.String) $result);
	} catch (java.lang.RuntimeException e) {
	    throw e;
	} catch (java.io.IOException e) {
	    throw e;
	} catch (java.lang.Exception e) {
	    throw new java.rmi.UnexpectedException("undeclared checked exception", e);
	}
    }
    
    // implementation of getPolicy(UniqueID, SecurityContext)
    public org.objectweb.proactive.ext.security.SecurityContext getPolicy(org.objectweb.proactive.core.UniqueID $param_UniqueID_1, org.objectweb.proactive.ext.security.SecurityContext $param_SecurityContext_2)
	throws java.io.IOException, org.objectweb.proactive.ext.security.exceptions.SecurityNotAvailableException
    {
	try {
	    Object $result = ref.invoke(this, $method_getPolicy_11, new java.lang.Object[] {$param_UniqueID_1, $param_SecurityContext_2}, -1981194850868361515L);
	    return ((org.objectweb.proactive.ext.security.SecurityContext) $result);
	} catch (java.lang.RuntimeException e) {
	    throw e;
	} catch (java.io.IOException e) {
	    throw e;
	} catch (org.objectweb.proactive.ext.security.exceptions.SecurityNotAvailableException e) {
	    throw e;
	} catch (java.lang.Exception e) {
	    throw new java.rmi.UnexpectedException("undeclared checked exception", e);
	}
    }
    
    // implementation of getPublicKey(UniqueID)
    public java.security.PublicKey getPublicKey(org.objectweb.proactive.core.UniqueID $param_UniqueID_1)
	throws java.io.IOException, org.objectweb.proactive.ext.security.exceptions.SecurityNotAvailableException
    {
	try {
	    Object $result = ref.invoke(this, $method_getPublicKey_12, new java.lang.Object[] {$param_UniqueID_1}, -5135528448646789199L);
	    return ((java.security.PublicKey) $result);
	} catch (java.lang.RuntimeException e) {
	    throw e;
	} catch (java.io.IOException e) {
	    throw e;
	} catch (org.objectweb.proactive.ext.security.exceptions.SecurityNotAvailableException e) {
	    throw e;
	} catch (java.lang.Exception e) {
	    throw new java.rmi.UnexpectedException("undeclared checked exception", e);
	}
    }
    
    // implementation of getRemoteAdapter(UniqueID)
    public org.objectweb.proactive.core.body.BodyAdapter getRemoteAdapter(org.objectweb.proactive.core.UniqueID $param_UniqueID_1)
	throws java.io.IOException
    {
	try {
	    Object $result = ref.invoke(this, $method_getRemoteAdapter_13, new java.lang.Object[] {$param_UniqueID_1}, 5353914686632092096L);
	    return ((org.objectweb.proactive.core.body.BodyAdapter) $result);
	} catch (java.lang.RuntimeException e) {
	    throw e;
	} catch (java.io.IOException e) {
	    throw e;
	} catch (java.lang.Exception e) {
	    throw new java.rmi.UnexpectedException("undeclared checked exception", e);
	}
    }
    
    // implementation of lookup(UniqueID, String)
    public org.objectweb.proactive.core.body.UniversalBody lookup(org.objectweb.proactive.core.UniqueID $param_UniqueID_1, java.lang.String $param_String_2)
	throws java.io.IOException
    {
	try {
	    Object $result = ref.invoke(this, $method_lookup_14, new java.lang.Object[] {$param_UniqueID_1, $param_String_2}, 6645071405926638728L);
	    return ((org.objectweb.proactive.core.body.UniversalBody) $result);
	} catch (java.lang.RuntimeException e) {
	    throw e;
	} catch (java.io.IOException e) {
	    throw e;
	} catch (java.lang.Exception e) {
	    throw new java.rmi.UnexpectedException("undeclared checked exception", e);
	}
    }
    
    // implementation of publicKeyExchange(UniqueID, long, byte[], byte[], byte[])
    public byte[][] publicKeyExchange(org.objectweb.proactive.core.UniqueID $param_UniqueID_1, long $param_long_2, byte[] $param_arrayOf_byte_3, byte[] $param_arrayOf_byte_4, byte[] $param_arrayOf_byte_5)
	throws java.io.IOException, org.objectweb.proactive.ext.security.crypto.KeyExchangeException, org.objectweb.proactive.ext.security.exceptions.RenegotiateSessionException, org.objectweb.proactive.ext.security.exceptions.SecurityNotAvailableException
    {
	try {
	    Object $result = ref.invoke(this, $method_publicKeyExchange_15, new java.lang.Object[] {$param_UniqueID_1, new java.lang.Long($param_long_2), $param_arrayOf_byte_3, $param_arrayOf_byte_4, $param_arrayOf_byte_5}, -1176811984859605136L);
	    return ((byte[][]) $result);
	} catch (java.lang.RuntimeException e) {
	    throw e;
	} catch (java.io.IOException e) {
	    throw e;
	} catch (org.objectweb.proactive.ext.security.crypto.KeyExchangeException e) {
	    throw e;
	} catch (org.objectweb.proactive.ext.security.exceptions.RenegotiateSessionException e) {
	    throw e;
	} catch (org.objectweb.proactive.ext.security.exceptions.SecurityNotAvailableException e) {
	    throw e;
	} catch (java.lang.Exception e) {
	    throw new java.rmi.UnexpectedException("undeclared checked exception", e);
	}
    }
    
    // implementation of randomValue(UniqueID, long, byte[])
    public byte[] randomValue(org.objectweb.proactive.core.UniqueID $param_UniqueID_1, long $param_long_2, byte[] $param_arrayOf_byte_3)
	throws java.io.IOException, org.objectweb.proactive.ext.security.exceptions.RenegotiateSessionException, org.objectweb.proactive.ext.security.exceptions.SecurityNotAvailableException
    {
	try {
	    Object $result = ref.invoke(this, $method_randomValue_16, new java.lang.Object[] {$param_UniqueID_1, new java.lang.Long($param_long_2), $param_arrayOf_byte_3}, 1941870540527043528L);
	    return ((byte[]) $result);
	} catch (java.lang.RuntimeException e) {
	    throw e;
	} catch (java.io.IOException e) {
	    throw e;
	} catch (org.objectweb.proactive.ext.security.exceptions.RenegotiateSessionException e) {
	    throw e;
	} catch (org.objectweb.proactive.ext.security.exceptions.SecurityNotAvailableException e) {
	    throw e;
	} catch (java.lang.Exception e) {
	    throw new java.rmi.UnexpectedException("undeclared checked exception", e);
	}
    }
    
    // implementation of receiveFTMessage(UniqueID, FTMessage)
    public java.lang.Object receiveFTMessage(org.objectweb.proactive.core.UniqueID $param_UniqueID_1, org.objectweb.proactive.core.body.ft.internalmsg.FTMessage $param_FTMessage_2)
	throws java.io.IOException
    {
	try {
	    Object $result = ref.invoke(this, $method_receiveFTMessage_17, new java.lang.Object[] {$param_UniqueID_1, $param_FTMessage_2}, -1916161209882645644L);
	    return ((java.lang.Object) $result);
	} catch (java.lang.RuntimeException e) {
	    throw e;
	} catch (java.io.IOException e) {
	    throw e;
	} catch (java.lang.Exception e) {
	    throw new java.rmi.UnexpectedException("undeclared checked exception", e);
	}
    }
    
    // implementation of receiveReply(UniqueID, Reply)
    public int receiveReply(org.objectweb.proactive.core.UniqueID $param_UniqueID_1, org.objectweb.proactive.core.body.reply.Reply $param_Reply_2)
	throws java.io.IOException
    {
	try {
	    Object $result = ref.invoke(this, $method_receiveReply_18, new java.lang.Object[] {$param_UniqueID_1, $param_Reply_2}, 8168033537405717687L);
	    return ((java.lang.Integer) $result).intValue();
	} catch (java.lang.RuntimeException e) {
	    throw e;
	} catch (java.io.IOException e) {
	    throw e;
	} catch (java.lang.Exception e) {
	    throw new java.rmi.UnexpectedException("undeclared checked exception", e);
	}
    }
    
    // implementation of receiveRequest(UniqueID, Request)
    public int receiveRequest(org.objectweb.proactive.core.UniqueID $param_UniqueID_1, org.objectweb.proactive.core.body.request.Request $param_Request_2)
	throws java.io.IOException, org.objectweb.proactive.ext.security.exceptions.RenegotiateSessionException
    {
	try {
	    Object $result = ref.invoke(this, $method_receiveRequest_19, new java.lang.Object[] {$param_UniqueID_1, $param_Request_2}, 8485417111837366806L);
	    return ((java.lang.Integer) $result).intValue();
	} catch (java.lang.RuntimeException e) {
	    throw e;
	} catch (java.io.IOException e) {
	    throw e;
	} catch (org.objectweb.proactive.ext.security.exceptions.RenegotiateSessionException e) {
	    throw e;
	} catch (java.lang.Exception e) {
	    throw new java.rmi.UnexpectedException("undeclared checked exception", e);
	}
    }
    
    // implementation of register(UniqueID, String)
    public void register(org.objectweb.proactive.core.UniqueID $param_UniqueID_1, java.lang.String $param_String_2)
	throws java.io.IOException
    {
	try {
	    ref.invoke(this, $method_register_20, new java.lang.Object[] {$param_UniqueID_1, $param_String_2}, 2797210674176240461L);
	} catch (java.lang.RuntimeException e) {
	    throw e;
	} catch (java.io.IOException e) {
	    throw e;
	} catch (java.lang.Exception e) {
	    throw new java.rmi.UnexpectedException("undeclared checked exception", e);
	}
    }
    
    // implementation of removeImmediateService(UniqueID, String, Class[])
    public void removeImmediateService(org.objectweb.proactive.core.UniqueID $param_UniqueID_1, java.lang.String $param_String_2, java.lang.Class[] $param_arrayOf_Class_3)
	throws java.io.IOException
    {
	try {
	    ref.invoke(this, $method_removeImmediateService_21, new java.lang.Object[] {$param_UniqueID_1, $param_String_2, $param_arrayOf_Class_3}, -7729686808041591944L);
	} catch (java.lang.RuntimeException e) {
	    throw e;
	} catch (java.io.IOException e) {
	    throw e;
	} catch (java.lang.Exception e) {
	    throw new java.rmi.UnexpectedException("undeclared checked exception", e);
	}
    }
    
    // implementation of removeNFEListener(UniqueID, NFEListener)
    public void removeNFEListener(org.objectweb.proactive.core.UniqueID $param_UniqueID_1, org.objectweb.proactive.core.exceptions.manager.NFEListener $param_NFEListener_2)
	throws java.io.IOException
    {
	try {
	    ref.invoke(this, $method_removeNFEListener_22, new java.lang.Object[] {$param_UniqueID_1, $param_NFEListener_2}, 74261543491117194L);
	} catch (java.lang.RuntimeException e) {
	    throw e;
	} catch (java.io.IOException e) {
	    throw e;
	} catch (java.lang.Exception e) {
	    throw new java.rmi.UnexpectedException("undeclared checked exception", e);
	}
    }
    
    // implementation of secretKeyExchange(UniqueID, long, byte[], byte[], byte[], byte[], byte[])
    public byte[][] secretKeyExchange(org.objectweb.proactive.core.UniqueID $param_UniqueID_1, long $param_long_2, byte[] $param_arrayOf_byte_3, byte[] $param_arrayOf_byte_4, byte[] $param_arrayOf_byte_5, byte[] $param_arrayOf_byte_6, byte[] $param_arrayOf_byte_7)
	throws java.io.IOException, org.objectweb.proactive.ext.security.exceptions.RenegotiateSessionException, org.objectweb.proactive.ext.security.exceptions.SecurityNotAvailableException
    {
	try {
	    Object $result = ref.invoke(this, $method_secretKeyExchange_23, new java.lang.Object[] {$param_UniqueID_1, new java.lang.Long($param_long_2), $param_arrayOf_byte_3, $param_arrayOf_byte_4, $param_arrayOf_byte_5, $param_arrayOf_byte_6, $param_arrayOf_byte_7}, 2602337438125068346L);
	    return ((byte[][]) $result);
	} catch (java.lang.RuntimeException e) {
	    throw e;
	} catch (java.io.IOException e) {
	    throw e;
	} catch (org.objectweb.proactive.ext.security.exceptions.RenegotiateSessionException e) {
	    throw e;
	} catch (org.objectweb.proactive.ext.security.exceptions.SecurityNotAvailableException e) {
	    throw e;
	} catch (java.lang.Exception e) {
	    throw new java.rmi.UnexpectedException("undeclared checked exception", e);
	}
    }
    
    // implementation of setImmediateService(UniqueID, String)
    public void setImmediateService(org.objectweb.proactive.core.UniqueID $param_UniqueID_1, java.lang.String $param_String_2)
	throws java.io.IOException
    {
	try {
	    ref.invoke(this, $method_setImmediateService_24, new java.lang.Object[] {$param_UniqueID_1, $param_String_2}, 1888254127708436263L);
	} catch (java.lang.RuntimeException e) {
	    throw e;
	} catch (java.io.IOException e) {
	    throw e;
	} catch (java.lang.Exception e) {
	    throw new java.rmi.UnexpectedException("undeclared checked exception", e);
	}
    }
    
    // implementation of setImmediateService(UniqueID, String, Class[])
    public void setImmediateService(org.objectweb.proactive.core.UniqueID $param_UniqueID_1, java.lang.String $param_String_2, java.lang.Class[] $param_arrayOf_Class_3)
	throws java.io.IOException
    {
	try {
	    ref.invoke(this, $method_setImmediateService_25, new java.lang.Object[] {$param_UniqueID_1, $param_String_2, $param_arrayOf_Class_3}, 3049124524930811910L);
	} catch (java.lang.RuntimeException e) {
	    throw e;
	} catch (java.io.IOException e) {
	    throw e;
	} catch (java.lang.Exception e) {
	    throw new java.rmi.UnexpectedException("undeclared checked exception", e);
	}
    }
    
    // implementation of startNewSession(UniqueID, Communication)
    public long startNewSession(org.objectweb.proactive.core.UniqueID $param_UniqueID_1, org.objectweb.proactive.ext.security.Communication $param_Communication_2)
	throws java.io.IOException, org.objectweb.proactive.ext.security.exceptions.RenegotiateSessionException, org.objectweb.proactive.ext.security.exceptions.SecurityNotAvailableException
    {
	try {
	    Object $result = ref.invoke(this, $method_startNewSession_26, new java.lang.Object[] {$param_UniqueID_1, $param_Communication_2}, -6735816431888185294L);
	    return ((java.lang.Long) $result).longValue();
	} catch (java.lang.RuntimeException e) {
	    throw e;
	} catch (java.io.IOException e) {
	    throw e;
	} catch (org.objectweb.proactive.ext.security.exceptions.RenegotiateSessionException e) {
	    throw e;
	} catch (org.objectweb.proactive.ext.security.exceptions.SecurityNotAvailableException e) {
	    throw e;
	} catch (java.lang.Exception e) {
	    throw new java.rmi.UnexpectedException("undeclared checked exception", e);
	}
    }
    
    // implementation of terminate(UniqueID)
    public void terminate(org.objectweb.proactive.core.UniqueID $param_UniqueID_1)
	throws java.io.IOException
    {
	try {
	    ref.invoke(this, $method_terminate_27, new java.lang.Object[] {$param_UniqueID_1}, 5235435476222407115L);
	} catch (java.lang.RuntimeException e) {
	    throw e;
	} catch (java.io.IOException e) {
	    throw e;
	} catch (java.lang.Exception e) {
	    throw new java.rmi.UnexpectedException("undeclared checked exception", e);
	}
    }
    
    // implementation of terminateSession(UniqueID, long)
    public void terminateSession(org.objectweb.proactive.core.UniqueID $param_UniqueID_1, long $param_long_2)
	throws java.io.IOException, org.objectweb.proactive.ext.security.exceptions.SecurityNotAvailableException
    {
	try {
	    ref.invoke(this, $method_terminateSession_28, new java.lang.Object[] {$param_UniqueID_1, new java.lang.Long($param_long_2)}, -7582610287130270473L);
	} catch (java.lang.RuntimeException e) {
	    throw e;
	} catch (java.io.IOException e) {
	    throw e;
	} catch (org.objectweb.proactive.ext.security.exceptions.SecurityNotAvailableException e) {
	    throw e;
	} catch (java.lang.Exception e) {
	    throw new java.rmi.UnexpectedException("undeclared checked exception", e);
	}
    }
    
    // implementation of unregister(UniqueID, String)
    public void unregister(org.objectweb.proactive.core.UniqueID $param_UniqueID_1, java.lang.String $param_String_2)
	throws java.io.IOException
    {
	try {
	    ref.invoke(this, $method_unregister_29, new java.lang.Object[] {$param_UniqueID_1, $param_String_2}, -1042308121276740221L);
	} catch (java.lang.RuntimeException e) {
	    throw e;
	} catch (java.io.IOException e) {
	    throw e;
	} catch (java.lang.Exception e) {
	    throw new java.rmi.UnexpectedException("undeclared checked exception", e);
	}
    }
    
    // implementation of updateLocation(UniqueID, UniqueID, UniversalBody)
    public void updateLocation(org.objectweb.proactive.core.UniqueID $param_UniqueID_1, org.objectweb.proactive.core.UniqueID $param_UniqueID_2, org.objectweb.proactive.core.body.UniversalBody $param_UniversalBody_3)
	throws java.io.IOException
    {
	try {
	    ref.invoke(this, $method_updateLocation_30, new java.lang.Object[] {$param_UniqueID_1, $param_UniqueID_2, $param_UniversalBody_3}, -2841445957971531039L);
	} catch (java.lang.RuntimeException e) {
	    throw e;
	} catch (java.io.IOException e) {
	    throw e;
	} catch (java.lang.Exception e) {
	    throw new java.rmi.UnexpectedException("undeclared checked exception", e);
	}
    }
}
