<?xml version="1.0" encoding="UTF-8"?>
<project name="ProActive" default="usage" basedir=".">
	<property name="base" value=".."/>
	<property name="src.dir" value="${base}/src"/>
	<property name="proactive.dir" value="org/objectweb/proactive"/>
	<property name="proactive.core.dir" value="${proactive.dir}/core"/>
	<property name="proactive.ext.dir" value="${proactive.dir}/ext"/>
	<property name="classes.dir" value="${base}/classes"/>
	<property name="classlibs.dir" value="${base}/classlibs"/>
	<property name="dist.dir" value="${base}/dist"/>
	<property name="docs.dir" value="${base}/docs"/>
	<property name="name" value="ProActive"/>
	<property name="debug" value="on"/>
        <property name="source" value="1.4"/>
	<!-- define the classpath -->
	<path id="project.classpath">
		<pathelement location="${base}/classes"/>
		<fileset dir="${base}/lib">
			<include name="*.jar"/>
		</fileset>
	</path>
	<path id="test.classpath">
		<path refid="project.classpath"/>
		<pathelement location="${base}/dev/lib/xml-apis.jar"/>
		<pathelement location="${base}/dev/lib/jcommon-0.8.7.jar"/>
		<pathelement location="${base}/dev/lib/jfreechart-0.9.12.jar"/>
		<pathelement location="${base}/dev/lib/jmf.jar"/>
	</path>
	<!-- default target that displays usage -->
	<target name="usage">
		<echo message=""/>
		<echo message="================- ${name} =============="/>
		<echo message=""/>
		<echo message="Available targets are :"/>
		<echo message="  ------------------------------"/>
		<echo message="    General source file builds"/>
		<echo message="  ------------------------------"/>
		<echo message="  core     : ProActive core"/>
		<echo message="  ext      : ProActive ext"/>
		<echo message="  ic2d     : All IC2D"/>
		<echo message="  examples : All examples"/>
		<echo message="  all      : means all of the above"/>
		<echo message=""/>
		<echo message="  ------------------------------"/>
		<echo message="         Utility builds"/>
		<echo message="  ------------------------------"/>
		<echo message="  docs     : creates the docs directory with javadoc + doc"/>
		<echo message="  clean    : removes all build generated files"/>
		<echo message="  dist     : creates the distribution directory and files"/>
		<echo message=""/>
		<echo message="  ------------------------------"/>
		<echo message="    Special source file builds"/>
		<echo message="  ------------------------------"/>
		<echo message="  testsuite	:TestSuite API"/>
		<echo message="  benchmark	:BenchMark API"/>
		<echo message="  nonregressiontest	: Non regression tests compilation"/>
		<echo message="  essai"/>
		<echo message="  migration"/>
		<echo message="  modelisation"/>
		<echo message="  util"/>
		<echo message="  alljunk  : means all of the above"/>
		<echo message="  ibis     : everything related to proactive ibis"/>
		<echo message="  rewrite  : rewrite classes to enhance performance with ibis"/>
		<echo message="  runTests	: Run all non regression tests"/>
		<echo message="  runBench	: Run benchmarks"/>
		<echo message=""/>
		<echo message="=========================================="/>
	</target>
	<!--
	   ================================================================
	   ==
      ==  Initialisation
      ==
      ================================================================
	-->
	<target name="init">
		<!-- Create the time stamp -->
		<tstamp/>
		<!-- Create the build directory structure used by compile -->
		<mkdir dir="${classes.dir}"/>
		<echo message="--- Debugging is ${debug} ---"/>
	</target>
	<!--
	   ================================================================
	   ==
      ==  Compile All
      ==
      ================================================================
	-->
	<target name="all" depends="ic2d, p2p, examples"/>
	<!--
	   ================================================================
	   ==
      ==  Compile ProActive Core
      ==
      ================================================================
	-->
	<target name="configurationCopy">
		<copy toDir="${classes.dir}">
			<fileset dir="${src.dir}">
				<include name="**/*.xml"/>
				<include name="**/*.fractal"/>
			</fileset>
		</copy>
	</target>
	<target name="core" depends="init, configurationCopy">
		<javac srcdir="${src.dir}" destdir="${classes.dir}" deprecation="on" source="${source}" debug="${debug}">
			<classpath refid="project.classpath"/>
			<include name="*.java"/>
			<include name="${proactive.dir}/*.java"/>
			<include name="${proactive.dir}/jini/*.java"/>
			<include name="${proactive.dir}/rmi/*.java"/>
			<include name="${proactive.core.dir}/**/*.java"/>
		</javac>
		<rmic classname="org.objectweb.proactive.core.body.jini.JiniBodyImpl" base="${classes.dir}" sourcebase="${classes.dir}" stubversion="1.2">
			<classpath refid="project.classpath"/>
		</rmic>
		<rmic classname="org.objectweb.proactive.core.body.rmi.RemoteBodyImpl" base="${classes.dir}" sourcebase="${classes.dir}" stubversion="1.2">
			<classpath refid="project.classpath"/>
		</rmic>
		<rmic classname="org.objectweb.proactive.core.runtime.rmi.RemoteProActiveRuntimeImpl" base="${classes.dir}" sourcebase="${classes.dir}" stubversion="1.2">
			<classpath refid="project.classpath"/>
		</rmic>
		<rmic classname="org.objectweb.proactive.core.runtime.jini.JiniRuntimeImpl" base="${classes.dir}" sourcebase="${classes.dir}" stubversion="1.2">
			<classpath refid="project.classpath"/>
		</rmic>
	</target>
	<!--
	   ================================================================
	   ==
      ==  Compile Extensions
      ==
      ================================================================
	-->
	<target name="ext" depends="core">
		<javac srcdir="${src.dir}" destdir="${classes.dir}" deprecation="on"  source="${source}" debug="${debug}">
			<classpath refid="project.classpath"/>
			<include name="${proactive.ext.dir}/**/*.java"/>
		</javac>
	</target>
	<!--
	   ================================================================
	   ==
      ==  Compile ic2d
      ==
      ================================================================
	-->
	<target name="ic2d" depends="ext">
		<javac srcdir="${src.dir}" destdir="${classes.dir}" includes="${proactive.dir}/ic2d/**/*.java" deprecation="on"  source="${source}" debug="${debug}">
			<classpath refid="project.classpath"/>
		</javac>
		<copy todir="${classes.dir}/${proactive.dir}/ic2d/gui/images" includeEmptyDirs="no">
			<fileset dir="${src.dir}/${proactive.dir}/ic2d/gui/images"/>
		</copy>
		<!-- JobMonitor images -->
		<copy todir="${classes.dir}/${proactive.dir}/ic2d/gui/jobmonitor/images" includeEmptyDirs="no">
			<fileset dir="${src.dir}/${proactive.dir}/ic2d/gui/jobmonitor/images"/>
		</copy>
	</target>
	<!--
	   ================================================================
	   ==
      ==  Compile P2P
      ==
      ================================================================
	-->
	<target name="p2p" depends="ext">
		<javac srcdir="${src.dir}" destdir="${classes.dir}" includes="${proactive.dir}/p2p/**/*.java" deprecation="on"  source="${source}"  debug="${debug}">
			<classpath refid="project.classpath"/>
		</javac>
	</target>
	<!--
	   ================================================================
	   ==
      ==  Compile Examples
      ==
      ================================================================
	-->
	<target name="examples" depends="ext">
		<javac srcdir="${src.dir}" destdir="${classes.dir}" includes="${proactive.dir}/examples/**/*.java" deprecation="on"  source="${source}"  debug="${debug}">
			<classpath refid="project.classpath"/>
		</javac>
		<copy todir="${classes.dir}/${proactive.dir}/examples" includeEmptyDirs="no">
			<fileset dir="${src.dir}/${proactive.dir}/examples">
				<exclude name="**/*.java"/>
			</fileset>
		</copy>
	</target>
	<!--
	   ================================================================
	   ==
      ==  Compile Test Suite
      ==
      ================================================================
	-->
	<target name="copyDivers">
		<copy toDir="${classes.dir}">
			<fileset dir="${src.dir}">
				<include name="**/*.prop"/>
				<include name="**/*.css"/>
				<include name="**/*.xml"/>
				<include name="**/*.xsl"/>
				<include name="**/*.xsd"/>
			</fileset>
		</copy>
	</target>
	<target name="testsuite" depends="ext, copyDivers">
		<javac srcdir="${src.dir}" destdir="${classes.dir}" includes="testsuite/**" deprecation="on"  source="${source}"  debug="${debug}">
			<classpath refid="test.classpath"/>
		</javac>
	</target>
	<!--
	   ================================================================
	   ==
      ==  Compile essai
      ==
      ================================================================
	-->
	<target name="essai" depends="ext">
		<javac srcdir="${src.dir}" destdir="${classes.dir}" includes="essai/**" deprecation="on"  source="${source}"  debug="${debug}">
			<classpath refid="project.classpath"/>
		</javac>
		<copy todir="${classes.dir}/essai" includeEmptyDirs="no">
			<fileset dir="${src.dir}/essai">
				<exclude name="**/*.java"/>
			</fileset>
		</copy>
	</target>
	<!--
	   ================================================================
	   ==
      ==  Compile migration
      ==
      ================================================================
	-->
	<target name="migration" depends="ext">
		<javac srcdir="${src.dir}" destdir="${classes.dir}" includes="migration/**" deprecation="on"  source="${source}"  debug="${debug}"/>
	</target>
	<!--
	   ================================================================
	   ==
      ==  Compile modelisation
      ==
      ================================================================
	-->
	<target name="modelisation" depends="ext, util">
		<javac srcdir="${src.dir}" destdir="${classes.dir}" includes="modelisation/**" deprecation="on" source="${source}" debug="${debug}">
			<classpath>
				<path refid="project.classpath"/>
				<pathelement location="${base}/dev/lib/Jama-1.0.1.jar"/>
			</classpath>
		</javac>
	</target>
	<!--
	   ================================================================
	   ==
      ==  Compile util
      ==
      ================================================================
	-->
	<target name="util" depends="">
		<javac srcdir="${src.dir}" destdir="${classes.dir}" includes="util/**" deprecation="on"  source="${source}"  debug="${debug}"/>
	</target>
	<!--
	   ================================================================
	   ==
      ==  Compile alljunk
      ==
      ================================================================
	-->
	<target name="alljunk" depends="all, migration, modelisation, essai, nonregressiontest, benchmark"/>
	<!--
	   ================================================================
	   ==
      ==  Compile All
      ==
      ================================================================
	-->
	<target name="clean">
		<delete dir="${classes.dir}"/>
		<delete dir="${dist.dir}"/>
		<delete dir="${docs.dir}"/>
		<delete dir="${classlibs.dir}"/>
	</target>
	<!--
	   ================================================================
	   ==
      ==  Create distribution bin
      ==
      ================================================================
	-->
	<target name="dist" depends="all, docs">
		<!-- Create the distribution directory -->
		<delete dir="${dist.dir}"/>
		<mkdir dir="${dist.dir}"/>
		<property name="PAdist.dir" value="${dist.dir}/ProActive"/>
		<mkdir dir="${PAdist.dir}"/>
		<!-- Put everything in ${classes} into the ProActive-${DSTAMP}.jar file -->
		<jar jarfile="${PAdist.dir}/ProActive.jar">
			<fileset dir="${classes.dir}">
				<include name="${proactive.dir}/**"/>
				<exclude name="${proactive.dir}/examples/**"/>
				<exclude name="${proactive.dir}/ic2d/**"/>
			</fileset>
		</jar>
		<jar jarfile="${PAdist.dir}/ProActive_examples.jar" basedir="${classes.dir}" includes="${proactive.dir}/examples/**"/>
		<jar jarfile="${PAdist.dir}/ic2d.jar" basedir="${classes.dir}" includes="${proactive.dir}/ic2d/**"/>
		<!-- 
			copy docs / scripts / src / compile / lib 
		-->
		<copy todir="${PAdist.dir}" includeEmptyDirs="no">
			<fileset dir="${base}">
				<include name="docs/api/**"/>
				<!--include name="docs/ic2d-api/**"/-->
				<include name="scripts/**"/>
				<include name="src/org/**"/>
				<include name="compile/**"/>
				<include name="lib/**"/>
				<include name="descriptors/**"/>
			</fileset>
		</copy>
		<!-- 
			create zip version of ProActive without source
		-->
		<zip zipfile="${dist.dir}/ProActive_2_0.zip">
			<zipfileset dir="${PAdist.dir}/docs" prefix="ProActive/docs"/>
			<zipfileset dir="${PAdist.dir}/scripts" prefix="ProActive/scripts"/>
			<zipfileset dir="${PAdist.dir}/lib" prefix="ProActive/lib"/>
			<zipfileset dir="${PAdist.dir}/descriptors" prefix="ProActive/descriptors"/>
		</zip>
		<!-- 
			create zip version of ProActive with source
		-->
		<zip zipfile="${dist.dir}/ProActive-src_2_0.zip">
			<zipfileset dir="${PAdist.dir}" filemode="755" prefix="ProActive"/>
		</zip>
		<!-- 
			create zip version of ProActive doc 
		-->
		<zip zipfile="${dist.dir}/ProActiveDoc.zip">
			<zipfileset dir="${PAdist.dir}/docs" prefix="ProActive/docs"/>
		</zip>
		<!-- 
			copy PDF Manual 
		<copy file="${base}/docs/ProActiveManual.pdf" todir="${dist.dir}"/>
		-->
		<!--
			create zip version of ProActive Manual 
		<zip zipfile="${dist.dir}/ProActiveManual.zip" basedir="${dist.dir}" includes="ProActiveManual.pdf"/>
		-->
	</target>
	<!--
	   ================================================================
	   ==
      ==  Create javadoc
      ==
      ================================================================
	-->
	<target name="docs">
		<!-- Create the javadoc directory -->
		<delete dir="${docs.dir}"/>
		<mkdir dir="${docs.dir}"/>
		<mkdir dir="${docs.dir}/api"/>
		<mkdir dir="${docs.dir}/ic2d-api"/>
		<javadoc packagenames="org.objectweb.proactive,org.objectweb.proactive.core.*,org.objectweb.proactive.ext.*" sourcepath="${src.dir}" destdir="${docs.dir}/api" author="true" version="true" use="true" windowtitle="ProActive API" doctitle="ProActive 2.0&lt;br>&lt;a href=&quot;org/objectweb/proactive/doc-files/index.html&quot;>(documentation is here)&lt;/a>&lt;br>" bottom="&lt;i>Copyright &#169; April 2004 INRIA All Rights Reserved.&lt;/i>" breakiterator="yes" additionalparam="-docfilessubdirs -excludedocfilessubdir CVS:test_documentation">
			<classpath refid="project.classpath"/>
			<link href="http://fractal.objectweb.org/current/doc/javadoc/fractal/"/>
			<group title="ProActive packages for end user" packages="org.objectweb.proactive"/>
			<group title="ProActive Core" packages="org.objectweb.proactive.core*"/>
			<group title="ProActive Core : Body" packages="org.objectweb.proactive.core.body*"/>
			<group title="ProActive Core : Components (implementation of the Fractal model)" packages="org.objectweb.proactive.core.component*"/>
			<group title="ProActive Extensions" packages="org.objectweb.proactive.ext*"/>
			<group title="ProActive Extensions : Security" packages="org.objectweb.proactive.ext.security*"/>
		</javadoc>
		<javadoc packagenames="org.objectweb.proactive.ic2d.*" sourcepath="${src.dir}" destdir="${docs.dir}/ic2d-api" author="true" version="true" use="true" windowtitle="IC2D API" doctitle="ProActive 2.0 - IC2D" bottom="&lt;i>Copyright &#169; April 2004 INRIA All Rights Reserved.&lt;/i>" breakiterator="yes">
			<classpath refid="project.classpath"/>
			<group title="IC2D Application : Interactive Control and Debugging of Distribution" packages="org.objectweb.proactive.ic2d*"/>
		</javadoc>
	</target>
	<!--
	   ================================================================
	   ==
      ==  Generate ProActive stubs for all classes in class
      ==
      ================================================================
	-->	
	<target name="stub">
	<echo message="${classes.dir}"/>
	<path id="test">
	    	<fileset dir="${classes.dir}" >
                  <include name="**/TimedMigrationManager.class"/>
               </fileset>
	    </path>  
	     <pathconvert pathsep=" " property="test-files" refid="test">
	    <!-- <map from="/home1/fabrice/workProActive/ProActive/classes/" to=""/>-->
	      <map from="${classes.dir}${file.separator}" to=""/>
	     </pathconvert>
	<java classname="org.objectweb.proactive.ext.util.StubGenerator" fork="true" dir="${classes.dir}">
	      <classpath refid="project.classpath"/>
	       <arg line="${test-files}"/>
	 </java> 
	</target>
	<!--
	   ================================================================
	   ==
      ==  Ibisc to generate stubs/skels
      ==
      ================================================================
	-->
	<target name="ibis">
		<!-- depends="ipl"> -->
		<delete>
			<fileset dir="${classes.dir}" includes="**/rmi*.java"/>
		</delete>
		<java classname="ibis.frontend.rmi.Main" fork="true" dir="${classes.dir}/org/objectweb/proactive/core/body/ibis/">
			<classpath refid="project.classpath"/>
			<arg value="org.objectweb.proactive.core.body.ibis.IbisRemoteBodyImpl"/>
		</java>
		<java classname="ibis.frontend.rmi.Main" fork="true" dir="${classes.dir}/org/objectweb/proactive/core/runtime/ibis/">
			<classpath refid="project.classpath"/>
			<arg value="org.objectweb.proactive.core.runtime.ibis.RemoteProActiveRuntimeImpl"/>
		</java>
		<javac srcdir="${classes.dir}" destdir="${classes.dir}" deprecation="on"  source="${source}"  debug="${debug}">
			<include name="**/*.java"/>
			<classpath refid="project.classpath"/>
		</javac>
	</target>
	
	
	<!--
	   ================================================================
	   ==
      ==  Call the IOGenerator to speed-up serialization with Ibis
      ==
      ================================================================
	-->
	<!--
	  we copy the proactive classfiles and unjar everything
	-->
	 <target name="rewrite">
	 <mkdir dir="${classlibs.dir}"/>
	 <copy todir="${classlibs.dir}">
	     <fileset dir="${classes.dir}" includes="**/*.class"/>
	</copy> 
	
         <unjar dest="${classlibs.dir}">
	    <fileset dir="${base}/lib">
		<include name="*.jar"/>
	    </fileset>
	 </unjar>
       <!--
         then we call the iogenerator
       -->
       	<java   classname="ibis.frontend.io.IOGenerator"
		taskname="IOGenerator"
		dir="${classlibs.dir}"
		failonerror="true"
		maxmemory="256m"
		fork="true">
	    <arg line="-dir ."/>
	    <classpath>
	       <pathelement path="${classlibs.dir}"/>
	       <path refid="project.classpath"/>
	    </classpath>
	</java>
	
    </target>
	
	<!--
	   ================================================================
	   ==
      ==  Compile non regression test
      ==
      ================================================================
	-->
	<target name="nonregressiontest" depends="testsuite">
		<javac srcdir="${src.dir}" destdir="${classes.dir}" includes="nonregressiontest/**" deprecation="on"  source="${source}"  debug="${debug}">
			<classpath refid="test.classpath"/>
		</javac>
	</target>
	<!--
	   ================================================================
	   ==
      ==  Run non regression test with TestSuite API
      ==
      ================================================================
	-->
	<target name="runTests" depends="testsuite, nonregressiontest">
		<delete file="${base}/compile/tests.log"/>
		<java classname="nonregressiontest.MainManager" fork="true">
			<classpath refid="test.classpath"/>
			<jvmarg value="-Djava.security.policy=${base}/compile/proactive.java.policy"/>
			<jvmarg value="-Dlog4j.configuration=file:${base}/compile/proactive-log4j"/>
		</java>
	</target>
	<target name="runTestsLocal" depends="testsuite, nonregressiontest">
		<delete file="${base}/compile/tests.log"/>
		<java classname="nonregressiontest.MainManager" fork="true">
			<classpath refid="test.classpath"/>
			<jvmarg value="-Djava.security.policy=${base}/compile/proactive.java.policy"/>
			<jvmarg value="-Dlog4j.configuration=file:${base}/compile/proactive-log4j"/>
			<jvmarg value="-Dnonregressiontest.descriptor.defaultnodes.file=/nonregressiontest/descriptor/defaultnodes/NodesLocal.xml"/>
		</java>
	</target>

	<target name="runTestsLocalIbis" depends="testsuite, nonregressiontest">
		<java classname="nonregressiontest.MainManager" fork="true">
			<classpath refid="test.classpath"/>
			<jvmarg value="-Djava.security.policy=${base}/compile/proactive.java.policy"/>
			<jvmarg value="-Dproactive.rmi=ibis"/>
			<jvmarg value="-Dibis.serialization=sun"/>
			<jvmarg value="-Dibis.name_server.host=localhost"/>
			<jvmarg value="-Dibis.name_server.pool=rutget"/>
			<jvmarg value="-Dibis.pool_host_number=1"/>
			<jvmarg value="-Dibis.name_server.key=12"/>
			 <jvmarg value="-Dibis.property.file=/home1/fabrice/workIbis/Ibis/properties"/>
			<jvmarg value="-Dnonregressiontest.descriptor.defaultnodes.file=/nonregressiontest/descriptor/defaultnodes/NodesLocalIbis.xml"/>
		</java>
	</target>
	
	<!--
	   ================================================================
	   ==
      ==  Compile benchmark
      ==
      ================================================================
	-->
	<target name="microTimer" depends="testsuite">
	        <exec dir="${src.dir}/org/objectweb/proactive/core/util/timer" executable="g++" os="Linux" >
			<arg line=" -shared -o libMicroTimer.so  MicroTimer.cc"/>
		</exec>
		<!--<exec dir="${src.dir}/org/objectweb/proactive/core/util/timer" executable="/usr/bin/ld" os="Linux">
			<arg line="  -G MicroTimer.o -o  libMicroTimer.so"/>
		</exec>-->
		<copy file="${src.dir}/org/objectweb/proactive/core/util/timer/libMicroTimer.so" todir="${base}/lib"/>
		<!--<copy toDir="${base}/lib">
			<fileset dir="${src.dir}">
				<include name="**/*.so"/>
				<include name="**/*.o"/>
			</fileset>
		</copy> -->
	</target>
	<target name="benchmark" depends="testsuite, microTimer">
		<javac srcdir="${src.dir}" destdir="${classes.dir}" includes="benchmark/**" deprecation="on"  source="${source}"  debug="${debug}">
			<classpath refid="test.classpath"/>
		</javac>
	</target>
	<!--
	   ================================================================
	   ==
      ==  Run benchmark with TestSuite API
      ==
      ================================================================
	-->
	<target name="runBench" depends="testsuite, benchmark">
		<java classname="benchmark.BenchCenter" fork="true">
			<env key="LD_LIBRARY_PATH" value="${classes.dir}/testsuite/timer/micro"/>
			<classpath refid="test.classpath"/>
			<jvmarg value="-Djava.security.policy=${base}/compile/proactive.java.policy"/>
			<jvmarg value="-Djava.library.path=${classes.dir}/testsuite/timer/micro"/>
		</java>
	</target>
</project>
